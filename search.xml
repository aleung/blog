<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Solaris中指定动态链接库路径的方法</title>
    <url>/blog/2001/12/08/Solaris-/</url>
    <content><![CDATA[<p>使用crle命令, 例如:<br>    crle -l &#x2F;usr&#x2F;lib -l &#x2F;usr&#x2F;local&#x2F;lib -i &#x2F;usr&#x2F;lib -i &#x2F;usr&#x2F;local&#x2F;lib -a &#x2F;usr&#x2F;lib&#x2F;libthread.so.1 -o &#x2F;usr&#x2F;lib&#x2F;lwp  </p>
<p>以上命令的作用  </p>
<ul>
<li>设置library路径为 &#x2F;usr&#x2F;lib 和 &#x2F;usr&#x2F;local&#x2F;lib </li>
<li>在这些目录建立cached list of libaries </li>
<li>指定用 &#x2F;usr&#x2F;lib&#x2F;lwp 中的 libthread.so 代替 &#x2F;usr&#x2F;lib 中的版本.</li>
</ul>
<p>然后执行<br>    crle -u<br>更新&#x2F;var&#x2F;ld&#x2F;ld.config文件  </p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>配置samba文件共享</title>
    <url>/blog/2002/01/19/Samba-configuration-file-sharing/</url>
    <content><![CDATA[<p>根据实践的经验，基本了解了samba配置方法，将它记录下来。   </p>
<p>一个基本的配置文件：   </p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span>  </span><br><span class="line">netbios <span class="attr">name</span> = SERVERNAME  </span><br><span class="line"><span class="attr">workgroup</span> = GROUPNAME  </span><br><span class="line">null <span class="attr">passwords</span> = <span class="literal">yes</span> (是否允许用户设置空密码,default=<span class="literal">no</span>)  </span><br><span class="line">log <span class="attr">file</span> = /var/log/samba/log.%m  </span><br><span class="line">max log <span class="attr">size</span> = <span class="number">500</span>  </span><br><span class="line">dns <span class="attr">proxy</span> = <span class="literal">No</span> (default=<span class="literal">yes</span>,一般情况下没有必要)  </span><br><span class="line"><span class="attr">security</span> = user (相当于WinNT/<span class="number">2000</span>的文件共享)  </span><br><span class="line">encrypt <span class="attr">passwords</span> = <span class="literal">yes</span>  </span><br><span class="line">guest <span class="attr">ok</span> = <span class="literal">yes</span> (default=<span class="literal">no</span>,是否允许guest访问,即不需要输入密码)  </span><br><span class="line">(在global节中的这个设定会作为各共享资源设定的缺省值)  </span><br><span class="line">  </span><br><span class="line"><span class="section">[homes]</span> (每个用户会看到各自的home目录)  </span><br><span class="line"><span class="attr">comment</span> = Your Home Directories  </span><br><span class="line">read <span class="attr">only</span> = <span class="literal">No</span>  </span><br><span class="line"><span class="attr">browseable</span> = <span class="literal">No</span>  </span><br><span class="line">  </span><br><span class="line"><span class="section">[share]</span> (share to all, read only)  </span><br><span class="line"><span class="attr">comment</span> = Share Folder  </span><br><span class="line"><span class="attr">path</span> = /home/samba  </span><br><span class="line">guest <span class="attr">ok</span> = <span class="literal">yes</span> (在global中设定了,这里可以不写)  </span><br><span class="line"><span class="attr">writeable</span> = <span class="literal">no</span>  </span><br><span class="line">  </span><br><span class="line"><span class="section">[source]</span> (leo,frank可读写<span class="comment">;james只读;其余用户无权访问)  </span></span><br><span class="line"><span class="attr">path</span> = /home/source  </span><br><span class="line">valid <span class="attr">users</span> = james,leo,frank(可访问此资源的用户的列表,如果不指定,任何用户都可以访问)  </span><br><span class="line">write <span class="attr">list</span> = leo,frank (有写权限的用户的列表)  </span><br><span class="line"><span class="attr">writeable</span> = <span class="literal">no</span> (其他用户不可写)  </span><br><span class="line">create <span class="attr">mode</span> = <span class="number">666</span> (保证新建的文件目录可以其他用户读写)  </span><br><span class="line">directory <span class="attr">mode</span> = <span class="number">777</span>  </span><br><span class="line">force <span class="attr">group</span> = nobody (无论用户以什么身份login,强制为此user/group<span class="comment">;不一定需要)  </span></span><br><span class="line">force <span class="attr">user</span> = nobody  </span><br></pre></td></tr></table></figure>

<p>在samba的权限控制中, 关键的是以下一些参数.<br>invalid users<br>valid users<br>guest ok &#x2F; public (两种写法都可以)<br>这三个参数, 优先级从高到低, 控制用户是否可以&#x2F;是否需要login到一个服务.<br>write list<br>read list<br>readonly &#x2F; writeable (两种写法都可以)<br>这三个参数, 优先级从高到低, 控制用户是否有写权限.   </p>
<p>用户要访问一个服务(共享目录),<br>首先要成功login到这个服务(或者这个服务是public, 不需要login),<br>然后再根据配置决定他是否有写的权限. 只要login进入了,就起码有读权限了.   </p>
<p>另外, unix文件系统的权限设置是个前提, 无论samba的访问权限怎么设置,<br>用户在unix中无权访问的文件在samba中也肯定是不能访问的.   </p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>邮件系统发信缓慢问题的解决</title>
    <url>/blog/2002/03/13/Mail-system-mail-the-letter-slow-solution-of-the-problems/</url>
    <content><![CDATA[<p>公司的邮件系统, 从内部网(10.x.x.x)连接SMTP端口非常慢, 但使用webmail或者从internet连接就一切正常.  </p>
<p>检查发现缓慢是是smtpd对client IP进行DNS lookup引起的, 需要等待lookup超时.  </p>
<p>解决办法:  </p>
<ul>
<li>确认邮件服务器使用本机作为DNS ( &#x2F;etc&#x2F;resolve.conf, &#x2F;var&#x2F;spool&#x2F;postfix&#x2F;etc&#x2F;resolve.conf )  </li>
<li>在本机配置DNS服务, 在本机DNS上负责解析反向域 10.in-addr.arpa. 其余域名forward给外部DNS解析.</li>
</ul>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Solaris中sendmail不断报错的方法</title>
    <url>/blog/2003/04/05/Solve-Solaris-sendmail-constantly-in-the-method-of-error/</url>
    <content><![CDATA[<p>为解决sendmail不断报出unable to qualify domain name问题，修改&#x2F;etc&#x2F;hosts文件，在本机主机名后面加上一个点。但是引起了另外的问题，当程序调用gethostbyname()时失败。解决方法是在&#x2F;etc&#x2F;hosts为本机IP指定两个名字，一个仅仅是主机名，另一个是主机名加域名（在这里没有域名，只是加个点）。</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>人机交互方式的跃进</title>
    <url>/blog/2003/05/15/The-man-machine-interactive-way-taken/</url>
    <content><![CDATA[<p>找到一个神奇的软件Denim: <a href="http://guir.cs.berkeley.edu/projects/denim/">http://guir.cs.berkeley.edu/projects/denim/</a>  </p>
<p>这是一个辅助web设计&#x2F;界面设计,用来画草图的软件, 使用鼠标或者手写版, 在屏幕上绘制草图.  </p>
<p>如果在软件设计领域也有这样的软件就好了, 例如用来画UML. 软件需要有一定的识别能力, 能够辨认出用户画的是什么图形, 变成规范的格式. </p>
<p>今天把手写板装上，试用了Denim，确实不错。  </p>
<p>因为经常在写文档中需要有些框图之类的，我是想用手写板来画，并且利用软件的自动图形识别来将画出的图元规范化，那就方便了。于是在网上找有没有这样的软件。用google搜索，发现手绘草图的识别方面的论文不少，但是实用化软件就没几个。  </p>
<p>看介绍，比较好的一个软件是Corel的Grafigo（<a href="http://www.corel.com/grafigo/">http://www.corel.com/grafigo/</a>），这是一个专门for Tablet PC的软件，在Win2k上不能运行，也不能尝试实际效果。  </p>
<p>另外一个是riteShape，是供开发pen application shape recognition的SDK，网上有在线demo（<a href="http://pi.parascript.com/piweb/products/riteshape/rs_demo.asp">http://pi.parascript.com/piweb/products/riteshape/rs_demo.asp</a>），这个技术用在了该公司的riteMail中。riteMail是一个邮件client，提供了手写、图形邮件，包括了英文文字识别、图形识别的功能。  </p>
<p>最终还是没有找到desktop PC可用的合适的软件。不过在找的过程中，发现了tablet PC是很特别的一个产品，它的手写输入、数字墨水带来了电脑人机交换中的一个新的概念。  </p>
<p>另外也发现一个不错的软件SketchBook Pro，这个软件是用手写笔来绘画图形的，但不是面向美术设计师的，故此不象painter那么复杂，可以供你随时在上面涂鸦，可能作为草稿本更适合。另外它提供layer，故此可以在现有的图片上面做注释，例如在设计稿上标示出修改建议等。我要找它的注册码才行。  </p>
<p>在做构思时，我更习惯用笔在纸上写画而不习惯在电脑上面写，因为笔纸有最大的自由度，不会因为工具的使用的限制而成为思维的障碍。由于技术上的限制，人机交互目前仍然只能在比较低级的层面，主要是键盘和鼠标，是人要改变自己的习惯去适应电脑，实际并不能顺畅，故此在某些情况下会成为思维的限制，因为要把精力分散在如何操控上了。如今Microsoft提出Tablet PC，有人认为只是概念抄作，但我觉得这已经超出仅仅输入设备的范畴了，而将是人机交换方式的一大跃进，这些挺有意思的，会是以后的方向，电脑与人的交换会越来越人性化。  </p>
<p>在eDonkey网上发现有WinXP Tablet PC版本，不知能否下载下来。据说这个版本只是在XP pro基础上加了手写方面的功能，那么应该可以在台式机上安装吧？第一次对XP这么有好感:)  </p>
]]></content>
      <tags>
        <tag>Software</tag>
        <tag>UX</tag>
      </tags>
  </entry>
  <entry>
    <title>Garmin Rino 110 试用</title>
    <url>/blog/2003/05/17/Garmin-Rino-110-/</url>
    <content><![CDATA[<p>Garmin Rino 110 是一款GPS&#x2F;对讲机二合一的产品。<br>我从朋友处借得一对，试用了一周时间，把感受说说。   </p>
<p>【外形】   </p>
<p>Rino的外形更象对讲机，而不是GPS。比起一般民用对讲机体积重量都要大一些，特别是天线比较夸张。相比起来eTrex系列的机型会更加轻巧些。不过Rino握在手里的手感还是相当不错的。   </p>
<p>Rino的屏幕面积偏小，相应的象素也少了，我认为这是比较大的一个缺点。我用惯了GPS 76，这小屏幕让我很不习惯。对于Rino 110来说，这个象素值还算是够用的，但我估计对于带map的Rino 120就不够了，看地图时屏幕越大越好用。   </p>
<p>与Garmin的大多数机型一样，都是符合IPX7防水标准，具体标准忘了，好像是1米水深多少分钟什么的。反正对于中小雨和意外落水都不会有问题，至于要拿着它游泳就难说了:) 不过也有用户评价中提到，他忘了把rino从衣服里取出来，放洗衣机里洗了，拿出来后一点问题都没有。   </p>
<p>【操作】   </p>
<p>我接触过的Garmin的民用手持GPS基本是两种风格的操作界面，一个是GPS系列，一个是eTrex系列。Rino应该是属于eTrex风格，这种风格使用了一些图标、动画，看来是与产品定位有关，定位为消费类电子产品，相对GPS系列的专业型较为人性化一点。具体喜欢哪个就见仁见智了，我就习惯GPS系列的界面，清晰明了；但也可能一些用户会喜欢eTrex系列的界面，亲切简单些。   </p>
<p>Rino 110用于GPS操作的只有2个按钮和一个方向按钮，方向按钮可以向四个方向拨动，另外垂直按下的时候起确认的功能。这个方向按钮大大减少了体积，不过也有问题，垂直按下的时候很容易用力稍偏，变成了按下方向。GPS 76的功能键有7个按钮和一个方向按盘，在操作上便捷很多，Rino中需要在菜单中选择或者用按键组合的操作，在GPS 76中直接有专用按钮。   </p>
<p>我用惯了GPS 76，感觉Rino的操作比较麻烦。在这方面，GPS 76比起eTrex&#x2F;Rino系列是胜了一筹的(eTrex的按钮也没有GPS系列的齐备)。相比GPS 76，Rino的屏幕不够大，按键少，限制了它的操作的直接性。不过，Rino有个优越的地方是输入字母时屏幕显示一个键盘出来，比起GPS 76要从A、B、C、D一直按下去方便多了。   </p>
<p>【GPS功能】   </p>
<p>对着说明书一项项使用了Rino 110的GPS功能，感觉与GPS 76相差不大，基本上所有功能都齐备了，虽然有些功能的使用方法有所不同，或者能力上稍有差异，例如GPS 76的用户定制项更丰富些。我估计，相近档次、相同应用范围的机型，在功能上都不会有多大差别的，如果关心具体功能的，建议到Garmin网站上下载说明书来看。   </p>
<p>从功能上可以看出，Rino是一个专门为户外活动而设计的产品。例如它有垂直上升速度的显示，可以看出当前平均每分钟上升或下降了多少米，这个功能在别的机型没有见过（可能带气压海拔表的Vista会有）。   </p>
<p>Rino 110比起GPS 76多了日历、记事、闹钟、秒表、游戏等功能。GPS 76是航海、户外型的产品，多了些航海用的功能。在某些功能上，GPS 76稍为显得“专业”一点，但我觉得Rino 110的GPS功能对于户外活动来说是完全满足要求的。   </p>
<p>Rino有数据线接口，可以与电脑连接，在电脑与GPS之间传输数据。数据线需要另外购买，如果要充分发挥GPS的功能，建议还是配上数据线，在电脑上用OziExplorer&#x2F;MapSource之类的软件来做路线规划、路线分析非常方便。   </p>
<p>【GPS性能】   </p>
<p>Rino和GPS 76系列一样，都是采用螺旋天线的，据网上资料说螺旋天线比起eTrex系列的patch天线接收效果要好。根据我使用GPS 76的经验，对GPS 76的接收效果相当满意，这次粗略的比较了一下Rino 110和GPS 76的接收能力，感觉不相上下，不过具体效果还是要等在野外环境使用过才能有体会。eTrex系列我只用过最低档的普通eTrex，树林中接收效果不好，不知道高档些的Legend&#x2F;Venture&#x2F;Vista等是否有改进。   </p>
<p>另外，在开机搜星时，锁定卫星信号的时间好像比GPS 76要稍长些，只是感觉，没有测定过。开机后的工作很正常，已经锁定的卫星信号在丢失后再次接收到时能立即锁定。建议在一个开阔地方开机，停留等待GPS接收锁定尽量多的卫星，这样在后面的数个小时行进过程中都能保证有效捕获卫星信号。这个方法对于任何GPS都适用。   </p>
<p>【对讲功能】   </p>
<p>对讲功能工作在FRS&#x2F;GMRS频段。FRS频段发射功率0.5w，GMRS频段发射功率2w，但我在对比使用中感觉GMRS的发射功率可能达不到2w。它使用的频段与中国大陆的民用频段不同，不能与T6200c之类的对讲机通讯，但可以与国外带入的FRS对讲机通讯。   </p>
<p>用一对Motorola T6200c（国内民用频段）与Rino 110（FRS频段）在市郊山野公园做对比测试，不知是否与地形、干扰等因素有关，两对对讲机的效果都不理想，但对比起来，Rino的对讲效果不如Motorola T6200c，Rino音质不够清晰显得较沉混，在距离远时Rino的通话断续现象要比Motorola更为严重。   </p>
<p>我觉得Rino的通话效果不佳是它的另一大缺点，让它的价值打了折扣。   </p>
<p>【座标传输】   </p>
<p>出门时，你可以同时带一个GPS和一个对讲机，但有一点是做不到的：座标传输。   </p>
<p>Rino可以在每次通话时发送自己的座标，其他机器接收到后就会在map上显示出对方所在的位置来，并且能够将每次座标变化连接为轨迹。用户可以设置自己的名字和图标。在户外活动中，这个功能极其好用，只要大家保持定时通话，在GPS上就能看到各人的位置、距离、行进路线。我认为这是Rino最有价值的一个功能。还有WayPoint发送功能，也是Rino所独有的。   </p>
<p>只有在使用FRS频段时才能传输座标，使用GMRS频段时不行。这样使得GMRS频段没有什么使用价值了，因为座标传输非常有用。   </p>
<p>根据FCC的规定，座标传输时间间隔必须大于30秒，如果离上次发送座标的时间不够30秒，即使按通话键，它也不会把座标发送出去。这样的限制带来了不便，例如通讯质量不好的时候可能对方不能成功接收座标，那就至少要等30秒才能再次传输，造成座标不能保持更新。不过FCC的规定硬件厂商只能按着执行了。   </p>
<p>新的软件版本还增加了座标查询功能，也就是主动要求对方提供座标，而不是被动的接收。不过我测试的这两台都还没有升级软件。   </p>
<p>【供电】   </p>
<p>使用3节五号电池，可以使用NiMH充电电池。如果用充电电池，充电也许有些麻烦，因为大多数充电器都是要两节一起充的，而它用3节，如果能找到能对单个电池充电的充电器，对电池寿命也许有些好处。没有测试过耗电量，不过根据使用其他机型的经验，GPS和对讲机都是很耗电的，估计出门还是要多带电池才行。   </p>
<p>【我的评价】   </p>
<p>Rino的产品定位是面向“非技术型”用户，专门适应于户外活动用途的。基本上可以认为它是源自eTrex系列产品。   </p>
<p>这款机型很适合于户外活动爱好者使用，提供了户外活动中需要的GPS功能（可以说是全部功能），接收效果应该不错。使用简便，不难学习，但是缺乏一些面向“技术型”用户的高级特性。带有FRS&#x2F;GMRS对讲机功能，但是，对讲机部分的性能一般，通话效果比不上Motorolla的民用对讲机。要注意它使用的频段与中国大陆的民用频段不同，不能与T6200c之类的对讲机通讯，但可以与国外带入的FRS对讲机通讯。独特的传输座标功能，可以跟踪定位其他用户，确认位置、距离，对于在野外行进非常实用，适合户外活动中的团队内通讯。   </p>
<p>此机优点在于GPS、对讲机二合为一，在户外活动中能少带一件东西，可以带来很多方便，而且两者结合的特有座标传输功能很有实用价值，起到了1+1&gt;2的效果。但缺点是GPS、对讲机独立来看都达不到同类产品的优秀水平，特别是对讲部分。GPS部分Rino 110也许与eTrex Venture同一档次，Rino 110在功能、接收上略占优势，屏幕大小上占劣势。不过这个比较没有考虑价格因素，从价格角度考虑，它的市场价格还是相当实惠的，关键要看购买者在性&#x2F;价之间如何权衡。   </p>
<p>由于屏幕小，摆放也不方便（不知道是否有支架配件），不适合于用车载使用。不建议购买带地图功能的Rino 120。   </p>
<p>本人拥有GPS 76，所以主要是用GPS 76与Rino 110作比较，但老实说这样对rino有点不公平，因为GPS系列是比eTrex、Rino系列要高一个档次的（从价钱就可以看出来）。   </p>
<p>以上为试用过程中的个人感受，已尽量客观的描述，但也包含了个人观点。由于认识有限，不能保证内容的准确性，仅作为参考，选购产品时还是要根据自己的因素来判断。另外，未经本人同意，不得将本文全部或部分内容用于商业用途。   </p>
<p>Garmin产品的参数比较可以查这个网址：<a href="http://www.garmin.com/outdoor/compare.jsp">http://www.garmin.com/outdoor/compare.jsp</a></p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>给WebCatcher作者的建议（个人开发软件的开发管理问题）</title>
    <url>/blog/2003/05/29/The-author-s-suggestion-to-WebCatcher-personal-development-software-development-management-/</url>
    <content><![CDATA[<p><a href="http://www.wizissoft.com/cn">WebCatcher</a>是我非常喜欢的一个软件，作者很热情的在论坛中解答问题、了解意见。我觉得个人开发软件同样存在着软件开发管理的问题，这是我写给他的一个建议： </p>
<hr>
<p>估计这段时间老魏也够烦的：）</p>
<p>问题一个接一个，用户意见也不少。。。</p>
<p>我对这个软件还是很欣赏的，作者的技术水平也不错。</p>
<p>不过这次在版本升级的过程中暴露出了在开发管理中的问题，呵呵，一个人写程序也是要有开发管理的，因为随着软件规模增大、复杂性增加，遇到的问题也会越来越多。</p>
<p>不知道作者有没有用版本管理软件来管理源代码，用版本管理软件的分支－合并功能可以做到同时维护旧版本的bug和增加新版本的功能，另可避免同样的bug重复出现。已发布版本可以不断出bug fix版本，但不包括新功能；开发中版本包含新功能，可以定时发布供测试。大多少用户还是希望软件把工作稳定放在第一位的，而不是当测试者。</p>
<p>软件的发布的细节也不够细致，例如供下载的测试版本没有区分版本号，没有详细change log。无论修改得多还是少，只要是公开&#x2F;半公开发布的，都必须要有不同的版本标识，小改动的发布可以只更改子版本号或者build序列号，但一定要能跟旧版本区分。change log是让用户（也是让开发者自己）知道各版本的区别的，也不应该省略。</p>
<p>上次提过这个意见： <a href="http://211.92.136.88/~wsj/BBS/viewtopic.php?t=578">http://211.92.136.88/~wsj&#x2F;BBS&#x2F;viewtopic.php?t&#x3D;578</a><br>其实并不是说要让用户自己去添加bug信息，这个还是应该由作者（或者找一个专人）做的，将用户反馈收集整理后添加。用不用专门软件也不是很重要，专门软件用起来方便些，不过开始的安装配置和学习使用也麻烦，重要的是有这样的流程，并且能给用户反馈。例如，用户发现了问题，一查就可以知道这个问题是否意见被别人发现了，在哪个版本已经修正，或者是有什么临时的解决方法。</p>
<p>作者与用户沟通的态度很令人赞赏，回答问题、接受建议都很认真诚恳。不过有些细节上还可以更进一步，例如用户发现一个bug，作者马上说“谢谢，我会尽快改进”，用户会很高兴，因为作者重视他的意见。可是，这个bug什么时候修改了，在哪个版本中？没有了下文。用户只好一个个版本下载试用，然后发现自己提到的bug还是存在，而且还多了一些新的问题，长久下去可能就会厌烦而放弃这个软件了。作为用户，关心的是软件是否能符合自己的需求，如果他某一天在新版本change log中看到自己提出的问题意见解决了，才是真正的心满意足。个人做软件比起大公司的优势也在于可以跟最终用户更加贴近，实际上，好的个人软件的用户忠诚度往往比大公司的软件更高。</p>
<p>另外给个建议，作者的免费终生升级策略以后也许要考虑改改，否则你只能靠发展新用户来获得收入，而随着用户增加，支持的压力却越来越大。用适当的金钱来换取良好的服务、功能升级，对于用户来说也是很合理的。老实说，如果作者因为经济原因不能继续软件的开发维护，对于已有用户来说是更大的损失。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>在关系数据库中保存树状结构</title>
    <url>/blog/2003/06/03/In-the-relationship-between-database-to-store-the-tree-structure/</url>
    <content><![CDATA[<p>看了 <a href="http://searchdatabase.techtarget.com/tip/1,289483,sid13_gci537290,00.html">Trees in SQL</a> 这篇文章, 提出了一个巧妙的方法来在关系数据库中保存树状结构. 在记录中不是保存父子关系, 而是记录着树的遍历的编号, 通过利用编号可以在单个SQL语句中获取某个节点的所有子节点等操作.<br>据介绍, 著名论坛jive在2.5版本起增加了catalog, 就是用这种方法实现树状关系帖子的保存.  </p>
<p><a href="http://searchdatabase.techtarget.com/tip/1,289483,sid13_gci537290,00.html">http://searchdatabase.techtarget.com/tip/1,289483,sid13_gci537290,00.html</a>  </p>
<p><em>需要注册一个帐号才能进入上面的连接. 本来想直接帖出来, 可是转贴后格式会乱</em></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>版本控制的软件</title>
    <url>/blog/2003/06/12/Version-control-software/</url>
    <content><![CDATA[<p>网上找到一些版本控制的软件。</p>
<p>一个是TortoiseCVS(<a href="http://www.tortoisecvs.org/">http://www.tortoisecvs.org</a>)，是CVS client as windows shell extension，能够直接在explorer里面用右键菜单来操作。它是基于WinCVS代码开发的，与WinCVS各有千秋吧，WinCVS的功能更全面些。</p>
<p>另外一个是TortoiseSVN(<a href="http://tortoisesvn.tigris.org/">http://tortoisesvn.tigris.org/</a>)，是for subversion的。这个更另我感兴趣，因为我看好subversion，它比CVS更有技术优势。安装试用了，使用local repository时不需要安装subversion server，看来可以用它来管理自己的代码、网页等等了。</p>
<p>另一个是我也很关心的SVN-UP(<a href="http://svnup.tigris.org/">http://svnup.tigris.org/</a>): Java client gui for subversion and plugin for idea ide. 因为我喜欢用IDEA，不过这个软件还很不完善，要等以后的版本了。  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Java profilor</title>
    <url>/blog/2003/07/01/Java-profilor/</url>
    <content><![CDATA[<p>同事写的java程序执行很慢，但又找不出原因。我想起C程序可以通过profiler来检查时间耗在什么函数里面，java应该也有类似的工具。Google一把，找到以下几个软件：</p>
<ul>
<li><p>Mike’s Java Profiler <a href="http://mjp.sourceforge.net/">http://mjp.sourceforge.net/</a>   </p>
</li>
<li><p>SD’s Java profiler tool <a href="http://www.semdesigns.com/Products/Profilers/JavaProfiler.html">http://www.semdesigns.com/Products/Profilers/JavaProfiler.html</a>  </p>
</li>
<li><p>ej-technologie’s JProfiler<br><a href="http://www.ej-technologies.com/products/jprofiler/overview.html">http://www.ej-technologies.com/products/jprofiler/overview.html</a><br>这是商业软件，从screenshot看功能很多，界面很漂亮，但只有试用版本   </p>
</li>
<li><p>JProbe Profiler <a href="http://java.quest.com/jprobe/profiler.shtml">http://java.quest.com/jprobe/profiler.shtml</a><br>这也是商业软件，JProbe还有一系列用于java测试的软件</p>
</li>
</ul>
<p>在JAVA developer’s journal的best java profiler&#x2F;test tool投票中，JProfiler和JProbe名列第一和第三。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>自由主义的XP</title>
    <url>/blog/2003/07/10/Liberal-XP/</url>
    <content><![CDATA[<p>在<a href="http://www.chinaxp.org/">chinaxp</a>上看到<a href="http://199.243.248.196/forum/viewThread.go?parentId=1056538532746&forum=1">一段话</a>：</p>
<blockquote>
<p>到目前为止，个人觉得 XP 还是中小公司开发的最好模式。实现起来的确还是有难度，特别是 PP，不过总比 RUP 便于实施。RUP、CMM 比较容易得到 MBA 的青睐。主要原因就在于_事先规范好的重量级流程，给人一种“一切尽在掌握”的错觉_，哈哈，的确是错觉。英雄的时代已经过去，矫枉过正，现在软件开发中，人的因素重视不够啊。</p>
</blockquote>
<p>说得有道理，领导层总是喜欢严谨的纪律的，因此他们喜欢这些严谨的方法，轻量级方法太“自由主义”了，不好管:) </p>
<p>不过, 在我们这儿, 可是过于自由主义了, 缺乏的是规范.  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Top 75 security tools</title>
    <url>/blog/2003/07/14/Top-75-security-tools/</url>
    <content><![CDATA[<p>Top 75 security tools: <a href="http://www.insecure.org/tools.html">http://www.insecure.org/tools.html</a></p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>公交车运行监控系统</title>
    <url>/blog/2003/07/16/The-bus-operation-monitoring-system/</url>
    <content><![CDATA[<p>现在广州某些线路的公交车已经开始使用GPS跟踪调度，并且在站牌上实时显示车辆位置、预计到站时间。不知道什么时候能够推广到所有线路。</p>
<p>根据网上的资料，城市公交GPS定位调度系统由车载终端分系统，信息传输分系统，中心及线路调度管理分系统，信息发布分系统及电子站牌分系统五大部分组成。车载系统与中心的数据传输是通过电台或者手机短信进行。</p>
<p>不过，公交车的定位一定要靠GPS吗？我也有另外一个idea。</p>
<p>公交车是沿着固定路线行驶的，在路线上分布着大量站点，站点的距离都不太远，如果能够确定某车辆在哪个站点区间，一般来说这样的定位信息也足够了。</p>
<p>可以在各个车站设立无线电通讯基站，基站与中心有通讯链路（目前的GPS系统在车站有电子站牌，与中心也需要通讯链路）；车载系统为一个无线应答机。使用小功率通讯，通讯范围在数百米之内，即车站周边区域。这样，车辆行驶到一个车站附近，就能与此车站的基站联络上，基站根据车载系统发送的身份信息可以知道那些车辆进入了本站点范围，将信息传送给控制中心；电子站牌能将当前车辆位置显示出来（相比GPS系统，就不能给出预计到站时间，不过候车者知道车辆目前在哪个站也基本能估计出时间来）；车辆也能得到当前的车站信息，报站系统能自动报站。</p>
<p>GPS系统的优势：定位准确，实时性强，能随时传送其他大量信息。缺点：在城市的高楼、立交、高架桥中，GPS信号常会受到遮挡；无线传输系统的频率资源分配是个问题。</p>
<p>站点定位系统的优势：无线通讯仅在近距离区域，不受环境影响，频率资源占用少；车载系统相对简单。缺点：需要在各个车站安装无线基站系统，分散维护；定位只能精确到车站区间；在车站范围外无法与中心交换信息。</p>
<p>如果车辆与中心的实时信息传输非常重要，可以采用与GPS系统相同的车辆直接与中心无线通讯的方法，车站安装的是简单的无线信标，当收到车辆发出的查询信号时，自动返回车站身份信息，这样车辆就可知道目前在哪个车站范围。不过这个方案与GPS方案的区别就不大了，仅仅在于将GPS定位改为车站无线信标定位。</p>
<p>此外，目前的电子站牌设计也不尽合理，面积很大，显示信息量少。如果所有线路都用了电子站牌，不知道要多大才够。其实在现有站牌的每个站名下加个指示灯指示车辆位置就够了，最多就再加一个最近车辆到站时间的双7段LED。这样通用性强，不同线路、站名更改只需将上面标签换掉就行了，成本应该也可以低一些。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>cyrus imapd的邮件目录修复</title>
    <url>/blog/2003/07/17/cyrus-imapd-/</url>
    <content><![CDATA[<p>cyrus imapd的邮件目录修复：&#x2F;usr&#x2F;cyrus&#x2F;bin&#x2F;reconstruct, 邮箱quota查看与修复：&#x2F;usr&#x2F;cyrus&#x2F;bin&#x2F;quota，修复时要加 -f 参数。<em>注意：该命令必须以cyrus用户身份才能运行<br>且此quota不同于&#x2F;usr&#x2F;bin&#x2F;quota命令</em>  </p>
<p>&#x2F;var&#x2F;imap&#x2F;quota&#x2F;[a-z]&#x2F;user.* 文件是用户的quota信息，第一行是当前占用的quota，第二行是quota limit。  </p>
<p>当用户有d权限时，才会在quota达到特定值时发送warrning信件。不过，正常使用的用户都是有d权限的。  </p>
<p><a href="http://asg.web.cmu.edu/cyrus/cyrus-overview.html">http://asg.web.cmu.edu/cyrus/cyrus-overview.html</a></p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>What is FXP?</title>
    <url>/blog/2003/07/21/What-is-FXP-/</url>
    <content><![CDATA[<p>什么是FXP？以前就听说FlashFXP这个软件可以在两台ftp之间直接传输文件，不需要中转。  </p>
<p>在网上查了一下资料，好像fxp并不是一种新的协议，而是对ftp中的proxy命令的巧妙运用。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP代码的格式化工具</title>
    <url>/blog/2003/07/22/PHP-/</url>
    <content><![CDATA[<p>寻找一个PHP代码的格式化工具, chedong的主页上介绍了phpCodeBeautify, 下载试用一下, 还是开发版, 效果不是很满意.  </p>
<p>以前我用过astyle,并且自己改成phpstyle, 但它毕竟只是为C++&#x2F;Java设计, 对PHP处理不是很全面.<br>在google上搜索, 有些是要付钱买的, 不感兴趣.<br>BeautifyPHP(<a href="http://www.bierkandt.org/beautify/">http://www.bierkandt.org/beautify/</a>)有个online demo, 感觉还不错. 而且它直接就是php写的!<br>另一个是PHPIndent(<a href="http://www.palfrader.org/phpindent/">http://www.palfrader.org/phpindent/</a>), 用perl写的, 没有试, 因为BeautifyPHP感觉可以了.  </p>
<p>顺便还发现了一个工具GNU Source-highlight <a href="http://www.gnu.org/software/src-highlite/">http://www.gnu.org/software/src-highlite/</a>, 能够将多种源程序生成HTML文件,并且语法加亮.  </p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>Robocode的线程与执行次序</title>
    <url>/blog/2003/08/05/Robocode-/</url>
    <content><![CDATA[<p>Robocode的每个机器人都是一个线程，线程调度为非强占式，由战斗管理线程依次调度运行。每个线程执行到一个阻塞函数的时候，交出cpu占用权。对于AdvancedRobot，阻塞函数是excute()。  </p>
<p>从这个角度而言，可以把robocode看作是回合制的游戏，每个回合各个robot设定要做些什么操作，即调用setXXX()，调用excute()完成本回合的操作设定。各个robot都设定完后，战斗模拟模块模拟执行各个robot的动作，并且在屏幕显示结果。下个回合，robot线程在excute()下面继续执行，直到再次调用excute()为止。  </p>
<p>不过，setXXX()设定的操作，往往是在一个回合中执行不完的。在robocode中，一个回合是游戏中的一个时间单位，各个元素的运动都有一定的速度，需要一定单位的时间才能完成。如果上回合中设置的动作还没有完成，本回合又重新设定了，就会把新动作覆盖旧动作。  </p>
<p>事件处理函数onXXX()，看起来是在事件发生的时候立即执行的，其实不然，还是要在回合中轮到这个robot的时候才能执行。而且若在队列中有多个事件，而某个事件处理函数调用了excute()结束了本回合的动作，那么剩下的事件就要等到下个回合才能处理了。因此，onXXX()改变的只是某个线程内部的执行次序，并不改变robot线程之间的执行次序。  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Landsat7卫星及遥感图象处理</title>
    <url>/blog/2003/08/13/Landsat7-/</url>
    <content><![CDATA[<p>LANDSAT是美国陆地探测卫星系统。从1972年开始发射第一颗卫星LANDSAT 1，到目前最新的LANDSAT 7。</p>
<p>LANDSAT 7 卫星于99年发射，装备有Enhanced Thematic Mapper Plus(ETM+)设备，ETM+被动感应地表反射的太阳辐射和散发的热辐射，有8个波段的感应器，覆盖了从红外到可见光的不同波长范围。</p>
<p>ETM+比起在LANDSAT 4、5上面装备的Thematic Mapper(TM)设备在红外波段的分辨率更高，因此有更高的准确性。</p>
<p>LANDSAT 7 的一些总体数据：</p>
<ul>
<li>7个光谱波段和一个全色波段 </li>
<li>观察宽度达185km </li>
<li>15、30、60、80米精度 </li>
<li>离地705km太阳同步轨道 </li>
<li>16天运行周期 </li>
<li>覆盖范围为南北纬81度之间区域</li>
</ul>
<p>ETM+的波段：</p>
<ol>
<li>0.45-0.52微米蓝绿波段, 用于水体穿透, 土壤植被分辨 </li>
<li>0.52-0.60微米绿色波段, 用于植被分辨 </li>
<li>0.63-0.69微米红色波段, 处于叶绿素吸收区域, 用于观测道路&#x2F;裸露土壤&#x2F;植被种类效果很好 </li>
<li>0.76-0.90微米近红外波段, 用于估算生物数量, 尽管这个波段可以从植被中区分出水体，分辨潮湿土壤，但是对于道路辨认效果不如TM3。 </li>
<li>1.55-1.75微米中红外波段, 这被认为是所有波段中最佳的一个, 用于分辨道路&#x2F;裸露土壤&#x2F;水, 它还能在不同植被之间有好的对比度, 并且有较好的穿透大气、云雾的能力。 </li>
<li>10.5-12.5微米热红外波段, 感应发出热辐射的目标. 分辨率为60m. </li>
<li>2.08-2.35微米中红外波段, 对于岩石&#x2F;矿物的分辨很有用, 也可用于辨识植被覆盖和湿润土壤. </li>
<li>0.52-0.90微米全色波段, 得到的是黑白图象, 分辨率为15m, 用于增强分辨率, 提供分辨能力. (ETM+增加了这个波段，TM没有)</li>
</ol>
<p>以上波段除6、8外分辨率均为30m。</p>
<p>Landsat7 ETM+ 数据又分为多种，例如L0Rp, L1R和L1G.</p>
<ul>
<li>L1R: radiometrically corrected but not geometrically resampled. </li>
<li>L1G: radiometrically corrected and resampled for geometric correction and registration to geographic map projections.</li>
</ul>
<p>在使用这些卫星图象的时候，要先进行处理。通常是用多个波段的图象进行彩色合成，得到伪彩色图象。在合成前，各波段图象还要先做图象增强处理。</p>
<p>例如：MrSid卫星图象是用band7作为红色, band4作为绿色，band2作为蓝色合成的，简称为742。（MrSid用的是Landsat TM, 1987-1993拍摄数据，当时未有Landsat 7）；GeoGratis Landsat7 合成卫星图象是用743(RGB)。Terra为绿野做到北京图用的是542。</p>
<p>常用的合成方法：</p>
<ul>
<li>321：真彩合成。与肉眼所见接近；仅使用反射的可见光，受大气、云雾、阴影、散射的影响较大，通常对比度不高，感觉模糊（蓝色光散射严重）；对于海岸区域研究特别有用，因为可见光可穿透水面，观察到海底。 </li>
<li>432：近红外合成。颜色与肉眼所见完全不同；植被在近红外波段反射率特别高，因为叶绿素在此波段反射的能量大，因此在432图象中植被会明显表现为深浅不同的红色，不同类型植物有不同的红色色调；水会吸收差不多所有的近红外光，因此水面颜色很深近乎黑色。 </li>
<li>743&#x2F;742：短波红外合成。包含至少一个短波红外波段，短波红外波段的反射率主要取决于物体表面的含水量，因此这类图象可用于植被保护和土地研究。</li>
</ul>
<p>图象合成可以用Photoshop之类的图象编辑软件来做，缺点是不能做出带地理信息的GeoTiff图象。<a href="http://www.geogr.ku.dk/chips/">Chips</a>（哥本哈根图象处理系统）是一个专门用于遥感图象处理的软件，标准版是免费的。用它来制作3波段合成图象很容易。以下为简单使用方法：</p>
<blockquote>
</blockquote>
<p>Open WinChips, and from the <em>File</em> menu, select <em>New Project</em>. From the <em>File</em> menu, select <em>Add Object(s)</em>, and select the three images for the three bands you want to use in your composite image, and add them as _Chips Image_s. From the <em>File</em> menu, select <em>New Object</em>, then <em>Lookup Table</em>, then save the new Lookup Table file. From the <em>View</em> menu, select <em>New Image View</em>. In the <em>Image View Configuration</em> dialog, on the <em>Image</em> tab, select <em>Display Mode</em> as RGB. For each of the <em>(Red, Green, Blue)</em> choices, select the image for the band you want to use for the respective color. For <em>Lookup Table</em> select the Lookup Table you added earlier, then click <em>OK</em>. </p>
<blockquote>
</blockquote>
<p>You should now have a <em>Default Image View</em> window open, showing your 3-band color composite image. From the <em>Image View</em> menu, select <em>Lookup Table</em>, then <em>Enhance using Statistics for Entire Image</em>. Once the statistics are calculated for each of the colors, a <em>Modify Lookup Table</em> dialog will be presented. To see the effect of some basic image enhancement, click on <em>Hist. Equal.</em>. You can use <em>Reset</em> to undo the enhancement. Click on <em>Cancel</em> to close the dialog window. </p>
<blockquote>
</blockquote>
<p>To save the 3-band color composite image, from the <em>Image View</em> menu select <em>Export View To Standard Format</em>. Once you have saved the image file, you have the option of saving geocoding for the image. </p>
<p>参考：  </p>
<ul>
<li><a href="http://imaging.geocomm.com/features/sensor/landsat7/">http://imaging.geocomm.com/features/sensor/landsat7/</a>  </li>
<li><a href="http://members.shaw.ca/davepatton/landsat7.html">http://members.shaw.ca/davepatton/landsat7.html</a>  </li>
<li><a href="http://chesapeake.towson.edu/data/composite.asp">http://chesapeake.towson.edu/data/composite.asp</a>  </li>
<li><a href="http://chesapeake.towson.edu/data/raw_data.asp">http://chesapeake.towson.edu/data/raw_data.asp</a></li>
</ul>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>Java字符转换问题</title>
    <url>/blog/2003/08/18/Java-/</url>
    <content><![CDATA[<p>字符编码问题一直都是令人头痛，查阅资料，写下了《java 字符转换问题的学习笔记》。</p>
<h3 id="什么是字节流与字符流的转换-什么时候会做转换"><a href="#什么是字节流与字符流的转换-什么时候会做转换" class="headerlink" title="什么是字节流与字符流的转换? 什么时候会做转换?"></a>什么是字节流与字符流的转换? 什么时候会做转换?</h3><p>字符就是char类型, 是双字节的, 用unicode, 一个char就是实际上的一个字符；字节就是byte类型, 是单字节的，实际的字符串根据编码不同，用单字节或者双字节来表示。<br>常用的String类型核心就是char[]，String.length()就是char[]数组的大小，因此当encoding没有转换错误时，String长度是字符的个数，不管是中文还是英文。做字符处理的时候也从来不会出现截断半个字符的问题。<br>Java内部都是用char的，但是很多时候做输入输出就要用byte stream，例如文件、数据库、网络。<br>当数据要从char变为byte，或者byte变成char时，就要做转换。<br>同样的内容，用不同的编码方式(encoding)，byte stream是不同的，转换的时候需要指定使用的encoding。<br>JVM的file.encoding属性确定了JVM的缺省的编码&#x2F;解码方式：从而影响应用中所有字节流&#x3D;&#x3D;&gt;字符流的解码方式 字符流&#x3D;&#x3D;&gt;字节流的编码方式。在不同OS平台上，这是由locale决定的，缺省encoding在中文平台为GBK，英文平台为8859_1。  </p>
<h3 id="Java-I-x2F-O"><a href="#Java-I-x2F-O" class="headerlink" title="Java I&#x2F;O"></a>Java I&#x2F;O</h3><p>Reader和Writer核心是char，InputStream和OutputStream核心是byte。<br>专门有bridge类做Reader&#x2F;Writer与InputStream&#x2F;OutputStream的转换：InputStreamReader&#x2F;OutputStreamWriter。  </p>
<h3 id="UTF8与unicode"><a href="#UTF8与unicode" class="headerlink" title="UTF8与unicode"></a>UTF8与unicode</h3><p>准确的说，UTF8不是unicode，它也只是一种编码方式，不过它的编码空间可以容纳unicode的所有字符。因此UTF8是一种很适合于存储unicode的外码。UTF8是变长编码，中文3字节。  </p>
<h3 id="什么地方会发生转换？"><a href="#什么地方会发生转换？" class="headerlink" title="什么地方会发生转换？"></a>什么地方会发生转换？</h3><ul>
<li><p>从数据库到java程序 byte——〉char  </p>
</li>
<li><p>从java程序到数据库 char——〉byte  </p>
</li>
<li><p>从文件到java程序 byte——〉char  </p>
</li>
<li><p>从java程序到文件 char——〉byte  </p>
</li>
<li><p>从java程序到页面显示 char——〉byte  </p>
</li>
<li><p>从页面form提交数据到java程序 byte——〉char  </p>
</li>
<li><p>从流到java程序 byte——〉char  </p>
</li>
<li><p>从java程序到流 char——〉byte</p>
</li>
</ul>
<h3 id="源程序中的字符串"><a href="#源程序中的字符串" class="headerlink" title="源程序中的字符串"></a>源程序中的字符串</h3><p>最早的字节流解码过程从javac的代码编译就开始了，写在源文件中的字符串是按照一定的编码方式的（如gbk），java编译器根据缺省的encoding来对源代码中的字符串做解码，在java bytecode中存储为unicode char。  </p>
<h3 id="数据库中的字符编码方式"><a href="#数据库中的字符编码方式" class="headerlink" title="数据库中的字符编码方式"></a>数据库中的字符编码方式</h3><p>数据库中的东西都是二进制存放的，支持任何数据，理论上说，与编码并没有关系。不过，如果没有指定字符集，在排序、匹配的时候有问题，接口的地方也会出现问题。<br>因此就涉及到以什么编码方式来保存到数据库中了。平常我们用数据库工具或者其他程序写数据库时，都是直接用系统编码方式，也就是gbk。但是，JDBC在访问数据库时，缺省是用数据库的字符集，通常为8859_1的，本来应该是gbk-&gt;unicode却变成了8859_1-&gt;unicode,就会出现乱码。连接串中加上参数可以强制jdbc按照gbk做转换。<br>jdbc:mysql:&#x2F;&#x2F;localhost&#x2F;test?useUnicode&#x3D;true&amp;characterEncoding&#x3D;GBK<br>不过这样数据库还是只能支持gbk，如果写入big5码，同样会出现转换错误的问题。最佳方案还是用UTF8来编码，这样可以容纳unicode所有字符，覆盖了gbk、big5等各个字符集的范围。<br>MySQL原来不支持UTF8，直到目前的最新版本4.1才加入unicode支持，但目前4.1版本还在alpha阶段。  </p>
<h3 id="Swing的字符集问题"><a href="#Swing的字符集问题" class="headerlink" title="Swing的字符集问题"></a>Swing的字符集问题</h3><p>从目前的试验看来，swing的组件会自动根据系统encoding做转换，并不需要干预。  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Java</tag>
        <tag>i18n</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL是不会理会字段的NOT NULL标记的!</title>
    <url>/blog/2003/08/18/MySQL-NOT-NULL-/</url>
    <content><![CDATA[<p>原来MySQL是不会理会字段的NOT NULL标记的!<br>按照MySQL manual中1.8.5.2节的说法: 当插入的字段的值不符号要求的时候, 不会出错, 而是用一个最接近的”合理”值来替代. 对于NOT NULL的varchar字段, 替换的值是空字符串’’. 这不是等于没有设定NOT NULL吗? 真是莫名其妙.<br>只好在程序里面来控制了</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Swing components refresh</title>
    <url>/blog/2003/08/19/Swing-components-refresh/</url>
    <content><![CDATA[<p>Java swing编程，更改了一个JPanel的内部components后，需要改变一下窗口大小，新内容才能显示出来。<br>解决方法：调用panel.validate()。<br>对于container，添加或者改变了对象后，需要调用validate()才能重新布局并显示。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Java“错误模式”</title>
    <url>/blog/2003/08/20/Java-/</url>
    <content><![CDATA[<p>《诊断 Java 代码》这组文章提到了很多种“错误模式”，有时间值得看看。<br><a href="http://www.ibm.com/developerWorks/cn/java/j-diag/index.shtml">http://www.ibm.com/developerWorks/cn/java/j-diag/index.shtml</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Eclipse的i18n/l10n辅助功能</title>
    <url>/blog/2003/08/22/Eclipse-i18n-l10n-/</url>
    <content><![CDATA[<p>Java程序的本地化，做法都是在程序中不直接写死字符串，而是通过ResourceBoundle的getString()方法，在本地语言的properties文件中读取出翻译后的字串。<br>对于已经开发好的程序，找出源代码中写死的字符串工作相当繁琐，Eclipse有这方面的辅助工具。<br>选择文件，右键菜单 source-&gt;Extenalize Strings 打开工具，能够找出源文件中的所有字符串，选择那些需要翻译，自动替换并生成properties文件。  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>超级玩具小车</title>
    <url>/blog/2003/08/26/Super-toy-car/</url>
    <content><![CDATA[<p>一个神奇的project, 使用了各种流行的前沿技术, 令人炫目的技术列表:  </p>
<p><a href="http://www.idealliance.org/papers/xml02/dx_xml02/papers/05-05-05/05-05-05.html">http://www.idealliance.org/papers/xml02/dx_xml02&#x2F;papers&#x2F;05-05-05&#x2F;05-05-05.html</a>  </p>
<p>Mobile GPS Demonstration Platform, 演示了移动通讯&#x2F;GPS&#x2F;WebService&#x2F;XML技术的结合, 一辆装备了GPS、GPRS mobile、Java Embeded Board的玩具小车。  </p>
]]></content>
      <tags>
        <tag>Geek</tag>
      </tags>
  </entry>
  <entry>
    <title>一些与GPS相关的软件项目</title>
    <url>/blog/2003/08/27/Some-GPS-related-software-and-project/</url>
    <content><![CDATA[<p>想写个GPS有关的软件，网上找到一些相关的项目: </p>
<ul>
<li>Java framework for GPS <a href="http://www.aasted.org/gps/">http://www.aasted.org/gps/</a><br>这个项目的目标是为各种应用程序加入GPS功能提供framework. 目前提供的是与Garmin GPS通讯的功能. </li>
<li>Chaeron GPS library <a href="http://www.chaeron.com/gps.html">http://www.chaeron.com/gps.html</a><br>类似的项目,也是作为支持库，但功能更强&#x2F;完善. 支持多种平台, 包括多种PDA. 而且这看来是一个active的项目, 由一个公司支持. </li>
<li>JavaGPS <a href="http://javagps.sourceforge.net/">http://javagps.sourceforge.net/</a><br>这个项目的范围似乎比前两个窄一些, 局限于从GPS中取得当前位置数据. 从代码看来，设计也不如前两个项目规范。</li>
</ul>
<p>但是，这些项目看来都是只支持从GPS取数据，而不支持传送数据给GPS。</p>
<ul>
<li>EPS <a href="http://eps.sourceforge.net/">http://eps.sourceforge.net/</a><br>这是一个小应用程序，能够下载GPS数据并显示。这个程序能与Garmin GPS通讯，有上传&#x2F;下载功能, 不过代码风格很差。</li>
</ul>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>SWT与Swing之争</title>
    <url>/blog/2003/08/28/SWT-Swing-/</url>
    <content><![CDATA[<p>SWT(in Eclipse)与Swing之争, 似乎争议注意在这几方面:  </p>
<ul>
<li>SWT是否比Swing更快? SWT使用OS native构件, 理论上更快. 但实际比较如何, 争议很大. </li>
<li>SWT与Swing比较, 是否更符合平台传统外观? SWT使用OS native构件,而不是象Swing一样重新写代码模拟出来. Swing支持者说用Look&amp;Feel灵活, 也可以做得不错. </li>
<li>Swing的结构过于复杂. Swing的事件模型设计得不好. 但是swing扩展性强. </li>
<li>Swing采用JVM的垃圾收集来回收资源, SWT提供可控的资源销毁而不采用垃圾收集.</li>
</ul>
<p>这个Java英文讨论组, <a href="http://www.javalobby.org/">http://www.javalobby.org</a> , 内容还可以, search功能也比较好用.<br>看老外的论坛也是老骂架的:)  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>java开发辅助工具,library</title>
    <url>/blog/2003/08/29/java-library/</url>
    <content><![CDATA[<p><a href="http://www.zaval.org/">http://www.zaval.org/</a> 这个网站有好几个java开发辅助工具,library. 包括了:  </p>
<ul>
<li>Java Resource Editor: 用于i18n&#x2F;l10n的翻译 </li>
<li>Light-Weight Visual Components Library (LwVCL): 一组基于AWT的可视控件, 估计目标是可以移植到PDA等小型设备上 </li>
<li>Proxy Suite: an easy-to-use solution that allows monitoring TCP-based protocols, such as HTTP, NNTP and others. It is extremely useful in software development and can be used as a debug tool. </li>
<li>轻型数据库工具 </li>
<li>其他的一些东西, 如Java Charts Package等, 只有介绍没有下载</li>
</ul>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>Unicode与字符编码</title>
    <url>/blog/2003/09/02/Unicode-/</url>
    <content><![CDATA[<h3 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode:"></a>Unicode:</h3><p>unicode.org制定的编码机制, 要将全世界常用文字都函括进去.<br>在1.0中是16位编码, 由U+0000到U+FFFF. 每个2byte码对应一个字符; 在2.0开始抛弃了16位限制, 原来的16位作为基本位平面, 另外增加了16个位平面, 相当于20位编码, 编码范围0到0x10FFFF.  </p>
<h3 id="UCS"><a href="#UCS" class="headerlink" title="UCS:"></a>UCS:</h3><p>ISO制定的ISO10646标准所定义的 Universal Character Set, 采用4byte编码.  </p>
<h3 id="Unicode与UCS的关系"><a href="#Unicode与UCS的关系" class="headerlink" title="Unicode与UCS的关系:"></a>Unicode与UCS的关系:</h3><p>ISO与unicode.org是两个不同的组织, 因此最初制定了不同的标准; 但自从unicode2.0开始, unicode采用了与ISO 10646-1相同的字库和字码, ISO也承诺ISO10646将不会给超出0x10FFFF的UCS-4编码赋值, 使得两者保持一致.  </p>
<h3 id="UCS的编码方式"><a href="#UCS的编码方式" class="headerlink" title="UCS的编码方式:"></a>UCS的编码方式:</h3><ul>
<li>UCS-2, 与unicode的2byte编码基本一样.   </li>
<li>UCS-4, 4byte编码, 目前是在UCS-2前加上2个全零的byte.</li>
</ul>
<h3 id="UTF-Unicode-x2F-UCS-Transformation-Format"><a href="#UTF-Unicode-x2F-UCS-Transformation-Format" class="headerlink" title="UTF: Unicode&#x2F;UCS Transformation Format"></a>UTF: Unicode&#x2F;UCS Transformation Format</h3><ul>
<li>UTF-8, 8bit编码, ASCII不作变换, 其他字符做变长编码, 每个字符1-3 byte. 通常作为外码. 有以下优点:  <ul>
<li>与CPU字节顺序无关, 可以在不同平台之间交流  </li>
<li>容错能力高, 任何一个字节损坏后, 最多只会导致一个编码码位损失, 不会链锁错误(如GB码错一个字节就会整行乱码)</li>
</ul>
</li>
<li>UTF-16, 16bit编码, 是变长码, 大致相当于20位编码, 值在0到0x10FFFF之间, 基本上就是unicode编码的实现. 它是变长码, 与CPU字序有关, 但因为最省空间, 常作为网络传输的外码.<br>UTF-16是unicode的preferred encoding.   </li>
<li>UTF-32, 仅使用了unicode范围(0到0x10FFFF)的32位编码, 相当于UCS-4的子集.</li>
</ul>
<h3 id="UTF与unicode的关系"><a href="#UTF与unicode的关系" class="headerlink" title="UTF与unicode的关系:"></a>UTF与unicode的关系:</h3><p>Unicode是一个字符集, 可以看作为内码.<br>而UTF是一种编码方式, 它的出现是因为unicode不适宜在某些场合直接传输和处理. UTF-16直接就是unicode编码, 没有变换, 但它包含了0x00在编码内, 头256字节码的第一个byte都是0x00, 在操作系统(C语言)中有特殊意义, 会引起问题. 采用UTF-8编码对unicode的直接编码作些变换可以避免这问题, 并带来一些优点.  </p>
<h3 id="中国国标编码"><a href="#中国国标编码" class="headerlink" title="中国国标编码:"></a>中国国标编码:</h3><ul>
<li>GB 13000: 完全等同于ISO 10646-1&#x2F;Unicode 2.1, 今后也将随ISO 10646&#x2F;Unicode的标准更改而同步更改.  </li>
<li>GBK: 对GB2312的扩充, 以容纳GB2312字符集范围以外的Unicode 2.1的统一汉字部分, 并且增加了部分unicode中没有的字符.   </li>
<li>GB 18030-2000: 基于GB 13000, 作为Unicode 3.0的GBK扩展版本, 覆盖了所有unicode编码, 地位等同于UTF-8, UTF-16, 是一种unicode编码形式. 变长编码, 用单字节&#x2F;双字节&#x2F;4字节对字符编码. GB18030向下兼容GB2312&#x2F;GBK.<br>GB 18030是中国所有非手持&#x2F;嵌入式计算机系统的强制实施标准.</li>
</ul>
<p><em>2001-11-14 (2003-9-2 补充)</em>  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让JTextArea自动滚动到最底?</title>
    <url>/blog/2003/09/04/How-to-let-JTextArea-automatic-scroll-to-the-bottom-/</url>
    <content><![CDATA[<p>如果用JTextArea来做信息窗口，不断用append()显示新信息，通常会希望内容能自动滚动，保持最后增加的信息能够显示出来。利用setCaretPosition()可以实现，这个方法是设置输入光标的位置，如果光标位置超出目前可视范围，会自动滚动以保正光标可以显示出来。</p>
<pre><code>int length = textArea.getText().length();
textArea.setCaretPosition(length);
</code></pre>
<p>如果还希望限制JTextArea中的文本长度，不让它无限制的增长，可以加上以下两行，当长度超出预订的maxTextLength后将开头的字符截除。不过美中不足的是截除无法按行进行。</p>
<pre><code>if ( length &gt; maxTextLength ) &#123; 
    textArea.replaceRange(&quot;&quot;, 0, length - maxTextLength); 
&#125;
</code></pre>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的几种XML语法分析API</title>
    <url>/blog/2003/09/08/Java-XML-API/</url>
    <content><![CDATA[<p>用Java对XML进行处理, 有好多种方案, 如不了解相互的关系让人很头晕. 这里介绍的都是XML processing&#x2F;parsing的范畴, XML的应用还有其他的许多方面, 也有好多令人眼花缭乱的缩写.  </p>
<p>XML语法分析的方案有两种, 分别为DOM和SAX.  </p>
<p><strong>DOM</strong>: Document Object Model (<a href="http://www.w3.org/DOM/">http://www.w3.org/DOM/</a>)<br>DOM 由 W3C 创建，并且是该协会的正式建议.<br>解析器读入整个文档，然后构建一个驻留内存的树结构，然后您的代码就可以使用 DOM 接口来操作这个树结构。您可以遍历树以了解原始文档包含了什么，您可以删除树的几个部分，还可以重新排列树和添加新的分支，等等。<br>DOM 构建整个文档驻留内存的树。如果文档很大，就会要求有极大的内存。<br>DOM 创建表示原始文档中每个东西的对象，包括元素、文本、属性和空格。如果您只需关注原始文档的一小部分，那么创建那些永远不被使用的对象是极其浪费的。<br>DOM 解析器必须在您的代码取得控制权之前读取整个文档。对于非常大的文档，这会引起显著的延迟。   </p>
<p><strong>SAX</strong> API for XML (<a href="http://www.saxproject.org/">http://www.saxproject.org/</a>)<br>SAX 采用事件驱动的模式, 解释器读入XML文档, 进行扫描, 当发现符合指定条件的数据时, 向您的代码发送一个事件。SAX 不能修改 XML 文档.<br>SAX 事件是无状态的。当 SAX 解析器在 XML 文档中发现文本时，它就向您的代码发送一个事件。该事件仅仅给您发现的文本；它不告诉您什么元素包含那个文本。如果您想知道这一点，则必须自己编写状态管理代码。<br>SAX 事件不是持久的。如果应用程序需要一个数据结构来对 XML 文档建模，则必须自己编写那样的代码。如果您需要从 SAX 事件访问数据，并且没有把那个数据存储在代码中，那么您不得不再次解析该文档。<br>SAX 的速度相当快, 而且节省内存, 因为它不会保存数据在内存之中.   </p>
<p>DOM&#x2F;SAX 是两种不同的解析方法, 各有侧重点, 用于不同用途. 它们都可以用不同的编程语言来实现, 不同的供应商会提供各自的解释器版本. 例如Microsoft提供了DOM分析器msxml.dll, Apache的xerces, SUN的crimson等.   </p>
<p>DOM与SAX, 如何选择?   </p>
<ul>
<li><p>应用程序将如何部署？<br>如果您的应用程序将要作为 Java applet 部署，那么您会希望使要下载的代码数量最小，SAX 解析器比 DOM 解析器小。   </p>
</li>
<li><p>一旦解析了 XML 文档，还需要多次访问那些数据吗？<br>如果您需要回过头来访问 XML 文件的已解析版本，DOM 可能是正确的选择。而 SAX 事件被触发时，如果您以后需要它，则由您（开发人员）自己决定以某种方式保存它。如果您需要访问不曾保存的事件，则必须再次解析该文件。而 DOM 自动保存所有的数据。   </p>
</li>
<li><p>只需要 XML 源文件的少量内容吗？<br>如果您只需要 XML 源文件的少量内容，那么 SAX 可能是正确的选择。SAX 不会为源文件中的每个东西创建对象；您要确定什么是重要的。使用 SAX，您要检查每个事件以了解它是否与您的需要有关，然后相应地处理它。更妙的是，一旦找到您正在寻找的东西，您的代码就会抛出一个异常来完全停止 SAX 解析器。   </p>
</li>
<li><p>您正在一台内存很少的机器上工作吗？<br>若是的话，不管您可能考虑到的其它因素是什么，SAX 是您的最佳选择。</p>
</li>
</ul>
<p>在Java语言中, 要处理XML, 除了直接使用DOM&#x2F;SAX, 还有高层次一点的API可以使用, 比较常见的是JAXP和JDOM.   </p>
<p><strong>JAXP</strong>: Java API for XML Processing<br>是 Sun 提供的标准API, 包含在JDK中.<br>但它更多的是一套接口, 将DOM和SAX的接口规范起来, 并没有在易操作性方面提供太多的方便.  </p>
<p><strong>JDOM</strong>: 由Brett McLaughlin, Jason Hunter两人创立的open source项目 (<a href="http://www.jdom.org/">http://www.jdom.org</a>)<br>JDOM的设计目的不是要做万能的解析器, 而是能提供常用的大部分的功能. 它的使用相对简单, 容易理解, 使用它开发代码量会比较少.<br>JDOM 的速度也比较高, 仅仅比SAX慢一点. 它主要是使用SAX来实现功能, 当需要用到DOM的时候才使用DOM.   </p>
<p>还有不少类似的API, 某些甚至已经比JDOM更好, 不过都不如JDOM使用范围广.  </p>
<p>JAXP&#x2F;JDOM 都是建立在 DOM&#x2F;SAX 之上的API, 也可认为是抽象层, 需要通过具体供应商提供 DOM&#x2F;SAX 实现来完成 XML 解析工作. 作为一个相对高层的接口, 隐藏了具体厂商实现, 减低复杂性, 降低开发的工作量.   </p>
<p>一般来说, 在我们开发程序的时候, 从开发效率,兼容性,移植性等方面考虑, 都是选择使用高层的API更好些. JAXP已经附带在JDK中, 由SUN所支持, 应该标准化&#x2F;延续性方面会比较好; 而根据网上开发者反映, 普遍都喜欢用JDOM, 因为使用简单方便.  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL的表名大小写问题</title>
    <url>/blog/2003/09/08/MySQL-/</url>
    <content><![CDATA[<p>在SQL标准中, 标识符是不区分大小写的. 可是在MySQL中, 情况有所不同, 表名有可能是大小写敏感的:  </p>
<blockquote>
<p>在 MySQL 中，数据库和表对就于那些目录下的目录和文件。因而，操作系统的敏感性决定数据库和表命名的大小写敏感。这就意味着数据库和表名在 Windows 中是大小写不敏感的，而在大多数类型的 Unix 系统中是大小写敏感的。  </p>
</blockquote>
<p>尽管在 Windows 中数据库与表名是忽略大小写的，你不应该在同一个查询中使用不同的大小写来引用一个给定的数据库和表。  </p>
<p>表的别名是区分大小写的。  </p>
<p>详细信息在MySQL参考手册中有说明. 查看: <em>MySQL语言参考</em> - <em>语言结构</em>  </p>
<p>从兼容性和可移植性考虑, 在涉及到数据库表名的时候, 均应该<strong>严格区分大小写</strong>, 无论使用的是什么类型的数据库和什么类型的平台.  </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Invalid XML character, msxml.dll的问题</title>
    <url>/blog/2003/09/11/Invalid-XML-character-msxml-dll-/</url>
    <content><![CDATA[<p>Java程序测试中发现parse一个XML文件时出现exception, 错误信息为invalid XML character. 但这个XML文件用XMLSpy检查却没有问题.  </p>
<p>经过查找资料, 发现是XML文件中包含了一些不允许在XML中使用的字符(控制符). XML规范中规定了允许的字符范围(<a href="http://www.w3.org/TR/REC-xml#dt-character">http://www.w3.org/TR/REC-xml#dt-character</a>):  </p>
<pre><code>Char ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]   
</code></pre>
<p>包含illegal字符的XML文件不是well-formedness的, 为什么这样的文件能够生成, 并且XMLSpy不报错? 是Microsoft XML parser的问题. 这个XML文件是使用msxml.dll生成的, 估计XMLSpy用的也是msxml.dll, 这个parser的其中一个缺陷是允许某些非常字符的存在. 而Java程序中用的parser估计是sun的crimson, 这个parser严格检查XML character range, 包含非法字符就会报错.   </p>
<p>msxml.dll的问题看来还有不少, 这里专门有谈到: <a href="http://www.xml.com/pub/a/1999/11/parser/index.html?page=2">http://www.xml.com/pub/a/1999/11/parser/index.html?page=2</a>   </p>
<p>为了解决此问题, 需要在生成XML前先对字符串检查, 把非法字符过滤掉. 这里提供了java的过滤函数: <a href="http://lists.ibiblio.org/pipermail/xom-interest/2003-May/000471.html">http://lists.ibiblio.org/pipermail/xom-interest/2003-May/000471.html</a>   </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>系统性能监控工具</title>
    <url>/blog/2003/09/19/The-system-performance-monitoring-tool/</url>
    <content><![CDATA[<p>有些工具是专门用来绘制曲线图的, 可用于监控系统、设备的性能等用途，例如网络流量曲线&#x2F;系统性能曲线等:  </p>
<ul>
<li><p>MRTG <a href="http://www.univ.kiev.ua/~roman/soft/mrtg/">http://www.univ.kiev.ua/~roman/soft/mrtg/</a><br>这个工具原本用于显示路由器的流量, 通过SNMP来获取流量. 但是也有扩展特性, 可以通过调用其他程序来采集数据并生成曲线图. 但由于原来设计是流量监测, 故此配置灵活性不如RRDtool.<br>这里是各种扩展: <a href="http://people.ee.ethz.ch/~oetiker/webtools/mrtg/links.html">http://people.ee.ethz.ch/~oetiker&#x2F;webtools&#x2F;mrtg&#x2F;links.html</a>  </p>
</li>
<li><p>RRDTool <a href="http://people.ee.ethz.ch/~oetiker/webtools/rrdtool/">http://people.ee.ethz.ch/~oetiker/webtools/rrdtool/</a><br>RRD是Round Robin Database的意思, 这个工具专门用于收集数据, 并且按照一定的周期生成曲线图. 很象MRTG, 不过它不包含数据采集功能, 而且灵活性高适应面更广.  </p>
</li>
<li><p>ORCA(<a href="http://www.orcaware.com/orca/docs/orcallator.html">http://www.orcaware.com/orca/docs/orcallator.html</a>), 一个主机性能采集的工具, 利用RRDTool生成很多种性能曲线. 它只能在solaris上运行. 但它采集的数据和生成的曲线可以参考, 部分在linux上用RRDTool配合其他的采集程序应该也可以生成的.  </p>
</li>
<li><p>BGraphs(<a href="http://www.ag0ny.com/graphs/">http://www.ag0ny.com/graphs/</a>) 利用RRDtool和shell script做的linux性能采集工具。我在它的基础上修改，安装到公司的上网服务器上，还不错。</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>在OziExplorer中使用NASA LandCover MrSID数据的方法</title>
    <url>/blog/2003/09/26/In-OziExplorer-use-of-NASA-LandCover-MrSID-data-method/</url>
    <content><![CDATA[<ol>
<li>This refers to the satellite images available from Nasa’s<br>Earth Science Applications Directorate MrSID Image Server:<br><a href="https://zulu.ssc.nasa.gov/mrsid/">https://zulu.ssc.nasa.gov/mrsid/</a><br>Note that this is using secure HTTP, and the old URL<br>no longer works. They do not have their server set up<br>properly, so you may get warnings about the site’s<br>security certificate.</li>
</ol>
<p>从 <a href="https://zulu.ssc.nasa.gov/mrsid/">https://zulu.ssc.nasa.gov/mrsid/</a> 下载数据  </p>
<ol start="2">
<li>Initially you use your mouse and the options at the<br>bottom of the map webpage(In&#x2F;Out, zoom level, map size) to<br>find the map you want, then you select the “Select Image”<br>radiobutton and click on the map to get a popup window,<br>and on that you select “Download MrSID Image”.<br>You have to zoom in a couple of levels from the world map<br>before the image names are shown, and you won’t get the popup<br>window if you have Javascript disabled.</li>
</ol>
<p>用鼠标点出你需要的区块，选择”Select Image”，弹出区块窗口，下载  </p>
<ol start="3">
<li>The downloaded file will have a “.tar” extension. Programs<br>such as WinZip that work with ZIP files should be able to<br>open the ‘tarball’(the name used for tar archives) file.<br>Typically it contains four files - the MrSid image(.sid),<br>it’s “world file”(.sdw), it’s metadata file(.met), and a<br>small JPEG thumbnail image(.jpg).</li>
</ol>
<p>下载的是tar文件，用winzip、winrar可解压。包含4个文件，后缀为 sid, sdw, met, jpg  </p>
<ol start="4">
<li>The only files you need from the tarball are the image(.sid)<br>and it’s “world file”, which has a “.sdw” extension. Extract<br>them from the tarball, and save them into the same directory.</li>
</ol>
<p>有用的文件是 sid 和 sdw，解开放到同一目录中  </p>
<ol start="5">
<li>Make sure you have the correct version of OziExplorer.<br>Older versions did not support the use of MrSid images.<br>As explained on Ozi’s Optional Extras page:<br><a href="http://216.40.224.145/eng/optional_extras.html">http://216.40.224.145/eng/optional_extras.html</a><br>you need to have the MrSid DLL.<br>I would suggest using OziExplorer version 3.90.4j or newer,<br>because prior to that the filename was not shown on the<br>“DRG Import Defaults” dialog box.</li>
</ol>
<p>在 <a href="http://216.40.224.145/eng/optional_extras.html">http://216.40.224.145/eng/optional_extras.html</a> 下载MrSid.dll并安装，这是OziExplorer的MrSID pluggin。<br>最好用OziExplorer 3.90.4j以后的版本。  </p>
<ol start="6">
<li>All the Nasa MrSid images use the WGS84 datum.<br>There is no need for the associated “.met” file when importing<br>into Ozi, and there is no need to look at the contents of the<br>“.met” or “.sdw” files.<br>The first character of the MrSid file’s name is the hemisphere(N or S).<br>The first pair of digits is the file’s UTM zone.<br>The second pair of digits is the latitude of the lower edge<br>of the image in the Northern hemisphere, and the upper edge of the<br>image in the Southern hemisphere - the images span 5 degrees of latitude,<br>with a slight bit of overlap to the north and south.<br>For example, N-10-45_loc.sid is for the Northern hemisphere,<br>UTM zone 10, and covers between 45 and 50 degrees North.</li>
</ol>
<p>MrSid图象使用WGS84座标系，文件名首字母为南&#x2F;北半球，第一组数字为UTM zone，第二组数字为区块靠近赤道一边的纬度，每个文件覆盖纬度5度的区域。如N-10-45_loc.sid表示北半球，UTM 10区，北纬45-50度。  </p>
<ol start="7">
<li>In Ozi select “Import Map” from the File menu, then either<br>“Single DRG Map” or “All DRG Maps on a CD or in a Folder”.<br>If you are going to import multiple Nasa MrSid images at the<br>same time from one directory, arrange it so that all the images<br>are for the same hemisphere and same UTM zone.<br>On the “DRG Import Defaults” dialog box:<br>Map Datum &#x3D; WGS84<br>Map Grid Zone &#x3D; UTM zone of the map image(s)<br>Hemisphere &#x3D; first letter of image file(s) name(s)<br>Map Projection &#x3D; UTM</li>
</ol>
<p>在Ozi的File菜单选择”Import Map”，然后选择”Single DRG Map”或”All DRG Maps on a CD or in a Folder”.<br>如果打算一次导入同一目录中的多个MrSid图象，应该是同一个半球同一个zone的。（我试过没有成功，如果不怕麻烦还是一次一个好了）<br>在”DRG Import Defaults”对话框中，按以下填写：<br>Map Datum &#x3D; WGS84<br>Map Grid Zone &#x3D; 图象的UTM zone<br>Hemisphere &#x3D; 图象文件名的首字母<br>Map Projection &#x3D; UTM  </p>
<p>That’s it - you should now be able to use the MrSid images in Ozi.<br>You no longer need the “.sdw” file(s), but they are small, so I<br>would keep them in case you ever need to re-do the import.  </p>
<p>OK了，以后在Ozi中打开map文件就行了。<br>sdw文件其实也不再需要，不过它很小，留着也不占空间。  </p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>使Nikon Coolpix系列相机生成raw格式文件的方法</title>
    <url>/blog/2003/10/24/Nikon-Coolpix-series-camera-to-generate-rawformat-method/</url>
    <content><![CDATA[<p>使Nikon Coolpix系列相机生成raw格式文件的方法：将机器的id字符串由”NIKON DIGITAL CAMERA”改为”DIAG RAW”。利用photopc软件，通过串口数据线可以发送命令给相机实现修改</p>
<pre><code>photopc id&quot;DIAG RAW&quot; query 
photopc id &quot;NIKON DIGITAL CAMERA&quot; query
</code></pre>
<p>打开DIAG RAW模式后，每次拍摄会生成两个文件，一个是正常的jpg，另外一个是raw格式文件，在950上大概文件大小是2.35M左右。</p>
<p>photopc软件可以控制相机的操作，例如设置光圈快门、拍摄照片等。</p>
<p>RAW2NEF工具可以将raw格式文件转换为Nikon的NEF文件格式，这是nikon的公开raw格式，photoshop plugin可以打开。<a href="http://e2500.narod.ru/raw2nef_e.htm">http://e2500.narod.ru/raw2nef_e.htm</a></p>
<p>好像另一个dcraw软件也是做这工作的：<a href="http://www.cybercom.net/~dcoffin/dcraw/">http://www.cybercom.net/~dcoffin&#x2F;dcraw&#x2F;</a></p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>GPS定向游戏</title>
    <url>/blog/2003/10/31/GPS-/</url>
    <content><![CDATA[<p>这些GPS游戏与定向越野有点类似：定向越野是根据地图指南针在最短的时间内到达预先布好的若干个check point；GPS定向是依靠GPS、电子地图到达（尽量靠近）预先设定的点。  </p>
<p>GPS定向是相当有趣的活动。它是对参加者的野外行进、找路的能力是一个考验，你知道目标的方位、距离，但是怎么才能到达？中间可能隔着树林、山头、池塘或者建筑物。对于识别地图的能力也有要求，出发前要先找寻资料，确定目标的大致位置，在地图上研究通过什么路线才能靠近到达。  </p>
<p>对于目标座标是电脑随机生成的游戏，更加有意思。不是人工布的点，因此目标不一定在有路可达的地方，参加者预先根本不知道目标在什么地形，可能在田野里，可能山坡上，可能在湖中央，也可能在别人屋子里。如果目标是不可到达的（例如在湖中，又没有船），还要考虑湖边的哪个位置才能离目标最近。因此这个游戏充满未知的刺激。</p>
<p><strong>Geocaching - 寻宝</strong> <a href="http://www.geocaching.com/">www.geocaching.com</a></p>
<p>在一个地方藏起一个“宝箱”，记录下精确坐标，发布到网站上。<br>其他参与者根据坐标寻找这个宝箱。找到后可以取走里面的一件礼物，当然了，为了让游戏可以继续玩下去，他也应该放一件礼物进去留给后来者。</p>
<p><strong>Degree confluence - 座标整点计划</strong> <a href="http://www.confluence.org/">http://www.confluence.org/</a></p>
<p>这是一个有趣的计划，计划发起人将地球上陆地（或者靠近陆地）的所有经纬度为整数的点列出来，参与者要到达这个点（精确到100米以内），拍下照片，写下记录。</p>
<p><strong>Geodashing</strong></p>
<p>这个游戏与 <em>整数座标点计划</em> 有点类似，也是要访问特定的座标点，但是座标点是随机生成的，而且比较密，在你居住的地区数十公里内就应该就会有几个。也是在网上登记成功的访问，计算积分，看谁的积分高。可以个人玩，也可以组队，以队伍为单位计算积分。每月进行一轮比赛，每轮的座标点都重新生成的。  </p>
<p>在<a href="http://geodashing.org/">http://geodashing.org/</a> 或<a href="http://geodashing.gpsgames.org/">http://geodashing.gpsgames.org/</a> 下载座标点数据，<br>压缩包中有很多个文件的，包括全世界的点，我们选择dashpoints_neasia.wpt，这是亚洲东北部分。<br>选择你附近的点，成功到达（100米范围）后发一封邮件给这个游戏的专门讨论组，报告你成功访问了，如果你不打算积分只是自己玩玩也可以不发邮件的。</p>
<p><strong>Gps Golf － 高尔夫</strong> <a href="http://golf.gpsgames.org/">http://golf.gpsgames.org/</a>  </p>
<p>这个游戏非常简单，受条件限制也少，下班有时间都可以玩:)  </p>
<p>高尔夫球是要把球打进18个洞；而这个GPS高尔夫，是随机生成18个waypoints，要求参与者到访这18个点（球洞），根据到“球洞”的距离计算分数，越近分数越低，最后算总分，最低的为赢。  </p>
<p>在游戏网站上，注册用户都可以自己设立赛局，指定赛区中心座标和范围半径，程序会随后随机产生球洞座标。用户也可以随便参与别人设立的赛局，走完全部18个点后，在网站上登记自己到达各个点的最近距离，程序就会计算你的分数。  </p>
<p>设定的赛区半径不同，游戏就有不同玩法：例如在几十公里范围，就需要自驾车参赛了；十来公里范围，可以自行车参赛；几公里范围，步行。<br>在城市里面的小范围赛区，下班就可以玩了；也可以在某个公园、或者某座山头作为赛区。</p>
<p>在我的另外一个blog <a href="http://sunnyday.cn2k.net/">清风白云艳阳天</a> 里面有一些参与GPS定向的记录。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>GPS数据管理软件EasyGPS和格式转换工具GPSBabel</title>
    <url>/blog/2003/11/01/GPS-EasyGPS-GPSBabel/</url>
    <content><![CDATA[<p>EasyGPS是很好用的GPS数据管理器，能管理waypoint、route资料，它支持的文件格式是文件格式是gpx&#x2F;loc。我使用过程中感觉它有以下优点：   </p>
<p>※ GPS waypoint的名称、说明字段的文字个数有限制，通常只能输入缩写。waypoint多了之后缩写很难理解，管理十分困难。在EasyGPS中，可以输入额外的信息，如中文说明、类别信息等，利用资料的整理。<br>※ 双击选定一个点作为active point，程序会计算出所有其他点与active point的距离、方位角。如果用距离来排序，就能够快速找出某距离范围以内的waypoint。这是我认为这个软件最好用的功能。<br>※ 软件提供检索功能，能够根据多种条件查找、选定符合条件的waypoint<br>※ 可以打印waypoint清单。GPS中保存的waypoint没有详细说明，只要在出发前先打印一张单，名字具体对应的是什么地点就一清二楚了。英文机也不用愁啦。<br>※ 从GPS上传、下载waypoint也是十分方便的   </p>
<p>我以前是用ozi文件分地区存放waypoint的，管理起来非常麻烦，先按大的地区分目录，再按小地区建立文件。而且在GPS多次导入导出，都分不清那些是新增那些是旧，有些还重复了。<br>现在用了EasyGPS不用这么麻烦了，把所有点都放一个gpx文件里面，需要的时候利用搜索很容易就能找到，只要找到一个，按范围排序马上就把附近整个区域的所有点都找出来了，然后另存文件或者直接传到GPS。   </p>
<p>因此强烈推荐大家使用这种格式交换waypoint! :)   </p>
<p>EasyGPS是免费软件，在<a href="http://www.easygps.com/">http://www.easygps.com/</a> 可下载；另外有ExpertGPS，功能更加多些，对route、track的管理更全面，不过是要钱买的。   </p>
<p>另一个推荐的是GPSBabel软件，可以在gpx &#x2F; ozi &#x2F; mapsource &#x2F; mapsend 等几十种文件格式之间转换，除了格式转换之外，还有过滤waypoint的功能，例如可以将重名的、距离很接近的waypoint过滤掉，或者是只输出某个座标范围内的waypoint。<br>这个是命令行工具，但同时也提供了GUI界面，方便使用。（GUI界面只能做格式转换，不能过滤）<br>GPSBabel是open source软件，在<a href="http://gpsbabel.sourceforge.net/">http://gpsbabel.sourceforge.net</a> 可下载。 </p>
<p>这里是ExpertGPS的<a href="http://www.lvye.org/uploadfiles/597018-easygps_introduce.gif">screen shot</a>。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL的锁</title>
    <url>/blog/2003/11/08/MySQL-/</url>
    <content><![CDATA[<p>MySQL的数据表访问锁定：读操作、写操作分别要申请读锁和写锁，读锁可以并发，写锁是唯一的。通过配置或者一些命令可以改变读、写的优先级。在MySQL手册中关于性能部分有说明。</p>
<p>普通的表类型，如MyISAM表是采用table级锁定；InnoDB和BDB是支持transaction的表类型，它们采用更小粒度的锁定，BDB是page级锁定，InnoDB是row级锁定。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Garmin GPS map76s 解剖</title>
    <url>/blog/2003/11/26/Garmin-GPS-map76s-/</url>
    <content><![CDATA[<p>EE times 的一篇<a href="http://www.eet.com/sys/uth/OEG20020710S0026">文章</a>介绍了Garmin GPS map76s的内部模块结构，下图是引自该文章的。</p>
<p><img src="http://img.cmpnet.com/eet/news/02/July/UTH1226.gif"></p>
<p>据分析，这样一个GPS的成本价不足100美圆，可是现在市场价是差不多400美圆！好赚吧？:)</p>
<p>从照片中可以看到，四螺旋天线垂直安装在顶部，因此GPS在直立放置时的信号接收效果是最好的。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>户外活动应该选择什么型号的GPS？</title>
    <url>/blog/2003/11/26/Outdoor-activities-should-choose-what-types-of-GPS-/</url>
    <content><![CDATA[<p>在玩户外的人中，GPS的拥有量开始增加，什么型号的GPS适合户外使用？我在买GPS之前看过不少资料，可以参考一下。</p>
<p><a href="http://gpsinformation.net/">GPS information</a>是一个很值得看的站点，几大GPS厂家的设备信息、GPS相关软件、使用心得等等资料非常齐全。</p>
<p>该网站里面一篇文章<a href="http://gpsinformation.net/main/gpshiking.htm">Important features for a hiking GPS</a>介绍了什么GPS适合于hiking使用。</p>
<p>摘录部分出来：</p>
<blockquote>
<p>Below are my “essential hiking feature list” of GPS receiver features.</p>
<p>(I omitted features that are present in ALL receivers.)</p>
<ol>
<li><p>12 channel parallel receiver system: Needed for best reception in difficult terrain and tree cover.</p>
</li>
<li><p>WaterProofness: Unit should be rated submersible to protect it from getting wet.</p>
</li>
<li><p>Long battery life: Keeps you from having to carry so many batteries.</p>
</li>
<li><p>Built in Maps: Not absolutely essential, but big help in orientation and estimating distance to nearest roads.</p>
</li>
<li><p>Route capability: Twenty Route capability is pretty standard. Make sure you get one with at least 20 routes.</p>
</li>
<li><p>Waypoints: 500+ user entered waypoints are pretty standard. Make sure you get one of these.</p>
</li>
<li><p>Multiple Datum capability is pretty standard: Make sure all the datums you will want to use are included in the GPS you select.</p>
</li>
<li><p>Fit nicely in your pocket and lightweight: This is a very personal thing, but you should consider it when you are thinking about hauling a unit around in the wilderness.</p>
</li>
<li><p>Bearing to next waypoint: Almost universal, but essential to hiking use.</p>
</li>
<li><p>Screen Size and your ability to read it are important especially if you have problems with viewing fine detail.</p>
</li>
</ol>
<p>Not ABSOLUTELY essential features, but nice to have.</p>
<ol>
<li><p>“Map” screen (as opposed to just a numerical lon&#x2F;lat position fix): Makes it much easier to see where you are relative to reference waypoints.</p>
</li>
<li><p>Rotatable screen: Garmin makes a couple of units capable of rotating the screen vertical (handheld use) or horizontal (car dash use). These are not the handiest for pocket use, but lots of people like this compromise for joint hiking&#x2F;car use.</p>
</li>
<li><p>UTM readout may be a consideration for some. This feature is available on a limited selection of consumer GPS receivers.</p>
</li>
<li><p>Topo Maps uploaded into your GPS: The Garmin USA Topo CD maps contain contour lines and small stream data very helpful in navigating in off-road territory. Magellan has a new TOPO map offering for the M330 available late Summer 2001.</p>
</li>
<li><p>For use under heavy tree cover or difficult (multipath) terrain conditions, an external amplified antenna will generally be helpful.</p>
</li>
<li><p>A minimum of 8 megs of map memory is recommended on a mapping GPS though you can “get by” with 1.4 megs or so.</p>
</li>
</ol>
</blockquote>
<p>中文站点方面，<a href="www.lvye.org">绿野</a>论坛的<a href="http://www.lvye.org/bbs/postlist.php?Board=com_gis">通讯版</a>估计是目前集中了最多户外GPS玩家的地方。</p>
<p>这是绿野网友晨峰归纳的GPS选购原则：</p>
<blockquote>
<p>户外用的GPS有特殊性，我尝试列了几点，从经验上觉得最重要到次重要的。不考虑价钱的因素。  </p>
</blockquote>
<p>1、防水和Rocky Panel功能。（不能太娇嫩，最好可以达到军用标准）<br>2、电源（耗电量小，使用时间相对长，低温条件下能工作稳定）<br>3、考虑丛林条件的天线设计和恶劣条件下的信号捕捉能力。<br>4、自动记录点的时间间距可调，Trace Back功能（完整的记录和大雾条件下使用）<br>5、重量、体积适中。<br>6、大屏幕或彩屏，自制矢量化地图。</p>
<p>inc的<a href="http://4tgps.yeah.net/">GPS zone</a>虽然资料不算很多，但好像是目前比较好的关于GPS的中文个人站点了。</p>
<p>我自己就没有仔细归纳过，根据使用经验来说，想到几点：</p>
<ol>
<li>防水性、坚固性很重要，不能带个娇贵的东西到户外的恶劣环境</li>
<li>屏幕要有足够的分辨率(象素)，并且map页面zoom到最大的时候应该要能分辨出10米以内距离</li>
<li>track的容量越大越好，track记录间隔可设置，能够记录尽量长的航迹。waypoint、route的容量我反而觉得不是很重要，一般都够用(前提是有数据线，平常数据都保存在电脑上)</li>
<li>数据线很有用，可以在电脑上保存、整理资料数据。</li>
<li>卫星信号接收能力强，特别是树林中的接收能力很重要</li>
<li>如果仅仅是户外活动使用，不开车，那么地图功能是毫无用处的。</li>
</ol>
<p>有机会最好还是在购买前先试用一下，对于操作使用有感性认识，看看用起来顺不顺手，单单比较性能指标是不够的。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Outdoor</tag>
      </tags>
  </entry>
  <entry>
    <title>社会性软件</title>
    <url>/blog/2003/12/03/Social-software/</url>
    <content><![CDATA[<p>今来在blog中比较关注的一个热点是社会性软件，似乎现在中文blog群体中比较活跃的一些人是做教育的，因此对这方面的探讨比较多。</p>
<p>对于社会学方面的东西我不大懂，对社会性软件的概念也是一知半解，不过有个软件是很令我感兴趣的：<a href="http://www.codingmonkeys.de/subethaedit/">SubEthaEdit</a>。这个软件提供了通过网络多人共同进行文本编辑的功能，从<a href="http://wwwbruegge.in.tum.de/projects/hydra/subethaedit/screenshots.html">screenshot</a>上看，有点象IM聊天的多个参与者，共同对文件进行修改，通过不同颜色可以区别出不同人改动的部分。</p>
<p>软件的说明中提及了此软件可以用于pair programming，我想如果这样的软件真的能够达到实用化的话，基于网络的远程PP也是有可能的。即使不是远程PP，对于工作小组内部的商讨事情也会带来很大的方便。</p>
<p>可惜软件是用于Mac OS X的，没有办法试用。</p>
<p>交流真是工作中非常重要的一部分，想想每天多少人在天空飞来飞去，就是为了参加半天的会议，能有一次见面交流的机会。电话、网络等等各种先进科技，目前都还是未能让人们能自如的交流，提供真切的体验。这是一个极具潜力的领域。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>用作OziExplorer底图的ASTER卫星遥感图的制作</title>
    <url>/blog/2003/12/04/Used-as-a-OziExplorer-for-reproduction-of-the-production-of-ASTER-presents-the-satellite/</url>
    <content><![CDATA[<ol>
<li>下载ASTER L1B数据，AST_09(或者AST_07,未知有何区别)格式。数据包括两个文件，hdf0是15m VNIR(band 1-3)，hdf1是30m SWIR(band 4-9)，一般只需要hdf0。 </li>
<li>用MultiSpecWin打开hdf文件，将各个band分别保存为tif文件 </li>
<li>用photoshop打开三个band的tif文件，按照RGB模式通道合成为一个文件，采用231合成的效果比较好。 </li>
<li>在photoshop中对图像进行直方图调整、锐化，保存为jpg </li>
<li>用ECW compressser将jpg转换为ecw格式 </li>
<li>在OziExplorer中校准, 投影设为UTM，然后用META FILE里面的四个点来作为校准点，分别是图像（包括黑色部分）的四个角。</li>
</ol>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>Jacksum : java utility for computing checksum</title>
    <url>/blog/2003/12/09/Jacksum-java-utility-for-computing-checksum/</url>
    <content><![CDATA[<p><strong><a href="http://www.jonelo.de/java/jacksum/index.html">Jacksum</a></strong> is a free and platform independent utility for computing and verifying checksums, CRCs and message digests as well as timestamps of files. </p>
<p>Jacksum is entirely written in <em>Java</em>. </p>
<p>It supports most common checksum algorithms (<em>Adler32, BSD sum, POSIX cksum, CRC-16, CRC-32, MD2, MD4, MD5, RIPEMD-128, RIPEMD-160, SHA-1, SHA-256, SHA-384, SHA-512, Unix System V sum, sum8, sum16, sum24, sum32, Whirlpool and xor8</em>)</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>SQuirrel : Java GUI client for JDBC compliant database</title>
    <url>/blog/2003/12/09/SQuirrel-Java-GUI-client-for-JDBC-compliant-database/</url>
    <content><![CDATA[<p><strong><a href="http://squirrel-sql.sourceforge.net/">SQuirreL</a></strong> SQL Client is a graphical Java program that will allow you to view the structure of a JDBC compliant database, browse the data in tables, issue SQL commands etc.</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>用google做计算器</title>
    <url>/blog/2003/12/09/Use-Google-do-calculator/</url>
    <content><![CDATA[<p>google总是令人赞叹，各种出色的idea。</p>
<p><a href="http://www.google.com/intl/zh-CN/help/features.html#calculator">google计算器</a>，不是什么技术，却给用户带来很大的方便。</p>
<p>我用的是MyIE，设置了google作为缺省搜索，因此只要把运算表达式在地址栏上输入，回车，结果就出来了。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>疯狂下载电影吧</title>
    <url>/blog/2003/12/10/Crazy-download-a-movie/</url>
    <content><![CDATA[<p>在<a href="http://sourceforge.net/">sourceforge</a>上无意中留意到<a href="http://sourceforge.net/top/toplist.php?type=downloads_week">top download list</a>, 看看什么软件最热门？这是前20位：</p>
<p>1</p>
<p><a href="http://sourceforge.net/projects/emule/">eMule</a></p>
<p>2</p>
<p><a href="http://sourceforge.net/projects/bittorrent/">BitTorrent</a></p>
<p>3</p>
<p><a href="http://sourceforge.net/projects/dcplusplus/">DC++</a></p>
<p>4</p>
<p><a href="http://sourceforge.net/projects/virtualdub/">VirtualDub</a></p>
<p>5</p>
<p><a href="http://sourceforge.net/projects/azureus/">Azureus - BitTorrent Client</a></p>
<p>6</p>
<p><a href="http://sourceforge.net/projects/cdexos/">CDex</a></p>
<p>7</p>
<p><a href="http://sourceforge.net/projects/guliverkli/">guliverkli</a></p>
<p>8</p>
<p><a href="http://sourceforge.net/projects/phpbb/">phpBB</a></p>
<p>9</p>
<p><a href="http://sourceforge.net/projects/gordianknot/">Gordian Knot</a></p>
<p>10</p>
<p><a href="http://sourceforge.net/projects/gaim/">Gaim</a></p>
<p>11</p>
<p><a href="http://sourceforge.net/projects/emuleplus/">eMule Plus</a></p>
<p>12</p>
<p><a href="http://sourceforge.net/projects/ffdshow/">ffdshow</a></p>
<p>13</p>
<p><a href="http://sourceforge.net/projects/ac3filter/">AC3Filter</a></p>
<p>14</p>
<p><a href="http://sourceforge.net/projects/btplusplus/">BitTorrent++</a></p>
<p>15</p>
<p><a href="http://sourceforge.net/projects/vnc-tight/">TightVNC</a></p>
<p>16</p>
<p><a href="http://sourceforge.net/projects/flaskmpeg/">FlasKMPEG</a></p>
<p>17</p>
<p><a href="http://sourceforge.net/projects/pingpong-abc/">ABC [Yet Another Bittorrent Client]</a></p>
<p>18</p>
<p><a href="http://sourceforge.net/projects/phpmyadmin/">phpMyAdmin</a></p>
<p>19</p>
<p><a href="http://sourceforge.net/projects/zsnes/">ZSNES</a></p>
<p>20</p>
<p><a href="http://sourceforge.net/projects/winscp/">WinSCP</a></p>
<p>与P2P相关的是1,2,3,5,11,14,17，占了35%；与media(audio&#x2F;video)相关的是4,6,7,9,12,13,16，也占了35%。</p>
<p>可见，现在网络的大热点是什么？大家都在疯狂的下载电影，哈哈！</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>SRTM数据中国部分终于可以下载了</title>
    <url>/blog/2003/12/12/SRTM-/</url>
    <content><![CDATA[<p>SRTM数据中国部分终于可以下载了，盼望了几年啊。精度比GTOPO30的高多了。</p>
<p><a href="ftp://edcsgs9.cr.usgs.gov/pub/data/srtm">ftp://edcsgs9.cr.usgs.gov/pub/data/srtm</a><br>Eurasia目录下是亚欧大陆的数据，是SRTM-3，3arc精度，大概90米。</p>
<p>在OZI的DEM数据格式中选择GLOBE（ARCVIEW）格式就可以打开；用MicroDEM可以对多种DEM数据进行处理。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>Idea的记录</title>
    <url>/blog/2003/12/17/Idea-/</url>
    <content><![CDATA[<p>记录idea最有效的方法应该是纸和笔，比较符合思维习惯。电脑是好工具，但是电脑不一定在身边，思维最有创造性的时候往往是在非工作状态中，例如洗澡、走在路上的时候。有idea的时候必须尽快记录下来，即使打断了当前的工作。有idea的时候是最有价值的。另一方面，电脑输入的速度也不一定赶得上思维，还有可能因为软件人机界面而局限了思维（Tablet PC是一个好的方向，我以前写过一点有关的<a href="http://blogbus.com/blogbus/blog/diary.php?diaryid=52190">东西</a>）。我也打算尝试用palm来做记录，不知道这样的小机器是否能够提供象纸笔一样足够灵活的记录手段。</p>
<p>电子化是资料整理利用的有力途径，在一定的时间，必须把笔记本中的记录整理输入到电脑中。我习惯是以日期排列，日记的形式。资料整理应该是作为必做的任务，例如在todo list中加入一项：_整理记事本xx页的记录_。网上的blog可以说是个副产品，我并不会用internet上的blog来作为主要记录手段，太不可靠；在网上公布出来，是希望知识与思维能够共享。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>PersonalDevelopment</tag>
      </tags>
  </entry>
  <entry>
    <title>两分钟原则</title>
    <url>/blog/2003/12/17/Two-minutes-principle/</url>
    <content><![CDATA[<p>在<a href="http://www.davidco.com/international.php">Getting Things Done</a>中看到的最能够立即起作用的就是这个“两分钟原则”了：<strong>在两分钟内可以完成的事情，马上去解决</strong>。其实很多事情并不是做起来又多困难，只是出于惰性不想去做而已。遵循两分钟原则，不给自己逃避的借口，将会大大减少todo list中的事务的数量，从百事缠身中解脱出来。如果该完成的事情没有完成，实际上并逃避不开，这些未完成事务的阴影始终会萦绕在心头，当堆积很多时，就造成心理压力。</p>
]]></content>
      <tags>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>时间管理的目标</title>
    <url>/blog/2003/12/30/Time-management-goals/</url>
    <content><![CDATA[<p><strong>不遗忘任何要做的事情，不让要做的事情太多</strong>。两者好像矛盾，实际不然。不遗忘任何要做的事情，就是要把任何要做的事，不分大小不分轻重，通通纳入到一个系统中管理。事情到底是否重要，留待后边归类和用优先级来判别，全部收集的目的就在于不让自己害怕遗忘了什么事情而造成压力，并且统一管理要做的事情后，才可能实现其他的时间管理目标。不让要做的事情太多，是指通过对事情分类，划分场合，来减少具体某一时间要做的事情。例如目前暂时不需要处理的事情，放到someday maybe分类中，就可以从心头中抛开了，等到定期review时再来考虑它。把事情划分成需要在不同场合完成，在具体的一个场合只看到当前要做的事情，这样就能减少纷乱。比如在@home这个场合，需要做的事情是搞卫生、看书之类的，不要让工作的事情烦着；要去银行取钱、购买东西什么的，记录在@out这个场合的待办事宜中，上班时就不需要惦记着它。</p>
<p><strong>让时间使用得更有效率</strong>。不是想起什么就做什么，而是做最有价值的事情。按照四象限法则，事情的优先级可以按照重要性和紧急性两个坐标划分为四象限。重要性是指事情的作用，是否完成它引起的后果是否重要；紧急性是指时间，要求立刻完成还是可以延迟。其中以紧急性优先，重要性次之，因此应该是先做“紧急且重要”的事情，然后是“紧急但不那么重要”，再做“重要但不紧急”，“既不重要又不紧急”的事情最后才做。优先级是并不加入完成难易的因素在里面的。如果做事情不按优先级来选择，就会终日忙碌于优先级低的小事情，而重要的事情还是没有完成。</p>
<p><strong>平衡人生中的各个方面</strong>。想要做的事和需要做的事通常是不完全一致的，想要做的事是出于自己内在的驱动力，可能是兴趣、可能是习惯，需要做的事是出于外在的要求，例如谋生、人际关系。大家都希望从事的工作就是自己的兴趣，实际上哪有这么理想呢，而且内在驱动力和外在要求都在不断变化中，这就要求在两者间取得平衡。如果不加以管理，往往在兴趣爱好方面情会放越来越多的时间精力进去，而忽视了其他方面。</p>
<p>要让时间管理达到效果，可能还有很重要的一点就是要**<em>信任</em>**自己的时间管理系统，相信这样的管理是有效的，遵循它的建议去做。在使用的过程中再不断调整，让它越来越符合自己的情况。</p>
<p>目前有关时间管理的书籍、工具，似乎比较偏向于从事管理、商务工作的人士，他们是工作往往是在与人沟通的比重比较大，事务性的事情较多；而我们这些从事技术工作的人，工作重点与他们不一样，在运用时间管理方法时还不能照搬，到底该怎样调整，还是比较伤脑筋的:(</p>
]]></content>
      <tags>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>用GPSMap 76 firmware给GPS 76升级</title>
    <url>/blog/2004/01/06/Use-GPSMap-76-firmware-to-GPS-76-upgrade/</url>
    <content><![CDATA[<p>根据网上新闻组有关“用legend firmware update venture”讨论的提示，今天冒险进行试验，成功的用GPSMap 76 v3.3 firmware将我的GPS 76升级。</p>
<p>升级的好处：</p>
<ul>
<li>Number of waypoints from 500 to 1000</li>
<li>Number of track points in active tracklog from 2000 to 10000</li>
<li>Number of Routes &#x2F; number of waypoints per route from 50&#x2F;50 to 50&#x2F;125</li>
</ul>
<p>升级的坏处：</p>
<ul>
<li>Not support POI database anymore</li>
<li>Warranty void</li>
</ul>
<p>Steps:</p>
<ol>
<li>Download a firmware update for GPSMap 76 from Garmin website or from the following URL:<br><a href="http://www.tramsoft.ch/gps/garmin_gpsmap76-firmware-upgrades_en.html">http://www.tramsoft.ch/gps/garmin_gpsmap76-firmware-upgrades_en.html</a></li>
<li>Extract the downloaded self-extractarchive file to a folder. There should be three files: a ROM image (rgn file), an update tool (exe file) and a readme file. </li>
<li>Notice that the ROM image is named as 017702000xxx.rgn,xxx is the firmware version number, 177 is the product number of GPSMap 76. You can’t direct use this file to update the GPS 76 because of the incorrect product number. Change the rgn file name from 177 to 173 which is the product number of GPS 76. </li>
<li>Backup all date in your GPS 76. </li>
<li>The exciting time comes. Do it as a normal firmware update. </li>
<li>After about 2 minutes nervous waiting, it done. Enjoy your GPS 76 with 1000 waypoints and 10000track points!</li>
</ol>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>工作时间统计</title>
    <url>/blog/2004/02/13/Work-time-statistics/</url>
    <content><![CDATA[<p>同事推荐Office2003的joural功能，能够自动统计在office上做的各项工作的时间记录，如写Word文档，写PPT文档，用Visio作图，处理Email等。<br>很方便进行工作量的统计。</p>
<p>对工作时间做记录，不光可以对工作量做统计，对于个人的时间管理、有效利用时间都很有好处。</p>
<p>我的pda上就有个小程序做时间记录的，我现在设置了 工作、学习、事务、消遣 几个分类，做事情前点一点，做完之后点一点，就会把花费的时间记录下来。这样可以统计出有多少时间是用于工作，多少时间看书学习，阅读邮件之类的事务耗了多少时间，上网看新闻等消遣又用了多少时间。掌握了这些数据，可帮助改善个人的时间利用效率。</p>
<p>如果要用来统计各项目的工作时间，再按项目细分就可以了。虽然看起来记录有点麻烦，其实习惯了就好，不就是点个按钮嘛。</p>
<p>Palm上的这个工具叫Punch Time Clock， PC上应该也有类似的程序的。</p>
<p>不过真要按时间统计计算工作量，还有个观念问题。我今天工作了一天，统计出来的工作时间是4小时，要提交上去上司怎么说？偷懒？不行，怎么也得填个8小时。要真的按4小时算了，下次有同样任务，哦，你上次4小时做出来的，好，给你半天时间!实际上，真正有效的工作时间能占总工作时间的一半，已经不错了，各研究资料都是这么说的。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>日本人的弱智发明？</title>
    <url>/blog/2004/02/18/The-Japanese-weak-minded-invention-/</url>
    <content><![CDATA[<p>在网上看到的“<a href="http://blogger.cn/vidar/posts/13278.aspx#FeedBack">日本人八大弱智发明</a>”，看来大家很看不起这些所谓的发明（还是因为这是日本人发明的？）</p>
<p>这些发明真的很弱智吗？我不这样认为。这八个发明都是解决现实生活中的实际问题的，虽然不见得都实用，但毕竟是对问题的一个解决方案。我倒是佩服这些发明者的创造能力，不是所有的发明都能成为伟大发明，但伟大发明必然是建立在不断的思维锻炼的基础之上。</p>
<p>限制、扼杀创造力，是否教育和传统思维的悲哀？</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>如果你习惯使用UNIX的命令，那么在Windows中...</title>
    <url>/blog/2004/02/20/If-you-get-used-to-using-UNIX-commands-so-in-Windows-/</url>
    <content><![CDATA[<p><a href="http://unxutils.sourceforge.net/">unxutils.sourceforge.net</a> 提供了一系列的unix工具在win32平台上的移植版本. 这些版本是完全基于win32平台的, 不像cygwin那样还需要一个模拟层.</p>
<p>Windows 2000 command line 中的 for 命令用于对一组文件中的每个执行某特定命令，类似于unix的 find * -exec command ，功能很强大，具体参数用 for &#x2F;? 查看。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>给MAPSOURCE软件减肥</title>
    <url>/blog/2004/02/22/MAPSOURCE-software-to-lose-weight/</url>
    <content><![CDATA[<p>MAPSOURCE软件按经纬度的块存储文件，可以把世界其它地方的块删除，仅保留中国地区的文件块,从04309845.IMG到04311439.IMG，节约不少硬盘空间。不用担心，世界地图依然存在的，只是局部细节没有了，我想不必关心美国的乡村小路吧？</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>MeeSoft的软件</title>
    <url>/blog/2004/03/01/MeeSoft-/</url>
    <content><![CDATA[<p>MeeSoft(<a href="http://meesoft.logicnet.dk/">http://meesoft.logicnet.dk/</a>)这个网站有不少有意思的免费软件，包括Command(还记得DOS时代的NC吗？)、SmartMorph、图象增强(可以修复对焦不准的照片啊!)、图表制作、mp3管理、HTML优化等等。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>美味书签</title>
    <url>/blog/2004/03/28/Delicious-bookmarks/</url>
    <content><![CDATA[<p>早就在别的blog上听说过<a href="http://del.icio.us/">del.icio.us</a>这个网站了, 不过我一直对社会性网络这类东西不大感冒, 以为del.icio.us也是这些而已.</p>
<p>前两天又看到别人介绍, 经不住好奇心上去看了一下, 哇, 原来是好东西! 立马申请一个, 并且介绍给朋友.</p>
<p>在我看来, 这个网站的主要作用有:</p>
<ul>
<li><p>Bookmark, 分类记录看过的感兴趣的网页, 并且按时间排列. 经常都会发生这样的情况: 网上看过某篇文章, 后来要找怎么都找不回来了. del.icio.us就可以帮助解决这样的问题. 它比浏览器的bookmark要方便灵活, 随处可访问, 可以添加注释, 每个书签可以设置多个分类标记.</p>
</li>
<li><p>Share, 将自己觉得有意思的网页推荐给别人. 不需要再用email或者IM来发网址了.</p>
</li>
<li><p>交流作用, 订阅别人的书签, 了解别人关注的内容. 通过书签的owner, 看看谁与自己关注着相同的话题. 如果这个网站能够加入一些功能, 实现大家对书签内容的评论就更好了.</p>
</li>
</ul>
<p>罗嗦了这么多, 我的美味书签是: <a href="http://del.icio.us/aleung">http://del.icio.us/aleung</a></p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>目标，计划</title>
    <url>/blog/2004/04/05/Target-plan/</url>
    <content><![CDATA[<p>不知不觉的，差不多三十岁了。都说三十是人生一个关口，对于一名程序员尤甚。即将告别人生的一个段落，回望过去，看到自己存在不少缺点；展望未来，路要怎么走，不免有些患得患失。</p>
<p>前两天跟<a href="http://flyisland.blogbus.com/">flyisland</a>聊天，他说（书上说）：失败的最重要原因，是没有长期目标；第二个原因，是没有短期目标。是啊，总是觉得时间过得很快，到底时间是怎么过去的呢？做些什么不做些什么，年轻的时候可以恣意而行，但现在不行了。</p>
<p>经常会有这样的时候：无所事事不知道该干些什么，过后又后悔浪费了时间。目标不一定要很远大，它指引的是方向，帮助自己排除干扰，做出每个选择，什么是值得做的。不是说做的每件事情都需要有意义，而是做完之后不需要后悔就好了。多些思考，少些漫无目的，</p>
<p><a href="http://huamin.blogone.net/">长夜孤灯</a>（很好的名字），这个blog的主人把他在人生目标，个人计划这方面的思考记录下来。看了很有同感，为人理性，爱好思考，但个性稍微消沉，容易患得患失，似乎自己与作者有共通之处（flyisland也是这么说的，难道大家都一样？）。他提到的很多问题也是我的问题，看看他写的东西，反思自己，很有好处。</p>
<p>应该怎样做？继续思考，坚持于行动，一点一点改进。记录下来，自勉。</p>
]]></content>
      <tags>
        <tag>PersonalDevelopment</tag>
      </tags>
  </entry>
  <entry>
    <title>如何增加windows程序的线程数量?</title>
    <url>/blog/2004/04/10/How-to-increase-the-number-of-Windows-programs-thread-/</url>
    <content><![CDATA[<p>编写测试程序, 发现超过1000个线程, 程序执行就会出现内存错误. 原来我还以为是windows对线程数量有限制, 查资料才知道支持线程多少并不是操作系统决定的, 而是与程序的堆栈空间大小有关.</p>
<p>在VC中, 修改Project Setting - Link - Stack allocation - Reserve, 缺省为1M(0x100000), 将这个数值降低, 也就是减少每个线程的栈空间大小, 就可以增加线程数量. 这是因为用户地址空间总共是2GB, 线程保留栈空间大小乘以线程数量不能大于2GB.</p>
<p>因为上下文切换的开销, 线程过多效率会降低, 我做这个测试程序就是想知道这个效率曲线到底是怎样的.</p>
<p>以下为网上找到的资料:</p>
<p>I just found this under CreateThread() in MSDN:  </p>
<p>The number of threads a process can create is limited by the available virtual memory. By default, every thread has one megabyte of stack space. Therefore, you can create at most 2028 threads. If you reduce the default stack size, you can create more threads. However, your application will have better performance if you create one thread per processor and build queues of requests for which the application maintains the context information. A thread would process all requests in a queue before processing requests in the next queue.  </p>
<p>So the number of threads you can create is capped by the 2 GB user address space available to your process.  </p>
<p>So you have a few choices, as I see it:  </p>
<ol>
<li>Run multiple copies of your server at once and coordinate between them. You will need endless amounts of swap space.  </li>
<li>Reduce the amount of stack used per thread (lowering from 1 Mb to 100Kb should get you 40,000 threads).  </li>
<li>Re-architect your app to not require one thread per connection. Have each thread monitor many connections using (for example) a select() call.</li>
</ol>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>前景光明的subversion</title>
    <url>/blog/2004/04/30/Promising-subversion/</url>
    <content><![CDATA[<p><a href="http://subversion.tigris.org/">Subversion</a>这个以替代CVS为目标的版本管理工具，看来已经开始获得广泛支持了。经历了4年开发，大概1个月一次小版本发布，今年年初终于发布了version 1.0 release，开发过程平稳而谨慎。我去年曾经试用过一个interim release版本，作为本地个人使用的版本管理工具，已经感觉相当满意，基本可替代CVS。现在release版本发行后，更是在网上看到一些人说打算从CVS迁移到SVN了。在网上可以找到一些达到实用阶段的兼容subversion的软件工具、plugin，从另一个侧面也反映出subversion正在一步步迈向自己的目标。</p>
<p>以前公司的开发团队使用CVS，配合使用<a href="http://www.cvstrac.org/">CVStrac</a>，对于这样的搭配我感到比较满意。CVStrac作为轻量级的issue tracking工具，确实做得很到位，issue&#x2F;bug record、CVS track-in record和wiki的无缝整合，构成了简单而实用的web base软件项目管理系统，对于小型项目非常合适。</p>
<p>现在，与SVN配合的类似工具也有了，<a href="http://www.edgewall.com/products/trac/">Trac</a>，完全就是CVStrac的一个clone，不过是用python开发的，从screenshot上看很漂亮，细节上似乎做得比CVStrac要好。不过现在公司用ClearCase，没有机会试用这些轻量级工具了。我觉得ClearCase的client并不好用，缺乏象cvsweb这样的直观的文件、目录浏览、trac这样的check-in浏览功能。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>解决Xerces-C XML parser中EnitiyResolver不起作用的问题</title>
    <url>/blog/2004/04/30/Solve-Xerces-C-XML-parser-EnitiyResolver-doesn-t-work-in-the-problem/</url>
    <content><![CDATA[<p>在SAX和DOM两种paser API中，均提供了EntityResolver接口，应用程序可通过实现这个接口的resolveEntity()方法来实现对外部实体访问的控制，例如将对网络URL的访问重定向为对本地文件或者数据库的访问。Xerces软件包提供了例子redirect来演示这个功能。</p>
<p>在我们的程序中，parse VXML文件时需要使用外部的schema，而这些schema又会间接引用其他的schema或者DTD，这些外部实体都是通过URL形式的system id来指定的（基本上都是在<a href="http://www.w3c.org/">www.w3c.org</a>上）。考虑到程序运行环境不一定与internet连接，还有远程网络的效率也不高，我们在程序中实现了自己的EntityResolver，把所有对这些schemas、DTDs的访问都截取下来，返回程序中内置的拷贝。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DTDResolver</span> : <span class="keyword">public</span> EntityResolver &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> InputSource * <span class="title">resolveEntity</span><span class="params">(<span class="type">const</span> XMLCh * <span class="type">const</span> publicId,</span></span></span><br><span class="line"><span class="params"><span class="function">        <span class="type">const</span> XMLCh * <span class="type">const</span> systemId)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Compare</span>(systemId, <span class="string">L&quot;http://www.w3.org/TR/voicexml20/vxml.xsd&quot;</span>)) &#123;</span><br><span class="line">            <span class="function">VXIcharToXMLCh <span class="title">name</span><span class="params">(<span class="string">L&quot;http://www.w3.org/TR/voicexml20/vxml.xsd (SB)&quot;</span>)</span></span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">MemBufInputSource</span>(VALIDATOR_DATA + VALIDATOR_VXML,</span><br><span class="line">                VALIDATOR_VXML_SIZE,</span><br><span class="line">                name.<span class="built_in">c_str</span>(), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Compare</span>(systemId, <span class="string">L&quot;http://www.w3.org/2001/xml.xsd&quot;</span>)) &#123;</span><br><span class="line">            <span class="function">VXIcharToXMLCh <span class="title">name</span><span class="params">(<span class="string">L&quot;http://www.w3.org/2001/xml.xsd&quot;</span>)</span></span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">MemBufInputSource</span>(VALIDATOR_DATA + VALIDATOR_XML,</span><br><span class="line">                VALIDATOR_XML_SIZE,</span><br><span class="line">                name.<span class="built_in">c_str</span>(), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Compare</span>(systemId, <span class="string">L&quot;XMLSchema.dtd&quot;</span>)) &#123;</span><br><span class="line">            <span class="function">VXIcharToXMLCh <span class="title">name</span><span class="params">(<span class="string">L&quot;XMLSchema.dtd&quot;</span>)</span></span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">MemBufInputSource</span>(VALIDATOR_DATA + VALIDATOR_SCHEMA_DTD,</span><br><span class="line">                VALIDATOR_SCHEMA_DTD_SIZE,</span><br><span class="line">                name.<span class="built_in">c_str</span>(), <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// ......</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ......</span></span><br><span class="line"></span><br><span class="line">parser = XMLReaderFactory::<span class="built_in">createXMLReader</span>();</span><br><span class="line">DTDResolver * dtd = <span class="keyword">new</span> <span class="built_in">DTDResolver</span>();</span><br><span class="line">parser-&gt;<span class="built_in">setEntityResolver</span>(dtd);</span><br></pre></td></tr></table></figure>

<p>在测试中发现，对某些外部实体的访问成功截取了，但是另外一些却不成功，parser依然尝试通过网络访问，然后由于网络不通而访问失败，造成xml文件无法parse。</p>
<p>对程序进行跟踪，发现了问题出现的规律：所有对schema文件的引用处理都正常，无论是include还是import方式，也无论是多少层的间接引用；在被parse的XML文件中DOCTYPE声明的外部实体引用，处理也正常，故此xerces自带的redirect例子是不会出问题的；但是，schema文件的DOCTYPE声明的外部实体引用就不能被正确处理了，根本不会调用指定的resolveEntity()方法。</p>
<p>这时，基本上可以确认问题是出在xerces身上，而不是我们的程序的问题了。于是仔细跟踪xerces代码对schema parse的执行过程，最终发现了问题。</p>
<p>XercesDOMParser类有两个resolveEnitiy方法：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">InputSource* <span class="title">XercesDOMParser::resolveEntity</span><span class="params">(<span class="type">const</span> XMLCh* <span class="type">const</span> publicId,</span></span></span><br><span class="line"><span class="params"><span class="function">                                            <span class="type">const</span> XMLCh* <span class="type">const</span> systemId,</span></span></span><br><span class="line"><span class="params"><span class="function">                                            <span class="type">const</span> XMLCh* <span class="type">const</span> baseURI)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fEntityResolver)</span><br><span class="line">        <span class="keyword">return</span> fEntityResolver-&gt;<span class="built_in">resolveEntity</span>(publicId, systemId);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">InputSource* <span class="title">XercesDOMParser::resolveEntity</span><span class="params">(XMLResourceIdentifier* resourceIdentifier)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fEntityResolver)</span><br><span class="line">        <span class="keyword">return</span> fEntityResolver-&gt;<span class="built_in">resolveEntity</span>(resourceIdentifier-&gt;<span class="built_in">getPublicId</span>(),</span><br><span class="line">                                                resourceIdentifier-&gt;<span class="built_in">getSystemId</span>());</span><br><span class="line">    <span class="keyword">if</span> (fXMLEntityResolver)</span><br><span class="line">        <span class="keyword">return</span> fXMLEntityResolver-&gt;<span class="built_in">resolveEntity</span>(resourceIdentifier);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>根据代码注释，前者是deprecated的，被后者代替。</p>
<p>由XercesDOMParser派生出XSDDOMParser类，这个类是专门用来parser xsd文件（也就是schema）的。这个类重载了XercesDOMParser的三个参数的resolveEntity方法，用fUserEntityHandler代替fEntityResolver的方法调用。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">InputSource* <span class="title">XSDDOMParser::resolveEntity</span><span class="params">(<span class="type">const</span> XMLCh* <span class="type">const</span> publicId,</span></span></span><br><span class="line"><span class="params"><span class="function">                                         <span class="type">const</span> XMLCh* <span class="type">const</span> systemId,</span></span></span><br><span class="line"><span class="params"><span class="function">                                         <span class="type">const</span> XMLCh* <span class="type">const</span> baseURI)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fUserEntityHandler)</span><br><span class="line">        <span class="keyword">return</span> fUserEntityHandler-&gt;<span class="built_in">resolveEntity</span>(publicId, systemId, baseURI);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>但是XSDDOMParser没有重载第二个resolveEntity方法，估计是第二个方法是后来才加入XercesDOMParser的，在XSDDOMParser中没有同步修改。因此，依然是使用fEntityResolver，而不是fUserEntityHandler，就造成了没有调用到我们定义的resolveEntity方法，依然按照原来的system id去访问网络了。</p>
<p>问题找出来，解决就简单了，在XSDDOMParser中把另外一个resolveEntity方法也重载了，改为使用fUserEntityHandler。修改之后，测试通过。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">InputSource* <span class="title">XSDDOMParser::resolveEntity</span><span class="params">(XMLResourceIdentifier* resourceIdentifier)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (fUserEntityHandler)</span><br><span class="line">        <span class="keyword">return</span> fUserEntityHandler-&gt;<span class="built_in">resolveEntity</span>(resourceIdentifier);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个问题在Xerces-C 2.4和2.5版本都存在，IBM的XML4C与Xerces-C是影子项目，也有同样的问题。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>你的灯亮着吗？</title>
    <url>/blog/2004/05/10/Your-lights-on-/</url>
    <content><![CDATA[<p>同事刚买了几本书，包括了《你的灯亮着吗》。马上拿过来读，书很薄，字很疏，一个来小时就读完了。</p>
<p>看完后有点失望，也许是看书评后期望太高，也许是我并不适合读这样的书，不懂从中领悟些什么。</p>
<p>翻到最后一页，才发现译者在译后记里面已经把这本书的中心思想全归纳出来了。我觉得比较有共鸣的是几点：</p>
<ul>
<li>意识到问题的存在，与熟视无睹做斗争</li>
<li>想想什么才是真正的问题？问题的根源在哪里？</li>
<li>想想这是谁的问题？谁是应该解决问题的人？</li>
</ul>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>欧洲航天局的低级错误？照片中的是长城吗？</title>
    <url>/blog/2004/05/20/The-European-space-agency-mistakes-In-the-photo-is-the-Great-Wall-/</url>
    <content><![CDATA[<p>没有想到，欧洲航天局网站上的一张卫星照片引起了国内沸沸扬扬的讨论，而且讨论还大有向民族精神升级的趋势，真让人哭笑不得。</p>
<p>由于个人爱好，曾经专门找过一些有关卫星遥感的资料来看，卫星照片也看过一些。且不论卫星照片上可见到长城与太空飞船中肉眼是否可见长城有些什么联系，至少我认为欧洲航天局公布的这照片上的根本不是长城。</p>
<p>先来看看欧洲航天局公布的照片吧：<a href="http://esamultimedia.esa.int/images/Proba/cina.jpg">（照片很大，请在新窗口中打开）http://esamultimedia.esa.int/images/Proba/cina.jpg</a> 照片右上角蜿蜒的白线就是被认为是长城，左下角很粗的白线是河流。</p>
<p>在判读卫片、航片时，立体感不是那么直观的，很容易把山脊当成了山谷，山谷当成了山脊，因为都是明暗交界线，不知道阳光方向就很难断定那儿高一些。判断的一个比较有效的方法，就是从河流看起，有河流的地方必然是山谷，两边的是山脊，山谷和山脊是交替的。</p>
<p>原图为了突出右上角，将其余部分增加了亮度，为了分析照片，我用photoshop把图象做了还原处理。<a href="http://sunnyday.cn2k.net/photo/cina_edited.jpg">http://sunnyday.cn2k.net/photo/cina_edited.jpg</a></p>
<p>从图的左下角可以看到一条比较明显的支流，左边又是露出一部分的大河，倚靠左边的这部分图象，就可以找出山脊，并且判断出当时的阳光是从图的右下方向照射过来的。依次向右看过去，就会发现右上角蜿蜒的不是“长城”，而是一条相对细点的河流。从图的右下角看，也能得到这样的结论。</p>
<p>另一方面，在卫星照片中，河谷一般是比山脊明显的，因为山脊通常是较细的线，而河谷由于冲积的原因，比较宽阔。村镇建筑物一般也分布在河谷附近。在图的右上角贴近照片边缘处就可以看到一个小建筑群。</p>
<p>虽然照片没有给出比例尺，但是从图象左下部分很明显的建筑物和公路，就可以对图象的比例有个大概的观念了。很明显，右上角的不可能是长城，太宽了。</p>
<p>这些都是从卫片的判读来认定图上的不是长城。其实要做更科学可靠的判读也不难，只要欧洲航天局给出这张图的坐标范围就行了。根据坐标，将图象与SRTM数字高程模型结合，在电脑中就可以绘制出三维立体图象，哪儿高哪儿低一目了然。</p>
<p>只能说欧洲航天局对这张图的判读过于草率了，居然犯了如此低级的错误。</p>
<p>BTW, 再看看这里的讨论和卫星照片，13m分辨率的，你能识别出司马台长城吗？如果看不出，我可以给一点tips：左下角的水平山脊就是司马台所在的山脊，黑色的一小块是个湖，如果我没有记错，上面有道铁索桥的。</p>
<p><a href="http://www.lvye.org/modules/lvyebb/viewtopic.php?view=1&post_id=743913">http://www.lvye.org/modules/lvyebb/viewtopic.php?view=1&post_id&#x3D;743913</a><br><a href="http://www.smth.org/bbscon.php?bid=332&id=26741&ap=512">http://www.smth.org/bbscon.php?bid=332&id=26741&ap=512</a></p>
<p>2004-5-21补充：</p>
<p>卫星照片的范围居然正好是北京的白河岩场，攀岩的人常玩的地方。看看<a href="http://my.ziqu.com/bbs/665078/messages/2085.html">这个帖子</a>里面的卫星照片，立体感更强了，红色轨迹的地方就是欧洲空间局照片的左下角位置。<a href="http://www.lvye.org/modules/lvyebb/viewtopic.php?post_id=803480">这里</a>有该地区的等高线地图，看图的右上角位置。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>C/C++中的i18n</title>
    <url>/blog/2004/05/26/C-C-i18n/</url>
    <content><![CDATA[<p>mbs: multi byte string, 用char作为存储类型, 一个字符可能对应1个或者多个char, 不能直接确定字符边界. charset不确定. 过去的程序都是采用mbs的.</p>
<p>wcs: wide character string, 用wchar_t作为存储类型, 一个字符对于一个wchar_t. 使用unicode编码, charset与OS相关, 在windows平台中为UTF16(UCS-2), 在大多数unix平台中为UTF32(UCS-4). </p>
<p>国际化的程序都应该在内部使用wcs, 在输入输出时做mbs与wcs的转换.</p>
<p>mbs与wcs的转换函数: </p>
<p>wcstombs&#x2F;mbstowcs是实现转换的一对函数. wcs的charset是固定不可变的, 但是mbs的charset是可变的, 可能是ASCII, 可能是gb2312, 也可能是big5. wcstombs&#x2F;mbstowcs是根据locale环境设置来决定mbs采用的charset的, 在程序中可以用setlocale来设定locale, 例如 setlocale(LC_ALL, “chinese”)</p>
<p>程序启动时, locale设定为 LC_ALL&#x3D;”C”, 用 setlocale(LC_ALL, “”) 就可以设置成操作系统的locale设定.</p>
<p>Locale决定了当前程序运行的本地化设置方式, 但是在程序中可能需要作其他charset的转换, 例如程序本身语言设定为简体中文, 需要做big5与unicode的转换, 或者是其他两种charset的mbstombs转换, 这时wcstombs&#x2F;mbstowcs就不能胜任了. 在unix平台中可以使用iconv来做这个转换(iconv lib也有windows版本), 在windows平台可以用MultiByteToWideChar&#x2F;WideCharToMultiByte 函数.</p>
<p>参考资料: <a href="http://xcin.linux.org.tw/i18n/pc2000/p3/chinese-3.html">http://xcin.linux.org.tw/i18n/pc2000/p3/chinese-3.html</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>WordPress越做越好了</title>
    <url>/blog/2004/05/27/WordPress-/</url>
    <content><![CDATA[<p>昨天晚上把我的<a href="http://sunnyday.cn2k.net/blog/">另外一个blog</a>的程序升级到<a href="http://wordpress.org/">WordPress</a> 1.2, 升级本身是非常简单的, 正如wordpress网站上说的, installing WordPress and upgrading from previous versions and other software is a piece of cake, 它的安装升级脚本做的非常完善且友好, 访问一个URL点击几次next就做好了, 因为是全web化的配置, 保存在数据库中的, 一切都自动完成. 不过update我自己的页面template耗了些时间, 因为新版本提供的函数有些更改了, 必须手工修改, 如果用它的default template就不需要费这些功夫. </p>
<p>我的blog从最早的b2, 到WordPress 0.5x, 到现在的WordPress 1.2, 几次升级, 感觉这个软件越做越好了. XML-RPC的支持, email-blogging, 可自定义字段, link manager, 层次化的category, 多作者, 图片上传和自动生成缩略图, 保存草稿… 还有好多细节方面的功能都不错.</p>
<p>我还考虑过是不是该把blogbus上的这个blog也搬到自己的WordPress上边去, 不过暂时blogbus还是用得不错, 搬起来挺麻烦的, 而且它的HTML编辑挺方便, WYSIWYG, 还是等等再说吧.</p>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>千万要记住，不能直接在浏览器上写东西</title>
    <url>/blog/2004/06/08/And-always-remember-not-directly-in-the-browser-writing/</url>
    <content><![CDATA[<p>刚才写的东西一个误操作就没有了:(</p>
<p>其实我一般都比较小心的，重要的东西通常都先写好再贴到web page上。刚才丢掉的东西虽然觉得不是很重要，但丢了还是觉得很可惜——浪费了时间和心情啊，肯定不会重新再写一次了。</p>
<p>以后要记住，不能再直接在浏览器上写东西了。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员之胡思乱想</title>
    <url>/blog/2004/06/12/The-programmer-head/</url>
    <content><![CDATA[<p>我相信万事万物均有其内在之美，绘画有色彩之美，音乐有韵律之美，建筑有结构之美，数学有逻辑之美，程序也是一样，程序之美在代码之中，美的代码犹如绚丽之画卷，随着阅读展露于眼前，慨叹于架构的精巧，设计的美妙，细读下去又象隽永的散文，行文流畅。</p>
<p>我也相信真正的程序员都有对美的追求，其实不亚于艺术家对美的追求。同样做一件瓷器，普通工匠的只是放在大街上叫卖，大师的作品却是陈列在博物馆中价值连城。工匠与大师的区别，就要看他做出来的作品是平庸还是精妙。大师也是从工匠出身的，经过对美的执着追求，不断磨练，终于练就出不凡的手艺。</p>
<p>Make it work, make it better, 我很认同这句话，work是基本的价值所在，better是进一步发掘价值。就像创造一个雕塑，最先是要搭起骨架，然后制作泥胚，总体形态具备后，在逐步加工，细化，最后才是细节的精雕细琢。</p>
<p>可是，我们永远做出来的都是毛坯，加班加点赶制出一个毛坯后又匆匆忙忙赶制下一个，从来都没有制成过成品，甚至没有人在脑子里设想过它的样子。不断的重复着的都是制造半成品的劳动，别说要成为大师了，想要成为好工匠都很难。</p>
<p>也许有人会说，精益求精这只是工匠的个人追求，老板们追求的可是如何赚更多的钱啊，做得越快，卖得越多不就赚得越多吗。</p>
<p>有些人很喜欢挂在嘴边的是“80－20”原则，可是滥用的“80－20”原则却是成了不思上进的一个挡箭牌。没错，80％的功能是由20％的工作量就可完成的，看起来为了后边那20％的完善耗费80％的工作量很不划算，但是换个角度看，有可能80％的功能只是提供的产品最基本的价值，后边的精益求精却可以带来数量级的价值增长。</p>
<p>市场是可以细分的，客户的需求必然会有不同层次。在同质化的市场竞争中，与其打价格战，为什么不看看能否上升一个档次，创造新的利润空间呢。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>注册到了gmail账号啦</title>
    <url>/blog/2004/06/16/Gmail-account-registered-to-it/</url>
    <content><![CDATA[<p>今天抱着试试看的心态又一次登录blogger.com，在右侧栏看到了一小段文字，有什么gmail的字样，太兴奋了，我都没有来得及看清楚它写的是什么，迫不及待的点击进去——这就是传说中的gmail邀请啊！</p>
<p>不过可惜，注册不到我想要的sunnyday，好像它允许注册的名字一定要与blogger.com的账号名字有关联。我在blogger.com还有另外一个帐户，一定要好好维护着它，天天登录，看看什么时候可以再注册一个，哈哈！</p>
<p>Google的魅力真是无穷，测试中的email系统的账号也成了奇货可居的东西，还催生了一批gmail账号拍卖&#x2F;交换网站。</p>
<p>如果下次再有人问你些stupid问题，你就把这个站点推荐给他吧：<a href="http://www.fuckinggoogleit.com/">fucking google it</a> yourself!</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>图像格式介绍: jpg, gif, bmp, png, ecw......</title>
    <url>/blog/2004/06/29/Image-format-is-introduced-JPG-GIF-BMP-PNG-ecw/</url>
    <content><![CDATA[<p><em>图像格式介绍在网上有很多资料, 随便google一下都能找到. 这是我在论坛上回复别人的帖子, 顺手也帖到这儿.</em></p>
<p>这几种格式都是光栅图像格式(除了光栅格式还有一种是矢量格式), 描述的是图像点阵的色彩数据.</p>
<p>BMP格式是最简单的格式，基本就是图像点阵的内存拷贝。没有任何压缩，也无法表示格外的数据。现在很少用BMP来做图像数据交换了。</p>
<p>GIF和PNG都是索引色彩, 也就是不直接描述象素的颜色, 只是说这个点是几号颜色, 另外有个索引表（调色板）给出颜色号对应的RGB颜色。有简单的压缩算法，但这种压缩仅对于连续色彩的象素（例如大块色块的图形）才有效，适用于颜色有限的图像(如商业图形&#x2F;地图&#x2F;漫画), 对真彩色图像(如照片)不太合适. GIF的LZW压缩算法是有专利限制的（好像是在去年已经过期失效）, 需要授权才能使用, 故此w3c组织另起炉灶订立PNG格式, 对于使用而言两者差不多.</p>
<p>JPG是有损压缩, 利用人眼对高频细节分辨不是很敏感的特性, 将数据量减少。当压缩率过大时, 会在图像色彩变化的边界出现马赛克的现象. 但是作有限度的压缩时, 图像质量损失并不明显, 往往不能察觉。它的压缩率是可以调节的，让制图者可以在图象质量与图像文件大小间取得一个平衡点，因此是很有用的一种格式, 基本上网上的照片都是用jpg格式.</p>
<p>相比起以上的各种格式，TIFF格式更多的是一个框架，它规定了文件的数据段结构，但是对图像数据的具体编码算法没有定义，是可扩展定义的，因此其下发展出很多的子格式。例如原始的TIFF格式是无压缩的，现在也有多种压缩算法的扩展；将地理数据也保存到数据段中，就是GeoTIF格式。因为子格式很多，不是所有图像处理软件都支持，一般都只是支持无压缩的基本格式，故此有时会出现无法打开文件，或者显示图像不正确的现象。TIFF格式在出版业得到比较广的应用，作为标准的图像交换格式。</p>
<p>在地理信息领域，还使用一些其他的有损压缩格式，例如基于小波算法的ecw和MrSID格式。但是这些格式目前还基本是用于专业领域，不如jpg通用，支持的图像处理软件也不多。</p>
<p>对于卫星影像的最终输出，我觉得还是采用有损压缩格式比较好，因为图像数据量实在太大了，如果不压缩或者压缩过小，对于存储、传送都不方便。采用合适的压缩率，图像质量基本不会受到影响，看看网上的漂亮mm照片，都是jpg有损压缩的:) 如果是在oziexplorer中观看，建议使用ecw格式，ecw的好处在于可以局部加载数据，减少内存占用，对于超大图像有好处；它不像其他格式，即使只显示图像其中一小快，也要将整个图像数据全部解码放入内存。但是能处理ecw的软件很少, 只能在最后输出最终结果时转换.</p>
<p>地图制作，看什么图，如果是色块为主的图，用gif&#x2F;png比较合适，如果色彩都是过渡的，就还是用jpg或者ecw好。</p>
<p>图像压缩：<a href="http://media.cs.tsinghua.edu.cn/~ahz/digitalimageprocess/chapter14/chapt14_ahz.htm">http://media.cs.tsinghua.edu.cn/~ahz&#x2F;digitalimageprocess&#x2F;chapter14&#x2F;chapt14_ahz.htm</a></p>
]]></content>
      <tags>
        <tag>ImageProcessing</tag>
      </tags>
  </entry>
  <entry>
    <title>MicroDEM制图所需地理数据转换方法</title>
    <url>/blog/2004/06/30/MicroDEM-/</url>
    <content><![CDATA[<p>MicroDEM使用dbase来保存数据, 但一般通用的地理数据都是MIF格式较多。MicroDEM不支持import其他格式的数据。</p>
<p>其实MicroDEM中的dbase就是shp格式。数据可以使用GlobalMapper来转换, 读取mif文件, export vector data为shapefile, 会生成3个文件, 其中一个是dbf, MicroDEM可读取的格式.</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>Doxygen不能支持中文文件名/路径:(</title>
    <url>/blog/2004/07/01/Doxygen-/</url>
    <content><![CDATA[<p><a href="http://www.stack.nl/~dimitri/doxygen">Doxygen</a>是一个很不错的文档生成程序，类似于JavaDoc的功能，但是能支持C++&#x2F;C&#x2F;Java和其他的好些语言。今天在使用的时候，发现doxygen不能处理带有中文的文件名或者路径，就把源代码下载回来，看看是什么问题。</p>
<p>问题很容易定位出来，又是unicode和字符集转换的问题，字符集真是让人头痛的东西:(。当在windows平台上运行时，它使用了WideCharToMultiByte来转换字符集，但没有判断当前locale，只是用了CP_ACP(ANSI)code page，故此对于中文就转换成为乱码了（其他multi-byte字符集也会有问题）。</p>
<p>本来想改的，发现doxygen底层用的都是QT的代码，什么QString, QCString，完全是自己独立的一套东西，好些地方似乎都没有考虑mbs字符集的问题，实在跟不下去了，也不知道它的国际化是怎么做的，KDE也是基于QT函数库的呀，也许是windows版本的问题？放弃，给doxygen作者写了个bug report，看看他会不会去修改吧。</p>
<p>ps.</p>
<p>忍不住又再看了一下代码：不从根本上解决问题，只做个临时解决方案，把code page写死为936（简体中文），该可以吧？谁知还是不行:( 再跟踪一下，发现这个程序一点都不i18n friendly，虽然内部使用unicode，但是输入&#x2F;输出转换都只是按照ascii&#x2F;Latin1编码来做转换，在英文环境下就正常，一旦使用了非拉丁字符集就出问题了。这样用unicode跟不用有什么区别啊？！</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows系统错误的查找</title>
    <url>/blog/2004/07/07/Windows-/</url>
    <content><![CDATA[<p>最近两次启动windows 2000, 启动时间莫名其妙的长, 居然要5分钟, 我还以为死机了:(</p>
<p>实在忍受不了, 查看”事件管理器”, 发现有几个错误. 在网上搜索一下, 发现了一个好网站<a href="http://www.eventid.net/">eventid.net</a>, 可以查找到事件的详细解释和解决办法.</p>
<p>一查才知道, 原来好几个错误都是由于DNS没有正确设置引起的, 晕:( 昨天改过IP, 把DNS设错了, 居然会造成启动慢的问题.</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>智能的google</title>
    <url>/blog/2004/07/09/Intelligence-of-Google/</url>
    <content><![CDATA[<p>今天偶然发现，google搜索能够识别同义词。输入“优点”作为搜索关键字，它会帮你把带有“好处”这个关键字的页面都搜索出来。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>语音浏览技术规范简介</title>
    <url>/blog/2004/07/10/Speech-browse-technical-specifications-profile/</url>
    <content><![CDATA[<p>一直以来，在CTI领域语音应用的开发都是采用各厂商的专有技术的，每个平台厂商都伴随自己的平台推出一套语音业务开发的规范，有些是脚本式的语言，有些是图形化的流程，这些规范受限于平台，相互之间没有兼容性，基于这些专有规范开发出来的语音业务很难从一个厂商的平台移植到另一个厂商的平台。</p>
<p>另外一方面，这些专有的语音业务开发规范的体系是非开放性的，业务控制局限在语音平台内部，与外界系统进行交互只能通过有限的途径，例如访问数据库、数据访问网关，开发COM接口组件等。造成难于与外部系统有机集成，集成成本高。在业务开发上，也因为业务处理逻辑与用户交互控制混合在一起，使得复杂业务的开发难度和维护难度都比较高。</p>
<p>近年来，随着网络技术的发展，各种业务应用都纷纷往网络方向发展，充分利用internet的数据自由流动和协议标准化的优势，CTI技术与web技术融合的需求越来越大。基于web的各种开发技术也迅速发展并成熟，包括J2EE、.NET、WebService等等，web应用开发渐渐变得快捷而高效。另外一方面，随着手机、PDA等手持设备的发展，对于延伸使用者界面，多模式互动的需求越来越多，提供键盘、笔输入、语音等多种输入手段，各种文字、影音输出途径，语音应用和传统文字&#x2F;图形应用的界限越来越模糊。</p>
<p>在这样的趋势下，业界研究推出了多种涉及语音技术的标准规范。其中，W3C（World Wide Web Consortium）走在前面，其下的语音浏览器工作组等多个工作组进行的标准规范制定工作都涉及了语音技术。目前，对于电话和语音应用领域，重要的规范有三个，分别为VoiceXML, CCXML(Call Control eXtensible Markup Language), SALT(Speech Application Language Tags)。</p>
<p>这三个规范都是基于XML的，这是因为XML作为一种可扩展的通用标记语言，有着标准化、结构化的特点，并且对于XML的生成、传输、解析、验证、查询都已经有一系列相当成熟的技术和编程开发包，存在着很大的优势。但XML本身并不说明什么，它只是用来描述规范的一种语言，支持XML跟支持VoiceXML、CCXML这些规范是完全两回事。</p>
<p>这三个规范应用在系统中，部署架构基本是相同的，从高层次来看，由两个主要模块构成：文档服务器（document server）和电话语音平台（speech&#x2F;telephony platform）。文档服务器由web server、database server、application server等构成，可以使用J2EE或者.NET平台。业务应用部署在文档服务器上，它响应电话语音平台发送来的请求，生成XML规范文档。电话语音平台包括了解释器、TTS、ASR等部分，它解释执行文档，负责与用户的交互界面。</p>
<p>电话语音平台与PSTN接口，或者提供VoIP支持。当一个呼叫进入系统，电话语音平台分析出业务类别，通过HTTP协议向文档服务器发起请求。文档服务器执行业务应用，生成VoiceXML或者CCXML规范的文档，返回给电话语音平台。电话语音平台内置了VoiceXML或者CCXML浏览器，解释执行文档内容，控制ASR与TTS操作，与电话用户进行交互。TTS服务器将文字合成为语音，播放给用户；ASR服务器接受用户的语音输入，利用语法规则(grammar)将用户说话内容识别为文本数据，平台在脚本控制下根据输入内容判断下一步的执行。</p>
<p>大多数情况下，基于web的应用都会采用易于扩展的架构，将核心服务逻辑（业务逻辑）与表示细节（VoiceXML, CCXML, SALT, HTML, WML）分离开。某些场合下还会将应用对话状态的维护与表示层分离，以实现表示语言机制的无关性，这样同一个应用可以采用web（HTML）、wap（WML）、语音（VoiceXML&#x2F;CCXML）等不同的表示形式，适应PC、PDA、电话等多种用户终端。</p>
<p>使用这些XML系列标准技术规范的系统与过去传统专有规范的系统在架构上有所不同，使用标准规范的系统，业务的部署与平台的部署是分离的，相互通过HTTP协议松耦合，业务采用URL进行定位。这使得业务的分布部署变得非常简单。业务的开发采用web应用开发完全相同的模式，使得语音业务开发人员可以充分利用web应用开发的技术和经验。并且，用较小的代价就可以实现语音应用与web应用集成，或者实现应用的多种表示形式，适应不同的客户终端。</p>
<h4 id="VoiceXML"><a href="#VoiceXML" class="headerlink" title="VoiceXML"></a>VoiceXML</h4><p>VoiceXML可以理解为另外一种表示语言，类似于HTML和WML。它是一种表述对话（dialog）的语言，用来控制业务过程中的人机交互过程，适用于面向电话、手机等终端设备的语音应用，例如自动客户服务、自助查询系统、个人消息系统等。</p>
<p>将VoiceXML与HTML对比，就能很容易理解了。浏览器解释后，HTML表示的内容是以文字图像方式显示在屏幕上的，VoiceXML的内容是以语言的方式播放给用户的。HTML接收用户的文字输入和鼠标点击，VoiceXML接受用户的语音输入，进行语音识别，或者是通过电话按键输入DTMF数据。</p>
<p>VoiceXML是一种独立的语言，不能内嵌到现有的web语言中（如HTML，WML）。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">vxml</span> <span class="attr">version</span>=<span class="string">&quot;2.0&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">catch</span> <span class="attr">event</span>=<span class="string">&quot;event.exit&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">exit</span> /&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">catch</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">id</span>=<span class="string">&quot;choose_menu_option&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">prompt</span>&gt;</span>  </span><br><span class="line">You are in a demo for content services.  </span><br><span class="line">To obtain stock quotes, say stocks or say 1.   </span><br><span class="line">For weather information, say weather or press 2.  </span><br><span class="line">For news, say news or press 3.  </span><br><span class="line"><span class="tag">&lt;/<span class="name">prompt</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">choice</span> <span class="attr">dtmf</span>=<span class="string">&quot;1&quot;</span> <span class="attr">next</span>=<span class="string">&quot;#stocks_menu_option&quot;</span>&gt;</span>stocks<span class="tag">&lt;/<span class="name">choice</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">choice</span> <span class="attr">dtmf</span>=<span class="string">&quot;2&quot;</span> <span class="attr">next</span>=<span class="string">&quot;#weather_menu_option&quot;</span>&gt;</span>weather<span class="tag">&lt;/<span class="name">choice</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">choice</span> <span class="attr">dtmf</span>=<span class="string">&quot;3&quot;</span> <span class="attr">next</span>=<span class="string">&quot;#news_menu_option&quot;</span>&gt;</span>news<span class="tag">&lt;/<span class="name">choice</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">nomatch</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">prompt</span>&gt;</span>I could not understand what you said, please try again<span class="tag">&lt;/<span class="name">prompt</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">reprompt</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">nomatch</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">noinput</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">reprompt</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">noinput</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;stocks_menu_option&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">block</span>&gt;</span>  </span><br><span class="line">...  </span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;weather_menu_option&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">&quot;city&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">grammar</span> <span class="attr">type</span>=<span class="string">&quot;application/srgs+xml&quot;</span> <span class="attr">src</span>=<span class="string">&quot;cities.grxml&quot;</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">prompt</span>&gt;</span>Pleasesaythe city&#x27;s name<span class="tag">&lt;/<span class="name">prompt</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">field</span>&gt;</span>  </span><br><span class="line">...  </span><br><span class="line"><span class="tag">&lt;<span class="name">filled</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">submit</span> <span class="attr">next</span>=<span class="string">&quot;http://host/weather.do&quot;</span>/&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">filled</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">id</span>=<span class="string">&quot;news_menu_option&quot;</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">block</span>&gt;</span>  </span><br><span class="line">...  </span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">vxml</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>从例子可以看出，VoiceXML描述的是一个个对话，menu和form是对话的两种形式。menu是列出选择项，供用户选择；form是播放提示语言，接受用户输入。</p>
<p>&lt;prompt&gt;、&lt;audio&gt;控制语音输出，输出有两种方式，一种是利用TTS将文本合成为语音，另一种是播放预先录制好的语音文件（如vox，wav）。为了控制合成语音的过程，提供丰富的语音表现形式，要求VoiceXML解释器支持SSML（Speech Synthesis Markup Language）语言，SSML可以控制TTS如何合成语音，例如重音、停顿、声调、数字播报方式等。</p>
<p>语音输入的识别是通过语法规则控制的，&lt;grammar&gt;指定输入项采用什么语法规则进行识别，语法规则要求使用SRGS(Speech Recognition Grammar Specification)规范的格式来描述。</p>
<p>VoiceXML的执行顺序是有内置的规则的，称为FIA（Form Interpretation Algorithm），解释器根据FIA选择对话，执行对话中的输入、输出操作。为了提供对例外情况的控制手段，改变执行流程，VoiceXML具备事件机制，通过&lt;throw&gt;, &lt;catch&gt;, &lt;noinput&gt;, &lt;error&gt;,&lt;help&gt;, &lt;nomatch&gt;等元素可以抛出事件和捕获事件。</p>
<p>通过&lt;goto&gt;、&lt;submit&gt;等控制元素，能实现对话之间或者文档之间的转移。</p>
<p>在VoiceXML中，可以嵌入ECMAScript(即通常说的JavaScript）代码，实现客户端的运算功能。</p>
<p>VoiceXML提供了一些机制实现扩展和重用，&lt;object&gt;元素供实现平台定义的功能，&lt;subdialog&gt;可以实现语音组件的重用。</p>
<p>VoiceXML的目的是用来控制语音方式的人机交互过程的，因而它缺乏对呼叫的控制能力。例如会议、呼叫控制、建立呼叫、拒绝呼叫等等都无法实现。</p>
<h4 id="CCXML"><a href="#CCXML" class="headerlink" title="CCXML"></a>CCXML</h4><p>针对VoiceXML在呼叫控制方面的不足，CCXML补充了这部分的功能。它能够发起呼叫、过滤和路由进入的呼叫、处理外部的异步事件。并且它能支持多方会议，可以将VoiceXML实例作为参与者加入会议，并控制VoiceXML的执行和停止。与VoiceXML类似，由CCXML浏览器负责解释执行CCXML文档。</p>
<p>CCXML可以独立使用，但很多情况下是与VoiceXML配合使用，CCXML控制整个呼叫模型，VoiceXML控制每个呼叫中的用户交互。单纯的VoiceXML是无法实现电话QQ之类的涉及到多方通话的业务的，利用CCXML就有可能实现了。</p>
<p><em>（未完成）</em></p>
<p><em>原来计划写成一篇介绍VoiceXML、CCXML和SALT，并且比较异同点的文章的，后来因为工作安排的原因半途而废了。CCXML日后如果需要，可能会进一步研究，到时也许会补上；SALT在我的工作中不会涉及，不打算在上面花时间了。</em></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>可怜的腾迅</title>
    <url>/blog/2004/08/04/The-poor-who-newsletter/</url>
    <content><![CDATA[<p>所谓树大招风，腾迅这回可是中招了，面对愤青们打着爱国主义和民族主义旗号的攻势，却是苦水只能往肚子里咽。QQ的主要用户群是青少年学生，正是最热血沸腾的年龄，看来这次事件对腾迅的影响不可谓不大。</p>
<p>看看QQ游戏里面都过滤些什么单词吧，在QQ安装目录里面找出COMToolKit.dll这个文件，用VC把它打开（或者其它的能查看资源的工具，实在没有，用UltraEdit也可以，不过会夹杂着很多乱码），就可以看到有两个叫做“DIRTYWORD”的资源，id分别为9001和9002，在鼠标右键菜单中选择导出，把它们存入文件，用文本编辑器打开，怎样，大开眼界吧？好多词，我们这些良民百姓都不知道有什么含意。</p>
<p>可以看看 <a href="http://forum.future.org.cn/showthread.php?p=618922">http://forum.future.org.cn/showthread.php?p=618922</a>的21楼（不知道最初出自哪里），有详细一点的介绍。作者是个反日派，他的结论也挺有意思：</p>
<blockquote>
<p>从这个过滤词表看，可以得出几个结论：第一个结论，大家说话都不怎么流畅，全是他妈的弱势群体，谁也别笑话谁。以后坛子上的反腐斗士和自由派，别老拿这个来数落俺们反日派。俺们也互相体谅。第二个结论，政府对民族主义算是比较纵容的了，虽然也提防着，但主要也就提防大家上 街，网上骂骂，一般来说是安全的。第三个结论，别骂腾讯。尽管腾讯的发家有那么些不光彩的地方，但这事怪不了它。不负责任胡乱攻击只会给我们多树敌人。</p>
</blockquote>
<p>最后一段是奉劝我们自己人的。第一句话是奉劝新网友的。新网友别每天就知道灌水起哄，“把腾讯移交有关部门处理”啥的，惹人家笑话。不管你将来准备加入什么思潮流派，第一步应该是了解自己的处境，别以为教科书上说你是国家的主人，你就真的信了。了解了自己的处境，才能改变它。第二句话是奉劝老网友的，过滤词什么的，大家在网上混那么多年的，都知道是谁干的，老虎谁都不敢打不敢骂，这也没什么丢脸的，不敢骂就不敢呗，抓住一只小猫暴扁干嘛？充英雄吗？表演自己的怯懦而已。   </p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>Mind map, FreeMind</title>
    <url>/blog/2004/08/26/Mind-map-FreeMind/</url>
    <content><![CDATA[<p>Mind map，中文翻译为”思维导图”。听起来有点玄乎，说白了就是以图像方式记录思路或者描述事物的一种方法。（看看下面的图就有直观了解了）。在我的理解中，mind map是辅助整理思路和思维扩展的一个工具，一方面以层次化的形式将思路条理化，另一方面能快速记录下头脑中闪现的想法，特别适合于头脑风暴的场合。</p>
<p>两年前看到有关mind map的介绍，当时非常感兴趣，跑去图书馆把Tony Buzan的书借来看。惭愧的是，书放到过期都没有看几页，因为对那些心理学的理论不感兴趣。Tony Buzan在书中把这个方法吹嘘得神乎其神，我总觉得他有黄婆卖瓜之嫌。Mind map从本质上与outline（大纲）差不多，它的很多长处用outline也可以实现。但他说到人的大脑对于文字、图像、声音是由不同的区域处理的，图像的方式可以刺激大脑的特定区域，比单纯文字要好，对此我是很有体会的，一向以来我都比较喜欢以画图的方式来思考问题。</p>
<p>当时试用过几款mind map软件，最好的应当算是MindManager了，但用了一段时间，没有养成习惯，也就没有感觉到什么特别的好处，还是放弃了。后来我在需要整理思路的时候都是采用outline：如果写文档，在word里面采用大纲视图；日常的笔记，我喜欢用CyberArticle，它是使用HTML格式的，用列表或者项目符号也很方便的组织大纲；palm上也有类似的工具，但用得不多。如果需要记录思维，而不希望因为记录的过程而束缚思路，我更习惯用纸和笔。</p>
<p>其实不是mind map不好，而是这些软件在人机交互界面上都未能突破电脑与纸笔之间的隔阂。用手写画，眼睛看着纸上的图像获得反馈，是我们最习惯的方式。使用电脑之后，中间环节插入到这个过程中，大脑需要处理如何进行电脑录入，特别是当软件设计得不好，操作复杂，或者响应速度慢时，反馈过程立马被打断了，造成了思维的障碍。从这个角度看，tablet PC应当是优于键盘鼠标输入的普通电脑的，以前我曾经写过<a href="http://www.blogbus.com/blogbus/blog/diary.php?diaryid=52190">这方面的想法</a>。</p>
<p>今天<a href="http://www.blogbus.com/blogbus/blog/diary.php?diaryid=348523">flyisland</a>推荐的软件<a href="http://freemind.sourceforge.net/">FreeMind</a>，试用了一下，感觉很不错。</p>
<ul>
<li>首先，功能简洁实用，虽然并没有MindManager那么强大，但是常用的都有了 </li>
<li>使用简单，试了一个小时左右，大部分的功能都已经掌握了。学习曲线平缓，对于这样一种通用型工具很重要 </li>
<li>使用非常方便，常用功能用键盘就可以控制，不需要鼠标，这样的操作界面可以进行快速记录，减少对思路的阻碍 </li>
<li>虽然是用java开发的，内存占用不算多，运行速度也快。对mind map软件来说速度是很重要的，如果经常出现用户察觉到的等待，就没有什么使用价值了 </li>
<li>Open source！</li>
</ul>
<p>有关mind map和FreeMind，还可以看看flyisland的介绍。<a href="http://www.blogbus.com/blogbus/blog/diary.php?diaryid=348523">http://flyisland.blogbus.com/logs/348523.html</a></p>
<p>这个就是我试用FreeMind时做的练习，同时也归纳出它的基本使用方法，希望能再进一步减少你的学习时间吧:)</p>
<p><img src="http://sunnyday.cn2k.net/photo/freemind_usage.gif"></p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>用bayesian过滤来实现论坛发言自动检查</title>
    <url>/blog/2004/09/07/Bayesian-filter-with-to-achieve-the-BBS-speech-to-be-automatic-check/</url>
    <content><![CDATA[<p>Bayesian过滤已经广泛用于邮件系统的anti-spam功能中，通过统计分析出spam邮件词语的统计特征，实现自动识别。</p>
<p>根据这个思路，也可以将bayesian过滤用在论坛的发言检查中，以减少版主工作量。</p>
<p>考虑到要易于与现有论坛系统集成，发言过滤器可以做成webservice之类的服务，提供两个功能调用：</p>
<ul>
<li>void train(String content, boolean isMatch) </li>
<li>boolean filter(String content)</li>
</ul>
<p>前者让发言过滤系统学习，分析content特征；后者让系统分析content是否应该被过滤，返回值也可以是一个浮点数，表示分析出是敏感内容的可能性（确定性）。</p>
<p>对于论坛系统，如果本来已经支持版主审核功能的话，改造很简单。用户发言，调用filter方法，如果返回false，直接设置为已审核状态，直接显示；如果返回true，设置为待审核状态，等待版主人工审核。版主审核时，将选择是否需要过滤此内容，调用train方法，让过滤器学习。</p>
<p><a href="http://classifier4j.sourceforge.net/">Classifier4J</a>可以用于过滤器的开发，已经提供了Bayesian分类功能，需要补充的是中文分词的实现。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Picasa, 适合家用的图片管理软件</title>
    <url>/blog/2004/09/14/Picasa-/</url>
    <content><![CDATA[<p>Google出品，必属精品。我发现我对google已经产生了一种不由自主的崇拜，从google search到gmail，blogger（可惜在国内被封），和这个picasa。也许，google是另外一个apple——拥有自己一群忠实的fans，形成了独特的文化。</p>
<p><a href="http://www.picasa.com/picasa/">Picasa</a>是最近google收购回来的一个图片管理软件。过去，图片浏览管理大多都是用ACDSee，picasa有什么不同？新的用户体验，就像gmail不同于其他webmail，不是拥有同样功能的仿制品，而是带来了一种新的资料管理（整理）模式。图片按照album组织，根据timeline显示，操作界面简单、舒服。据说，picase与mac的iPhoto类似，不过我没有iMac无缘试用iPhoto。</p>
<p>Picasa还有很多缺点，例如不能显示中文，无法显示EXIF信息，不能添加注释，不提供zoom… 目前它看来还不能替代ACDSee，但这个软件看来挺有前途，值得期待。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>奢侈一下，买台液晶吧</title>
    <url>/blog/2004/09/19/A-luxury-buy-a-LCD-it/</url>
    <content><![CDATA[<p>家里的显示器比较老了，用起来总是感觉不爽。我的电脑除去上网文字处理等日常使用外，用途主要是两个，照片编辑和GPS&#x2F;GIS应用。现在的显示器两个不爽：一个是尺寸问题，15寸只能上800*600，用photoshop调整照片时就算把工具panel全部关闭也看不全，在OziExplorer里面看地图也嫌显示范围不够大。另一个是显示效果不佳，感觉不锐，总有点灰蒙蒙似的，颜色也不够艳丽。</p>
<p>最初想法是换个好些的CRT，不考虑液晶。一方面是液晶贵，另外“专业人士”都说在图像处理方面液晶比CRT还差得远。年初的时候了解过市场行情，才发现17寸的特丽珑已经停产了，钻石珑的好显示器也没有几款，CRT市场变成了高端和底端两个断层。贵的买不起，便宜的又不见得比现在用的好太多，就算了。</p>
<p>前几天在整理一些照片的时候，又被刺激了一下神经，更换显示器再次提上日程来。17寸CRT没有什么好选择，那么看看19寸，象点样子的都要三四千，而且这么大的显示器又笨重又占地方，再看看现在好些的LCD，效果也比以前改进不少了，不如还是LCD吧。还有，虽然现在都在宣传多少毫秒17寸液晶跌破3000元了，但是那些货色实际效果都只是一般的。看看人家推荐的型号，一查价格，哇，都是七八千的。一路看下来，将我的心理承受价位不断推高。我知道了，很多人就是这样一步步“中毒”的:)</p>
<p>网上看得不少了，今天去逛电脑城，看看实物是怎样的。每进一个店面，伙计都热情招呼，“想看些什么？CRT还是液晶”，“液晶，17寸的”，“哦，17寸液晶就是这款了，正在做特价……”，伙计往往都是指着最低档的一款向我介绍。显然，我的样貌打扮都象个学生。样品演示的大多都是严重ps过头的图片，艳丽无比，却毫无层次，每个LCD都像灯箱一样，看不出什么区别，估计大部分人也就是看看外形挑便宜的买吧。店员的水平通常也麻麻，除了不断重复12毫秒500比1之类的话外就说不出产品的其他优点了。也是的，懂得多的人也不会在电脑城买东西。有意思的是在一家店看sony的样品，我让店员放些图片来看效果，她找遍硬盘都没有找到，居然想到个点子，登录自己的163邮箱，把私人邮件里面的数码照片拿出来show。</p>
<p>我不玩游戏，也不打算用电脑来看电影，应用都是静态图像为主，因此刷新速度什么的并不重要，关键是色彩还原效果。主要看两方面，暗部层次表现和可视角度范围。如果观看位置上下偏一点，画面的明暗就有变化，这就不可接受了，调整照片的时候根本不知道应该以什么亮度为准。依照这个标准，电脑城里有样品演示的17寸主流产品几乎没有一个及格:( 唯一感觉很好的是samsung 173p，看来TN面版的可视角度都不行，PVA面版的才可以接受。至于暗部的表现能力，LCD比起CRT始终还是差一些，看灰阶都还比不上我现在用的这台低档CRT。</p>
<p>本来想看看高档产品的效果比较一下的，例如EIZO之类的无忌毒友老挂在嘴边的品牌，可是走了几个电脑城都没有看到有样品摆出来，卖的都是三星LG菲利浦等大众品牌。</p>
<p>看来选定的是173p了，就等广州市场什么时候降价——人家上海都卖4200了，广州还报五千多。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>遭遇病毒(木马)</title>
    <url>/blog/2004/11/02/Encounter-virus-Trojan/</url>
    <content><![CDATA[<p>操作系统刚重装才一天，就出现了莫名其妙的问题。svchost进程就会把CPU全占满，使得系统几乎没有响应。用procexp（Process Explorer）来查看进程，这个svchost.exe确实是系统自带的，是系统服务的宿主进程。</p>
<p>Reboot机器，重试几次，发现不连上网的时候一切正常，一旦网络连上了，CPU就被那个svchost占满，如果把那个进程杀死，系统就不能正常工作。当时刚刚安装了Norton AntiVirus，它的auto update服务会在网络连上的时候自动开始，所以我怀疑是NAV update服务引起的。把NAV卸载了，问题依然存在。因为那个svchost是RPC服务的，我又以为是操作系统的问题，什么文件的版本乱了，就用安装盘采用重装式修复，可是还是不正常。</p>
<p>毫无头绪之际，再度用procexp监视进程树。这次发现一些异常了：svchost启动了一些tftp进程。这些tftp在做什么？从219.137.217.181下载文件，下载的文件名为atiphexx.exe、winupdatez.exe等，还有不少没有记下来。很奇怪啊，是否系统中了木马？检查一下tftp，也是系统自己的东西，没有异常，那是谁启动这些进程的呢？</p>
<p>安装spybot，检查系统，没有查出木马程序。但是，过了一会，注册表监视器报警了，有进程要往注册表的系统启动run项目里写入新内容，居然就是winupdatez.exe。这不用说都是木马了。在winnt\system32目录下找到这个winupdatez.exe，删除。再检查注册表，把相关项目都删除。重启系统，正常了。</p>
<p>开始时太大意了，居然没有第一时间检查注册表的run里面有没有异常，白白浪费了两晚时间。不过，当初进程树里面看到的都是系统的进程，没发现这个winupdatez进程，所以才没有怀疑是病毒&#x2F;木马。是否还有其他名称的木马存在呢？我心里还是没有底。不过系统现在运行正常了。新装系统，真的是要把所有防护措施都做好才能上网:(</p>
<p>这次用到工具软件Process Explorer很不错，能够看到很多Task Manager没有的进程信息，是<a href="http://www.sysinternals.com/"> www.sysinternals.com</a> 的出品。Sysinternals还有好几个不错的小软件，都是监视系统运行情况的，包括tcpview、filemon、regmon等。</p>
<p>系统除了安装防火墙之外，还应该装上一个可以监视注册表改动的工具。现在修改注册表的网页太多了。我用的是Spybot，兼有木马查找和注册表防护的功能，我喜欢它能够从网上update规则。</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>色彩管理 (1)</title>
    <url>/blog/2004/11/12/Color-management-1/</url>
    <content><![CDATA[<p>处理照片时，被偏色问题折磨得受不了，这一个多星期里刻苦学习色彩管理知识。无忌上面几百个跟贴的话题看得头晕脑胀，还是东一句西一句就没有系统的叙述。</p>
<p>总算有点头绪了，把学到的东西总结一下。主要针对怎样在显示器上显示出准确的颜色，不涉及太多打印、印刷的内容，适合普通用户啦。</p>
<p>一张照片，从扫描仪扫描出来，或者用数码相机拍摄下来，保存成文件，再放上网，在不同的电脑上查看，效果跟原始图像往往已经有很大不同了，而且不同的电脑看出来的效果还不一样，可能是暗了，或者亮了，又可能是偏红，或者偏青。色彩管理的目的，就是在图像输入、处理、输出的整个过程中，尽可能保持一致。</p>
<p>色彩管理，首先要理解的概念是色彩空间。这是在色彩量化的过程中引入的概念。常用的图像格式都是用RGB三个数值来表示颜色的，但是，当说一个点的色彩是(203,45,73),这样的数值有什么意义呢？它表示什么颜色？红色，是怎样的红？如果不将数值放入一个坐标系中，数值就没有实际的含义。色彩空间就是颜色的坐标系。</p>
<p>不同的色彩模型，有不同的坐标体系，例如我们最熟悉的RGB，用于印刷的CMYK，还有基于色度模型的LAB等等。就像几何学中，有直角坐标也有极坐标。下图所示的是标准色彩空间CIE XYZ。下面主要是按照大家最熟悉也是最直观的RGB模型来说吧。</p>
<p><a href="http://www.flickr.com/photos/leoliang/5137782234/"><img src="http://farm2.static.flickr.com/1427/5137782234_27ebf3e711.jpg" alt="CIE 1931 xy chromaticity diagram"></a></p>
<p>现实世界中的色彩是异常丰富的，但是由于技术的限制，每种设备所能辨别或者重现的色彩范围有限，并不能覆盖可见光域所有的颜色。在图像数字化的转换中，由于设计原因和物理特性的不同，不同设备的量化的效果也不同。例如同样是(203,45,73)这样的数值，一台显示器会显示成鲜红，另一台会显示成暗红。这相当于不同设备的坐标轴的标定是不一样的。因此，每台设备，都有它自己的色彩空间。</p>
<p>这样，问题就来了，没有一个标准，颜色怎么可能准确？扫描仪的色彩空间与显示器的色彩空间不一致，将扫描出来的数据原封不动送给显示器，颜色就会改变了。我们必须有个标准的坐标系才行。现在就要引入一个新的概念—-设备无关的色彩空间（PCS）。上面提到的CIE XYZ就是一种常用的标准的设备无关色彩空间。图像数据在不同色彩空间之间转换时，要经过特定的算法进行换算，相当于几何中的坐标系变换。</p>
<p>一个图像文件，里面保存的是一堆数据，怎么知道它是哪个色彩空间？我们需要给它贴一个”标签”，在标签里说明这些数据采用的是什么色彩空间，当支持色彩管理的图像处理软件读取这个文件时，先看看标签，就知道怎么去做色彩空间的转换了。ICC profile，就是这样的”标签”，它保存着一组数据，包含了这个色彩空间与PCS之间的换算关系。把ICC profile数据嵌入到图像文件里面，图像文件就能对数据的色彩空间作出自描述。但是，千万别把profile弄错了，如果一个文件，它的数据实际上是A色彩空间的，你把B色彩空间的profile指定给它，图象处理软件就会把它当成B色彩空间来转换，造成偏色。就像一个网页，明明是GB2312编码的，你把它当成big5来打开，就会出现乱码。</p>
<p>CYE XYZ够标准了，但在实际的图像处理中并不使用，常用的标准色彩空间是sRGB、Adobe RGB等，为什么？首先，xyz这样的坐标系不直观，如果是RGB坐标系，R的数值大了，你就知道是偏红了，但x增大了，但你不知道它有什么实际意义。其次，CYE XYZ色彩空间的范围太大了，远远超出设备、材料能表现的色彩范围，如果用同样的精度来量化，就需要更大的数据长度，而多出来那部分其实是没有意义的，因为不可能用到，浪费了存储空间。反正已经知道了每个色彩空间与XYZ空间的换算关系了，就可以在任意两个空间进行转换。</p>
<p>空间转换过程是可能会有损失的（引起色彩变化）。一个原因是换算引起的精度损失，不过这一般可以忽略。主要的损失是发生在大空间往小空间转换时，在源空间可以表示出来的颜色，不再目标空间的范围内，转换引擎只好用一种接近的颜色来代替，造成了色彩的失真。例如，九寨沟的水那种碧中带蓝的颜色就无法在sRGB空间中表现出来。下图表示常用的色彩空间的色域。</p>
<img src="http://www.normankoren.com/Sachs_gamut_chart_2_640.jpg" class="">

<p>ICC profile描述的是色彩空间的特性。前面说过了，每个设备都有自己的色彩空间，因此也应该有一个相应的profile。准确的profile需要采用专业仪器测试得出，普通用户是没有这样的条件的，只能采用设备厂商给出的profile。如果质量控制得好，同一个型号的产品的特性会比较相似，基本上还是可以接受的。低档设备可能厂家不提供profile，这样的设备就无法进行准确的色彩管理了。对于没有profile的设备，可以当作它的色彩空间是sRGB来处理，因为sRGB是一个比较通用的标准，设备设计时往往都会尽量符合这个标准的。</p>
<p>具有色彩管理功能的软件（例如photoshop），可以根据设备的profile，先将图像转换为设备所用的色彩空间，再送给设备输出，这样颜色就能保持一致。但是有些设备（或者驱动程序）已经内置了色彩管理功能，它能够接收标准色彩空间（例如sRGB）的数据，在内部转换成设备色彩空间再输出。这时候photoshop就不应该做预转换，否则重复转换也是造成失真。</p>
<p>正因为有这么多不同的情况，色彩管理才变得很复杂和难以理解，输入、处理、输出各个环节都是相关的，一个环节的错误就会引起最终结果的错误，配置的时候要非常小心。</p>
<p>See also:</p>
<ul>
<li><a href="/blog/2012/09/15/color-management-2/" title="色彩管理 (2)">色彩管理 (2)</a></li>
</ul>
]]></content>
      <tags>
        <tag>ImageProcessing</tag>
      </tags>
  </entry>
  <entry>
    <title>公司讨论组里关于个人理财的对话</title>
    <url>/blog/2004/11/12/The-company-group-discussion-in-the-dialogue-about-personal-finance/</url>
    <content><![CDATA[<p>_我_：这个表格不算很细了:) 个人理财有不少好软件，国产的财智家庭理财做得不错，我就喜欢microsoft money</p>
<p><em>同事_：请问你用了多久？我就用过一些PDA和电脑上的理财软件，还可以同步的，不过最后发现：所有这些都不过是自找麻烦，还是在白纸上写下来的最好</em></p>
<p>_我_：用纸写下来，只是记录，但是不能管理啊？你想知道现在净资产是多少，要算半天；想知道最近什么方面花钱多了，看不出来；比较一下今年总支出跟去年总支出差多少，很难算吧？而这些在软件上面有直观的图表曲线显示出来。MS money的强大之处是report很丰富和灵活，其他理财软件要差远了</p>
<p><em>同事_：想问个私人的问题：你用了多久？因为刚用的时候我也这么想啊，可是后来数据丢失……不是拆台，只是想求证一下。或者我应该两种方式都采用。只是每天就比较烦，要记两次。我经常过了十天才发现：我又忘记记账了</em></p>
<p>_我_：我用了好几年，具体记不清了，起码超过3年。欢迎交流。</p>
<p>数据要自己经常备份，ms money每次exit都会写一个backup文件的。</p>
<p>刚开始使用，要先规划好怎么分类。这很重要，也影响着你日后能否坚持记录下去。<br>如果你怕麻烦或者不想记太细，可以只分一些大类，把日常的费用记入日常支出分类就行了，每次记帐时点点钱，除去大笔的支出要记录明细账，剩余的差值就是日常支出。如果想有更详细的信息，就要把分类分细一点。<br>其实主要关心的还是大数，例如供房、投资、旅游、购物、吃大餐之类的，其他日常的消费每个月都差不了太多的。<br>如果用钱不多，不需要天天记录，两三天一次也可以，但不要超过一周，记不起来的:) 消费的时候把单据留下来，例如购物小票，柜员机的账单，这样就不怕忘记。你有pda，那就更方便了，可以先记下来，到时再记入电脑。我是用palm的。如果间隔时间长了，很大的账目缺口却实在想不起来花到什么地方，可以建立一个独立分类叫做“unknow”，把帐记到这个分类里面，这样可以保持账目的一致，重要的是要坚持下去。</p>
<p>ms money功能很强，也比较可靠，毕竟是microsoft的产品。但是刚开始学习曲线会比较陡，不容易上手，还有就是英文的。但学会怎么用后，就会觉得它非常好用了。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>转用Firefox</title>
    <url>/blog/2004/11/23/To-adopt-Firefox/</url>
    <content><![CDATA[<p>Firefox出了1.0版本，网上展开了铺天盖地的宣传。这真是网络的魅力啊，一个自由软件本来是没有多大力气搞宣传活动的，但经过用户fans的自发传播，也包括搭便车商家的推波助澜，一下子用户量出现了爆发增长。</p>
<p>但宣传归宣传，用户也不是傻瓜，毕竟firefox是一个好软件，mozilla项目这么多年也总算结下一个大果子了。说起来，mozilla为开源社区也贡献了不少东西，除了浏览器套件外，bugzilla、SpiderMonkey&#x2F;Rhino这些“副产品”也是被广泛使用了。</p>
<p>我以前也曾经试用过mozilla suite和firefox，但是那时感觉产品还不成熟，至少还缺乏说服IE用户“叛变”的feature。现在的firefox不一样了，我使用了好几天，感觉基本上已经可以把原来一直用的基于IE内核的Maxthon(MyIE2)替换掉了。</p>
<p>不过，虽然在易用性方面有了很大进步，firefox目前还不能算是一个适合普通用户使用的软件。它的强大，必须在配合各种extensions的情况下才能发挥出来，而extensions需要用户自己去下载安装。对于一个普通用户，面对几百种extensions，怎么知道应该下载哪些。要推广firefox，需要有人（组织）去做打包的工作才行，根据不同的需求，选择合适的extension做出专门的安装包，装好就可以用。</p>
<p>例如大家都说foobar2000比winamp好，我下了一个安装起来，一点都不好用，配置又复杂得要命。后来又见到一个网友做的精选版，将必备的插件、常用的配置做到安装包里面了，一装起来，才发现原来foobar2000是这么好用的。</p>
<p>介绍一下我现在用的extension，基本是为了符合原来使用Maxthon(MyIE2)的习惯而配置的：</p>
<ul>
<li>Adblock：过滤网页广告 </li>
<li>Advanced Highlighter Button (AHB)：将页面的搜索关键字高亮显示(其实这个extension也不是很必要) </li>
<li>ieview：遇到firefox不兼容的网页，可以用IE打开 </li>
<li>FlashGot：使用外部下载工具下载文件 </li>
<li>Tabbrowser Extensions：这个东西用来配置tab的，配置很灵活，当然了，灵活的代名词就是复杂:) </li>
<li>Super DragAndGo：拖放一个link，在新窗口打开；拖放一段文字，打开搜索引擎搜索 </li>
<li>del.icio.us：as title:)</li>
</ul>
<p>Firefox本身的防弹出窗口功能就很好。另外页面搜索也很方便，敲入“&#x2F;”就可以在当前显示页里面搜索文字。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>两个linux小工具：whichcd, checkinstall</title>
    <url>/blog/2004/12/03/Two-Linux-small-tools-whichcd-checkinstall/</url>
    <content><![CDATA[<p>现在的linux安装盘通常都有几张，要找一个rpm包在哪张盘就很麻烦了，要一张张放进光驱里面看。在sourceforge.net上面找到whichcd这个小工具，能够告诉你某个rpm在第几张光盘，也能告诉你当需要某个文件&#x2F;命令时应该安装哪个rpm。</p>
<p>估计它是预先将主要linux发行版的包的资料都保存起来了，支持的linux发行版本有限，RedHat的最齐。</p>
<p>另外一个工具叫做CheckInstall，通过记录软件make install过程中新建和拷贝了什么文件目录，自动生成rpm。（以前有个工具叫做installwatch，现在已经被包含到CheckInstall软件包里面了）。这就大大简化了rpm的制作过程，一个软件只有源码和makefile的，也能够直接制作出rpm，不需要写spec了。当然，这工具只能生成简单的rpm，不能做到检测依赖性、运行pre&#x2F;post script。不过，大部分情况下，能做到这样也就够了。</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>ozi提供了地图拼合的工具</title>
    <url>/blog/2004/12/07/ozi-/</url>
    <content><![CDATA[<p>ozi提供了一个地图合并的工具ozimapmerge, 能够将不同区域、不同比例、不同投影方式的多个地图合并生成新的地图。使用很简单，输入可以是所有ozi支持的地图，带有map文件就可以了；选取一定的区域，指定生成地图的线数，就能输出合并后的地图，格式为ozi专用的ozfx3，并且会生成配套的map文件。如果地图重叠，生成图会选择最精细那幅。</p>
<p>根据我现在的摸索，这个工具有两个用途：</p>
<ul>
<li>我拥有低精度的大区域地图和高精度的局部地图，利用ozimapmerge，可以把高精度地图镶嵌到低精度地图中。 </li>
<li>多幅相邻的地图拼合成一张大图。</li>
</ul>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>眼控鼠标</title>
    <url>/blog/2004/12/09/Eye-control-the-mouse/</url>
    <content><![CDATA[<p>近日看了报道，说长期使用鼠标，很容易导致手腕疾病。以前一直右手用鼠标的，于是换了左手，避免老是一只手过于劳累。不过刚开始还真不习惯，左手总是笨笨的。</p>
<p>鼠标的功能是为了给用户提供一个全屏幕定位的手段，但是，要能准确地选定屏幕的位置，还是需要一个反馈的过程：手移动鼠标，屏幕鼠标指针反映出当前的位置，手调整鼠标移动的方向和速度，直到鼠标指针移动到期望的位置。在这个过程中，要选择的地方就是目光集中所在的地方，故此，如果能够监测到眼球注视的位置，就能获取到用户需要定位的地方，这将是一种最为直观的手段——看哪指哪。这样带来好处，一方面是定位直观快速，另一方面是能将手从鼠标上解放出来，不需要在键盘与鼠标之间来回移动，减少疲劳了。</p>
<p>我想，这“眼控鼠标”应该不算什么天方夜谭的想法吧，canon单反相机的眼控对焦技术已经商用化很多年了，起码说明在技术原理上是可行的。当然，相机取景时眼睛是紧贴取景框的，而使用电脑时距离会远很多，而且头部会移动，所以实现难度可能不小。但是，在这个技术飞速发展的年代，只要能想到，有什么不可能？</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>清爽的桌面</title>
    <url>/blog/2004/12/11/Relaxed-and-desktop/</url>
    <content><![CDATA[<p>一直以为explorer是与windows结合得很紧密的程序，不可缺少。因为它是windows的shell，桌面、菜单、文件浏览窗口都是由它拥有的，如果explorer没有运行，整个屏幕就是空空如也，什么都控制不了。</p>
<p>没有想到，explorer也是可以替换的，<a href="http://www.geoshell.com/">GeoShell</a>就是这样一个explorer的替代品。而且，它是open source的。安装geoshell替换了explorer之后，屏幕界面清爽了很多，可以替换skin，可以安装plugin，最适合那些疯狂的DIYer了，例如可以把系统装扮成MacOS。据说，geoshell占用内存比起explorer要小，稳定性也很不错。我装起来用了半天，确实占内存比explorer少，不过还要用的时间长一点才能确认。</p>
<p><a href="http://www.flickr.com/photos/aleung/2075928/"><img src="http://photos2.flickr.com/2075928_d0c94036cb.jpg" alt="geoshell"></a></p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串模糊匹配</title>
    <url>/blog/2004/12/13/String-fuzzy-matching/</url>
    <content><![CDATA[<p>字符串匹配最常用的是正则表达式，但是正则表达式的匹配非常严格，某些场合下，希望的匹配算法是模糊的，只要求找出相似的字符串而不是完全匹配的字符串，例如拼写错误、插入空格等情况。<a href="http://www.codeproject.com/aspnet/intelligent404page.asp">http://www.codeproject.com/aspnet/intelligent404page.asp</a>这篇文章介绍了如何生成智能的404页面，当URL不存在时可提示出拼写近似的网页。其中使用Levenshtein的算法来计算两个字符串的‘edit distance’,也就是一个字符串要经过多少步修改（增加、改变、删除字符），才能变成另外一个字符串。根据计算出的相似的分值，据此来给出建议结果。</p>
<p>这个算法看来在处理用户输入的时候会很有用，能够增加用户界面的人性化程度。一个友善的提示，比起冷冰冰的“输入错误”友好多了，降低了用户使用软件时的心理阻碍。另外，这个算法应该也是可以适用于中文的，采用unicode处理就可以了。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>网络时代的阅读</title>
    <url>/blog/2004/12/22/The-era-of-network-reading/</url>
    <content><![CDATA[<p>跟同事聊天，说起学生时代读过的书，个个都如数家珍，罗列出一大堆印象深刻的。可那都是很久以前的事情了，要说到近年来看了什么书，几乎都想不起来。报纸上也报道说，根据调查现在的青年的读书比起以前少了多少个百分点。是啊，捧一本书，安坐一角，细细品味，这样的情景已经很久没有出现了。这并不能完全归咎于工作忙碌，没有时间，而是很多空余时间已经被网络占有了。</p>
<p>要说阅读量，现今比起以前倒不见得真的少了，每天在网上浏览，一两个月下来，累计数量估计也比得上一本大部头。只不过，在网上的阅读是很零散的，不如读书一般系统连贯。网上阅读的优势是信息及时，查找方便，可以进行充分的交互沟通；但是网上阅读不足之处是，信息量太大，需要耗费不少时间进行过滤，往往有广度而缺乏深度，可信度也需要靠自己辨别。</p>
<p>看来，网络阅读适合于用来开拓知识面，快速入门，交流讨论；但要想好好学点东西，还是要心平气和，少上网，多读书。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>更新了RSS</title>
    <url>/blog/2004/12/22/Updated-the-RSS/</url>
    <content><![CDATA[<p>将blog的rss feed改了一下，使用了<a href="http://www.feedburner.com/">FeedBurner</a>提供的rss扩展服务。大家可以留意页面右下角的rss图标。**<em>如果是用RSS Reader阅读我的blog的朋友，麻烦更换一下地址吧</em>**。</p>
<p>FeedBurner提供的功能不错的，我只使用了其中的一部分，其中比较特别的就是自动将del.icio.us的书签加入到blog rss中。</p>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>成员函数调用delete this合法吗？</title>
    <url>/blog/2005/02/18/Member-function-call-delete-this-legal/</url>
    <content><![CDATA[<p>Yesterday, I discussed with Alex whether “delete this” in C++ is legal code.</p>
<p>In some case, only the object itself knows when its life is to the end and should be destroyed, the owner of object doesn’t know it, or the object has no explicit owner. The most easy way to manger the life time of this kind of object is let it delete itself.</p>
<p>But we doubted that “delete this” isn’t legal in C++: after the object is released, how does the execution continue?</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span> &#123;  </span><br><span class="line"><span class="keyword">public</span>:  </span><br><span class="line">  <span class="function"><span class="type">void</span> <span class="title">foo</span><span class="params">()</span></span>;  </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">A::foo</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  <span class="comment">// do something  </span></span><br><span class="line">  <span class="keyword">delete</span> <span class="keyword">this</span>;  </span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;I commit suicide!&quot;</span> &lt;&lt; endl;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">  A* a = <span class="keyword">new</span> A;  </span><br><span class="line">  a-&gt;<span class="built_in">foo</span>();  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>I find the answer now, it’s legal, but must be careful when using it. </p>
<p>The following <a href="http://www.sunistudio.com/cppfaq/freestore-mgmt.html#[16.14]">faq</a> explain it clearly:</p>
<blockquote>
<p>只要你小心，一个对象请求自杀(<code>delete</code> <code>this</code>).是可以的。</p>
</blockquote>
<p>以下是我对“小心”的定义：</p>
<blockquote>
</blockquote>
<ol>
<li>你必须100%的确定，<code>this</code>对象是用 <code>new</code>分配的（不是用<code>new[]</code>，也不是用<a href="http://www.sunistudio.com/cppfaq/dtors.html#[11.10]">定位放置 <code>new</code></a>，也不是一个栈上的局部对象，也不是全局的，也不是另一个对象的成员，而是明白的普通的<code>new</code>）。</li>
<li>你必须100%的确定，该成员函数是<code>this</code>对象最后调用的的成员函数。</li>
<li>你必须100%的确定，剩下的成员函数（<code>delete</code> <code>this</code>之后的）不接触到 <code>this</code>对象任何一块（包括调用任何其他成员函数或访问任何数据成员）。</li>
<li>你必须 100%的确定，在<code>delete</code> <code>this</code>之后不再去访问<code>this</code>指针。换句话说，你不能去检查它，将它和其他指针比较，和 <code>NULL</code>比较，打印它，转换它，对它做任何事。<blockquote>
</blockquote>
自然，对于这种情况还要习惯性地告诫：当你的指针是一个指向基类类型的指针，而没有<a href="http://www.sunistudio.com/cppfaq/virtual-functions.html#[20.4]">虚析构函数</a>时（也不可以 <code>delete</code> <code>this</code>）。</li>
</ol>
<p>And these ariticles also take about “delete this”:</p>
<p><a href="http://info.tlw.cn/6079.htm">http://info.tlw.cn/6079.htm</a><br><a href="http://blog.csdn.net/foxmail/archive/2004/09/22/113060.aspx">http://blog.csdn.net/foxmail/archive/2004/09/22/113060.aspx</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Use MPC to generate makefile for you</title>
    <url>/blog/2005/02/24/Use-MPC-to-generate-makefile-for-you/</url>
    <content><![CDATA[<p>MPC - The Makefile, Project and workspace Creator (<a href="http://www.ociweb.com/product/mpc/">http://www.ociweb.com/product/mpc/</a>) is comes with ACE, ACE use it to create its makefile.</p>
<p>Now it’s no need to write makefile anymore, MPC can do it for you.</p>
<ol>
<li>Write the workspace file (mwc) and project file (mpc)  </li>
<li>Generate makefile<br>   $ACE_ROOT&#x2F;bin&#x2F;mwc.pl -type make ismap.mwc</li>
</ol>
<p>Let’s study on an example.</p>
<p>Our ismap_server have 4 sub-projects. Directories ismap, oblc, rtbp each contains a sub project, they will build libraries for later use. The main project builds 3 libraries together and generates the executable file.</p>
<p>The directory structure is like this:</p>
<p>src&#x2F;{ismap_server files (main project)}<br>src&#x2F;ismap&#x2F;{ismap_frontend files (sub project)}<br>src&#x2F;oblc&#x2F;{oblc files (sub project)}<br>src&#x2F;rtbp&#x2F;{rtbp_backend files (sub project)}</p>
<p>First, write the workspace file <strong>ismap.mwc</strong>. In the workspace block, each line defines a project(mpc file) or directory.</p>
<p>workspace {<br> ismap<br> oblc<br> rtbp<br> ismap_server.mpc<br>}</p>
<p>Actually, this mwc file can be omitted. The default behavior of MPC is recursing into directories and adding all mpc files into workspace.</p>
<p>Then write the project files for each project. The ismap, oblc and rtbp projects are the same, they generates a library file. Put a mpc file with content as following in each project directory, named as the project’s name (<strong>ismap.mpc</strong>, <strong>oblc.mpc</strong> and <strong>rtbp.mpc</strong>).</p>
<p>project : aceexe {<br> libout &#x3D; ..&#x2F;<br>}</p>
<p>The mpc file is very simple. The first lines means that the project inherits setting from base project aceexe, which is defined in $ACE_ROOT&#x2F;bin&#x2F;MakeProjectCreator&#x2F;config&#x2F;aceexe.mpb. The second line defines where to put the output library. I set it to the upper directory so that all 3 libraries are put together. (It seems that static library target won’t be put into the specified directory. )</p>
<p>Project can have tree kinds of output: executable, dynamic library and static library. The output filename is defined by keywork <em>exename</em>, <em>sharedname</em> and <em>staticname</em>. MPC will search the source files to see whether the main function exists. If main exists, set target as executable, library otherwise. If mwc.pl&#x2F;mpc.pl is called with the <em>-static</em> parameter, generates static library. The default is dynamic library.</p>
<p>I omit the keywork staticname here. The output file name will be the same as the mpc file.</p>
<p>It’s no need to specify any source file name or header file name. MPC will generate a makefile compiling all the sources in the directory.</p>
<p>The main project’s mpc file <strong>ismap_server.mpc</strong> is a bit different than sub project’s. </p>
<p>project : aceexe {<br> exename &#x3D; ismap_server<br> libs +&#x3D; ismap oblc rtbp<br> libpaths +&#x3D; .<br> after +&#x3D; ismap oblc rtbp<br>}</p>
<p>The keyword <em>libs</em> specifies the library(s) to link into the target. “+&#x3D;” means no overwrite but append. The keyword <em>after</em> specifies the dependance between projects.</p>
<p>From the example, you will find that write mpc file and use MPC to generate makefile is easier than write makefile by hand.</p>
<p>ps. To make project successfully on solaris system, need to set the following directory into PATH environment variable:</p>
<ul>
<li>&#x2F;usr&#x2F;ccs&#x2F;bin  (for ar) </li>
<li>&#x2F;usr&#x2F;openwin&#x2F;bin  (for makedepend) </li>
<li>&#x2F;usr&#x2F;local&#x2F;bin  (for make, gcc)</li>
</ul>
<p> </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Blogbus, 难道真要跟你say goodbay?</title>
    <url>/blog/2005/02/25/Blogbus-say-goodbay-/</url>
    <content><![CDATA[<p>Blogbus怎么啦？先是大半年的访问困难，然后现在又来了个莫名其妙的改版，弄出一大堆bug，今天又发觉原来现在连rss都不会更新了，看到都是旧的内容。</p>
<p>是否应该搬个家了？</p>
<p><em>2005-2-24 19:27 append:</em></p>
<p>好像错怪了blogbus？我换了另外一个RSS reader，发现还是可以看到新的内容的，但是为什么直接用浏览器打开xml文件反而看不到呢？</p>
<p>不过，blogbus还是问题多多，包括在firefox里不能正常使用。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>Choose RSS reader</title>
    <url>/blog/2005/02/25/Choose-RSS-reader/</url>
    <content><![CDATA[<p>RSS readers, which is the best? which one is fit for me?</p>
<ul>
<li>RssReader - <a href="http://www.rssreader.com/">http://www.rssreader.com/</a></li>
<li>SharpReader - <a href="http://www.sharpreader.net/">http://www.sharpreader.net/</a></li>
<li>FeedReader - <a href="http://www.feedreader.com/">http://www.feedreader.com/</a></li>
<li>RSSowl - <a href="http://www.rssowl.org/">http://www.rssowl.org/</a></li>
<li>GreateNews - <a href="http://www.curiostudio.com/">http://www.curiostudio.com/</a></li>
<li>周博通 - <a href="http://home.hnwh.com/">http://home.hnwh.com/</a></li>
</ul>
<p>I only list the opensource&#x2F;free software here.</p>
<ul>
<li>RSS reader info - <a href="http://blogspace.com/rss/readers">http://blogspace.com/rss/readers</a></li>
</ul>
<p>Just now I try SharpReader and GreateNews. SharpReader is too simply, not as beautiful as others and occupies too many memory. So it’s out first:) GreateNews looks nice, but it fails to update some feeds, I don’t find the reason yet.</p>
<p>FeedReader, can’t import my OPML file.</p>
<p><em>2005-2-25 9:04 append:</em></p>
<p>……</p>
<p>选来选去，最后还是觉得Firefox浏览器加上Sage扩展用来看RSS最方便。与浏览器一体化是一大优点，另外就是简洁实用。如果选择独立程序，也许我会选择GreateNews。FeedDemon其实是很好的软件，我以前也用它，但这个是商业软件，试用期过了让我不得不另外选择。不管怎么说，有别的选择的时候还是不要用破解软件。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>生活中的物理学问题</title>
    <url>/blog/2005/03/01/In-the-life-of-the-physics-problem/</url>
    <content><![CDATA[<p>近日广州的天气甚为潮湿，家里到处都是湿漉漉的，特别是镜子、砖地板和瓷砖，上面都是一滴滴的水珠，晾的衣服多少天都不会干。烦恼之余，想想怎么可以少受潮湿之苦，很容易就想到的，就是两种方法：加热烘干或者抽湿机抽湿。</p>
<p>抽湿的原理很明显就是将空气中的水分变为液态水收集起来，从而降低空气的湿度。但是，加热的原理又是什么呢？直觉告诉我们，加热会降低空气湿度，例如有暖气的室内会特别干燥。但加热后，水分到哪里去了？假设有一个密闭的系统，里面的空气有一定量的水分，无论怎么加热，系统里面的水都不会减少的，也就是说，加热并不会降低湿度。</p>
<p>实际环境中，房子不是一个密闭系统，它与外界总是有连通的，就算把门窗关闭，也还有缝隙。但是，即使与外界连通，又怎么解释为什么只有水分会被“有选择的”被排出室外呢。外界环境的湿度可以认为是恒定的，如果加热能够让室内变干燥，那应该是水分被排出去了，这样在内外之间就存在湿度差，屋内的湿度比外边低，在这种情况下水分依然能够自动跑出去，似乎也是不可能的。</p>
<p>设计一个实验情景来说明：一根很长的密闭管子，里面充满了含有一定水分的空气，将管子水平放置，一端置于低温环境，一端置于高温环境，（温度均在日常范围，不考虑接近0度和100度这些特殊情况），模拟室外与有暖气室内的温差。并且，管子足够细，以避免在管内出现对流现象。那么，当这个系统最终达到平衡状态后，内部气体的湿度分布将会如何？难道会出现湿度的梯度变化？假如会形成湿度差，又是什么原因造成的？</p>
<p>这肯定是非常简单的物理原理，说不定一个高中生马上就能回答出来。但可惜我的物理知识已经全部忘记了:( </p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>珠三角民工荒，区域经济前景不容乐观？</title>
    <url>/blog/2005/03/02/The-pearl-river-delta-shortage-regional-economic-outlook-is-not-optimistic-/</url>
    <content><![CDATA[<p>近来珠三角民工短缺的消息不断见于报端，特别是春节过后，没有再象往年一样出现南下民工大潮，许多企业都招不到工。虽然一些政府部门不时出来解释，珠三角并没有民工荒，只是结构性不均而已，只要工资给得高的企业不愁招不到工。这显然是废话，谁不知道钱多了人自然会来，明显的事实就是本区域内的企业对其所需层次劳工的吸引力不足，造成劳工流向其他地区。这不是个别个体的问题，在宏观上出现这样的情况，显然是经济出现问题了。希望那只是政府部门的公关和宣传的说法而已，如果他们真的是抱着这样的态度，而不积极应对，就更加堪忧了。</p>
<p>珠三角的产业结构依然是以加工制造业为主，劳动密集型结构。在这里，无论是制造业还是服务业，都需要大量的外来劳工，珠三角的经济可以说很大程度上是靠外来劳工托起来的。民工荒将影响企业成本，限制企业运作规模，进一步降低竞争力。看来珠三角经济前景直不容乐观。</p>
<p>劳工不足，只是我这些外行人能看到的一个经济的表面现象而已，相信内在隐忧更多。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>15th Jolt Awards finalists</title>
    <url>/blog/2005/03/04/15th-Jolt-Awards-finalists/</url>
    <content><![CDATA[<p>Keep tracking the trend in the realm of software development, know what’s the leading product and technology. Let’s read the finalists list of the Jolt Award.</p>
<p><strong>15th Annual <em>Software Development</em><br>Jolt Product Excellence Awards</strong></p>
<p><strong>Finalists</strong></p>
<p><strong>Books: General</strong></p>
<ul>
<li><em>Agile Project Management: Creating Innovative Products</em> by Jim Highsmith (Addison-Wesley Professional) </li>
<li><em>Crystal Clear: A Human-Powered Methodology for Small Teams</em> by Alistair Cockburn (Addison-Wesley Professional) </li>
<li><em>Exploiting Software: How to Break Code</em> by Greg Hoglund and Gary McGraw (Addison-Wesley Professional ) </li>
<li><em>Head First Design Patterns</em> by Elisabeth Freeman, Eric Freeman, Bert Bates and Kathy Sierra (O’Reilly) </li>
<li><em>Hiring the Best Knowledge Workers, Techies &amp; Nerds: The Secrets &amp; Science of Hiring Technical People</em> by Johanna Rothman and Gerald M. Weinberg (Dorset House) </li>
<li><em>Joel on Software</em> by Joel Spolsky (Apress) </li>
<li><em>Refactoring to Patterns</em> by Joshua Kerievsky (Addison-Wesley Professional) </li>
<li><em>Software Factories: Assembling Applications with Patterns, Models, Frameworks and Tools</em> by Jack Greenfield, Keith Short, Steve Cook, Stuart Kent, John Crupi (Wiley)</li>
</ul>
<p><strong>Books: Technical</strong></p>
<ul>
<li><em>Better, Faster, Lighter Java</em> by Bruce A. Tate and Justin Gehtland (O’Reilly) </li>
<li><em>C++ Coding Standards: 101 Rules, Guidelines, and Best Practices</em> by Herb Sutter and Andrei Alexandrescu (Addison-Wesley Professional ) </li>
<li><em>Head First Servlets &amp; JSP</em> by Bert Bates, Kathy Sierra and Bryan Basham (O’Reilly) </li>
<li><em>Hibernate: A Developer’s Notebook</em> by James Elliott (O’Reilly) </li>
<li><em>Java Developer’s Guide to Eclipse, Second Edition</em> by Jim D’Anjou, Scott Fairbrother, Dan Kehn, John Kellerman, Pat McCarthy (Addison-Wesley Professional) </li>
<li><em>Mono: A Developer’s Notebook</em> by Edd Dumbill and Niel M. Bornstein (O’Reilly) </li>
<li><em>Perl Medic: Transforming Legacy Code</em> by Peter J. Scott (Addison-Wesley Professional) </li>
<li><em>Physically Based Rendering: Theory to Implementation (The Interactive 3d Technology Series)</em> by Matt Pharr and Greg Humphreys (Morgan Kaufmann)</li>
</ul>
<p><strong>Business Integration and Data Tools</strong></p>
<ul>
<li>Compiere 5.1 (Compiere&#x2F;open source) </li>
<li>DT&#x2F;Studio 2.3 (Embarcadero Technologies) </li>
<li>EnterpriseTenFold (TenFold) </li>
<li>ILOG Rules for .NET (ILOG) </li>
<li>MapForce 2005 Enterprise Edition (Altova) </li>
<li>sforce 5.0 (salesforce.com) </li>
<li>Speech Server (Microsoft) </li>
<li>Toad for Oracle8.0 (Quest Software)</li>
</ul>
<p><strong>Change and Configuration Management Tools</strong></p>
<ul>
<li>AccuRev 3.5 (AccuRev) </li>
<li>CodeBeamer 3.5 (Intland Software) </li>
<li>Dimensions 9.0 (Serena Software) </li>
<li>Perforce SCM (Perforce) </li>
<li>SourceForge Enterprise Edition 4.2 (VA Software) </li>
<li>Subversion 2004 (CollabNet)</li>
</ul>
<p><strong>Design Tools</strong></p>
<ul>
<li>MagicDraw UML 9.0 (No Magic) </li>
<li>MetaEdit+ 4.0 (MetaCase) </li>
<li>Rational Software Architect (IBM) </li>
<li>Smart Development Environment 2.0 (Visual Paradigm International) </li>
<li>SmartDraw 2.0 (SmartDraw.com) </li>
<li>Together Designer 2005 (Borland) </li>
<li>Visual UML 4.1 (Visual Object Modelers) </li>
<li>WayPointer Highlighter 4.0 (Jaczone AB)</li>
</ul>
<p><strong>Languages and Development Environments</strong></p>
<ul>
<li>Borland Delphi 2005 (Borland) </li>
<li>CodeRush 1.1 for Visual Studio (Developer Express) </li>
<li>Eclipse 3.0 (Eclipse Foundation) </li>
<li>IntelliJ IDEA4.5 (JetBrains) </li>
<li>JBoss AOP 1.0 (JBoss) </li>
<li>Python2.4 (Python.org) </li>
<li>REALbasic 5.5 for Windows Professional Edition (REAL Software) </li>
<li>Sun Java Studio Enterprise 7 (Sun Microsystems)</li>
</ul>
<p><strong>Libraries, Frameworks and Components</strong></p>
<ul>
<li>Big Faceless Java PDF Library 2.0 (Big Faceless Organization) </li>
<li>ComponentOne Studio Enterprise 4.0 (ComponentOne) </li>
<li>Hibernate 2.1 (JBoss) </li>
<li>ImageGear Professional 14 (AccuSoft) </li>
<li>LEIF 2.2 (Rogue Wave) </li>
<li>Sun Java 2 Platform Standard Edition 5.0 (Sun Microsystems) </li>
<li>Xtreme Toolkit 9.51 Professional Edition (Codejock)</li>
</ul>
<p><strong>Management Tools</strong></p>
<ul>
<li>Active! Focus 2.0 (Xapware Technologies) </li>
<li>Autotask 10.0 (Autotask) </li>
<li>CaliberRM2005 (Borland) </li>
<li>Cost Xpert 3.3 (Cost Xpert Group) </li>
<li>Rational Portfolio Manager (IBM) </li>
<li>Primavera IT Project Office 4.1 (Primavera Systems) </li>
<li>SpeeDEV 4.0 - LME (Lifecycle Management Enterprise) (SpeeDEV) </li>
<li>V1: Scrum1.5 (VersionOne)</li>
</ul>
<p><strong>Mobile Development Tools</strong></p>
<ul>
<li>CodeWarrior for Symbian 3.0 Professional (Nokia) </li>
<li>ComponentOne 4.0 Studio Enterprise (ComponentOne) </li>
<li>Crossfire 5.5 (AppForge) </li>
<li>Flash Lite 1.1 (Macromedia) </li>
<li>J2ME Wireless Toolkit 2.2 (Sun Microsystems)</li>
</ul>
<p><strong>Security Tools</strong></p>
<ul>
<li>Aladdin eSafe4 (Aladdin Knowledge Systems) </li>
<li>Aladdin eToken (Aladdin Knowledge Systems) </li>
<li>CounterPoint 1.0 (Mirage Networks) </li>
<li>Source Code Analysis 3.0 (Fortify Software) </li>
<li>Internet Security &amp; Acceleration (ISA) Server2004 (Microsoft Corporation) </li>
<li>POPFile .22.2 (The POPFile Project; open source)</li>
</ul>
<p><strong>Test: Automated Test Tools</strong></p>
<ul>
<li>Agitar Agitator and Dashboard 2.0 (Agitar) </li>
<li>Eclipse Test &amp; Performance Tools Platform (TPTP) and Testing Tool 3.0 (the Eclipse Foundation) </li>
<li>Jmeter 2.0 (The Apache Foundation; open source) </li>
<li>LISA 2.5 (iTKO Inc.) </li>
<li>Parasoft Jtest 5.1 (Parasoft) </li>
<li>QA Wizard 2.4(Seapine) </li>
<li>TestComplete 3.0 (AutomatedQA)</li>
</ul>
<p><strong>Test – Defect Tracking Tools</strong></p>
<ul>
<li>Census 6.0 (MetaQuest Software) </li>
<li>FogBugz 3.1 (Fog Creek Software) </li>
<li>JIRA 3.0 (Atlassian Software Systems) </li>
<li>OnTime 2004 for Web and Windows (Axosoft) </li>
<li>PowerTrack 2004 Add-In for Visual Studio (Axosoft) </li>
<li>TestTrack Pro 7.0 (Seapine)</li>
</ul>
<p><strong>Utilities</strong></p>
<ul>
<li>AppExpress 2.5 (Endeavors Technology) </li>
<li>Captivate 2004 (Macromedia) </li>
<li>devAdvantage 2.1 (Anticipating Minds) </li>
<li>InstallShield 10.5 (Macrovision) </li>
<li>Omea Pro 1.0 (JetBrains) </li>
<li>Quest JProbe 5.2 (Quest Software) </li>
<li>Windows Installer XML 2.0 (WiX) (Microsoft)</li>
</ul>
<p><strong>Web Development Tools</strong></p>
<ul>
<li>CollabNet Enterprise Edition (CollabNet) </li>
<li>Contribute 3.0 (Macromedia) </li>
<li>FlexWiki 1.8 (Microsoft Shared Source Initiative) </li>
<li>Macromedia Flex 1.5 (Macromedia) </li>
<li>NitroX 2.0 (M7 Corporation) </li>
<li>Sun Java Studio Creator (Sun Microsystems) </li>
<li>Tomcat 5.0 (The Apache Jakarta Project and leading Tomcat contributor JBoss) </li>
<li>Zend Studio 4.0 (Zend Technologies)</li>
</ul>
<p><strong>Websites and Developer Networks</strong></p>
<ul>
<li>Agile Modeling Home Page (Ambysoft Inc.) </li>
<li>developer.* (DeveloperDotStar.com) (Daniel Read) </li>
<li>eBay Developers Program (eBay) </li>
<li>gantthead.com (gantthead.com) </li>
<li>IBM developerWorks (IBM) </li>
<li>Java.net (Sun Microsystems) </li>
<li>The O’Reilly Network (O’Reilly)</li>
</ul>
<p>_source: <em><a href="http://www.sdmagazine.com/jolts/15th_jolt_finalists.html"><em>http://www.sdmagazine.com/jolts/15th_jolt_finalists.html</em></a></em> _</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>CashFlow 202 e-game</title>
    <url>/blog/2005/03/07/CashFlow-202-e-game/</url>
    <content><![CDATA[<p>现金流游戏是《穷爸爸富爸爸》的作者推出的一个游戏，学习理财观念，寓教于乐。以前跟<a href="http://flyisland.blogbus.com/">flyisland</a>玩过一次，纸牌的，挺有意思的，一直都想再玩一下。看了<a href="http://rene.blogbus.com/">rene的blog</a>，知道已经有可下载的电子版游戏，昨天下载了一个来玩。</p>
<p>试玩了一盘，还不错，比纸牌的方便多了，玩纸牌最麻烦就是每轮都要交钱和找钱（代币），若没有专门的玩家做“银行家”角色就更加麻烦了。不过，这毕竟不是纯粹的游戏，如果对理财没有什么兴趣的话，玩久了就会觉得闷。</p>
<p>跟两个电脑对手玩的，大概玩了一个小时我就输了。这次给我的经验是要注意控制风险。开始我在stock option和stock上都赚了些钱，但后来一次买股票期货，我预料它下跌的谁知确狂涨，我没有及时止损，结果股价从60多上涨到90多，被银行强制平仓（以90多元购入我购买的期股份额），结果一下子我的balance就接近0了。屋漏偏逢连夜雨，后面几轮抽到的不是失业就是购买奢侈品，不但要向银行贷款，现金流也变成负数了。</p>
<p>有机会应该还是跟人玩比跟电脑玩好些，昨天在论坛上看到，深圳还专门有cashflow的俱乐部:)</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>幻想中的交通工具</title>
    <url>/blog/2005/03/11/Vision-of-the-transportation/</url>
    <content><![CDATA[<p>Dolphinie 在她的blog<a href="http://dolphinie.blogbus.com/logs/2005/03/1052765.html">想发明的东西</a>中提到了对未来交通工具的设想，其实我也经常会有些奇怪想法:)</p>
<p>我幻想中的交通工具应该是公共的，独占使用的，端到端的传输，像package在网络上传输一样。出门坐上一个小座舱，座舱在某种轨道上运行，然后经过一些交换节点，最终到达你要去的目的地。不像固定的公交路线，不用转车；不会因为私车太多而引起停车难。不过，交换节点的效率是个大问题，座舱的靠站也是问题。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>我们的地球，到底能容纳多少人？</title>
    <url>/blog/2005/03/13/Our-earth-what-can-hold-how-many-people-/</url>
    <content><![CDATA[<p>今天看香港电台的一个节目，有关河流的生态环境的，提到一个例子，泰国一条河流，下游的耕地是依靠河水灌溉的，可是自从上游山区的居民将山坡的林地开垦种植荔枝树后，引走了大量的河水，下游就没有足够的水量灌溉耕地了。为了争夺水资源，上下游的居民发生了冲突，后来在环保人士的协调下，双方进行对话商议水资源的利用，上游居民换了口径细一点的引水管，避免了水的浪费，保证了有足够的水供给下游。一时的矛盾解决了，但后来河流中游兴建起一个个度假村，这些度假村更是大肆抽取河水，随着旅游业的发展，预期会兴建更多的旅游设施，这些旅游设施将会大量耗用水资源和影响水质，下游又出现缺水。本来流域的水资源争夺已经够严重的了，政府又要在河流上兴建水坝，在他们看来，建水坝可以方便灌溉、发电、防洪、发展淡水养殖，好处很多，但是对于水坝会给流域环境生态平衡带来的破坏，对水资源消耗和分配带来的影响却视而不见。</p>
<p>看完节目，想起最近《中国国家地理》杂志的一个河流专辑，里面说到河流的生态系统随着人类经济活动而遭到破坏，使得河流逐渐失去其功能，最终带给人类的是种种恶果。</p>
<p>从这些想开去，我们不断的面对着经济发展、经济利益与自然环境的冲突，例如水利工程是否该上马，是否可以开垦更多的经济用地，工业带来的污染等等。持不同立场者，都有自己的道理，虽然环保主义者从保护自然环境的角度出发，总是希望对自然带来影响的人类活动越少越好，但是想想某些贫困地区的处境，他们希望经济改善的要求是迫切的，如果只是单单否定了一个方案，而又没有提出合适的替代方案，反对声音的影响力自然是大打折扣。</p>
<p>上升一个层面来考虑，应该还是这个自然环境的承托能力的问题。想想我们的先民，他们与自然和谐相处，并没有太多的冲突。至今的一些较为原始的部落，他们依然有着保持人与自然的和谐关系的一套准则。而当今，随着人口的急速增长，经济的迅猛发展，自然环境也在不断的恶化。当代人类社会的经济发展进步，几乎都是来自于对自然资源的预支。例如一条河流的水量，它最多也就是那么多：上游灌溉耗用多了，下游的水量就会少；生活用水、工业用水多了，灌溉用水就少。无论资源怎么分配，它能支承的人口数量、经济总量都是有一个限额的。而且这个限额的最大值还是要在分配、使用得当的前提之下，而实际上自然资源的分配使用要得当可是难之又难，人们总是会为了局部、短期利益，或者无知妄为干出很多蠢事。</p>
<p>我们的地球，到底能容纳多少人？能支撑多大的经济总量？</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>SRTM的精度</title>
    <url>/blog/2005/03/31/SRTM-/</url>
    <content><![CDATA[<p><a href="http://srtm.csi.cgiar.org/PDF/Jarvis4.pdf">http://srtm.csi.cgiar.org/PDF/Jarvis4.pdf</a></p>
<p>一篇论文，研究SRTM DEM的精度，与GTOPO30 DEM和几种比例的topo图比较。文章很长，没有仔细看，反正关心的是最后的overall conclusions部分。研究表明，3-arc SRTM DEM的精度优于1:25,000以上（如1:50,000和1:100,000）的topo图，不如1:25,000以下（如1:10,000）的topo图。看来，我们已经可以心满意足了:)</p>
<p>**<a href="http://srtm.csi.cgiar.org/">CGIAR-CSI</a>**（空间信息联盟）网站上可以下载修补了空洞的SRTM-3数据。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用OziExplorer进行路线坡度分析</title>
    <url>/blog/2005/04/30/How-to-use-OziExplorer-slope-process-analysis/</url>
    <content><![CDATA[<p> 1.用oziexplorer加载地图，并确保相应的SRTM数据已经加载<br>2.选择菜单 view-tracks-Track Control, 打开 track control 对话框<br>3.按下第二排第一个按钮(Manually create Track Points)，进入手工创建track模式<br>4.在地图上用鼠标点击，创建track；为了得到更好分析效果，点越密越好<br>5.选择菜单 view-tracks-Track Profile, 查看track的剖面图<br>6.选择X Axis:Distance, Profile Type:Altitude, 看到track的距离-海拔剖面图，从中可以看出各段的坡度大小<br>7.在Track Profile曲线上点击，会在地图上显示出曲线点对应的位置<br>8.Track Profile同样适合于分析GPS实际采集得到的track </p>
<p><img src="/attachments/2005/4/11446580_3a7f18faae_o.jpg" alt="ozi track profile"></p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>code.google.com</title>
    <url>/blog/2005/05/10/code-google-com/</url>
    <content><![CDATA[<p>现在做的项目，忙得一塌糊涂，几乎都没有什么时间上网浏览了。很久没有看blog，今天打开rss reader来看看有什么新东西，好让自己不要太out。 </p>
<p>知道了google现在也有open source项目贡献出来，code.google.com，都是一些工具类型的东西，应该是他们开发过程的一些副产品吧。有些东西应该是可以参考一下的，例如coredumper，让程序运行时主动dump一个core文件出来而不停止运行，这样可以得到一个运行时的snapshot，用来调试多线程程序应该会有用——在unix上跟踪调试程序太痛苦了，特别是多线程。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Peopleware</title>
    <url>/blog/2005/05/30/Peopleware/</url>
    <content><![CDATA[<p>近日读《人件》这本“旧书”，这书确实不错。不过，这本书主要不是写给开发人员看的，作者是两名consultant，他们的工作是分析研究软件项目的过程，对项目给出指导，很显然，他们的目标是项目的管理者、公司的管理者。 </p>
<p>而如今，这本书被标榜为“为开发人员伸张权利”的书籍，显然老板并没有兴趣阅读一本为底下的人伸张权利的书，很明显，出版社也知道这本书的读者都是那些受够了的程序员，所以才用这种花招来宣传。</p>
<p>只是，这本书如果只给开发人员阅读，它的实际意义就打了很大的折扣了。软件开发领域的悲哀。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>R2D2</title>
    <url>/blog/2005/06/11/R2D2/</url>
    <content><![CDATA[<p>StarWar里面的一些角色造型挺成功的，R2D2就是其中一个。</p>
<p>清风白云说喜欢r2d2，要我给她做一张墙纸，上google一<a href="http://www.google.com/search?q=r2d2">搜索</a>，哇，原来r2d2的fans这么多！</p>
<ul>
<li>r2d2外形的<a href="http://www.mini-itx.com/projects/r2d2pc/">电脑</a>，是不是很cool? </li>
<li>这是一个r2d2外形的声控<a href="http://www.hasbro.com/r2droidfactory/">玩具</a>，具有语音识别功能，能够接受一些指令，应该挺好玩 </li>
<li><a href="http://www.ericharshbarger.org/lego/r2d2.html">有人</a>用lego积木搭成<a href="http://www.ericharshbarger.org/lego/images/r2d2/r2d2_4.jpg">r2d2模型</a>，不过还是粗糙了些 </li>
<li>有专门的<a href="http://www.robotbuilders.net/r2/">R2D2 Builder Club</a>,交流制作r2d2的经验 </li>
<li>这个mac的<a href="http://www.macupdate.com/info.php/id/18122">软件</a>没有什么特别功能，只是“Randomly plays R2D2 sounds. Use it to annoy your coworkers.”。没有windows版本，要不我也装一个骚扰一下同事:) </li>
<li>有公司用r2d2来给自己的产品做<a href="http://www.abb.com.cn/global/cnabb/cnabb050.nsf!OpenDatabase&db=/global/cnabb/cnabb056.nsf&v=FAE&e=ch&c=3DB06FFA9892F41B48256B0C002AF267">广告</a></li>
<li>……</li>
</ul>
<p>如果没有看过星战，或者对故事了解不多，<a href="http://www.starwars.com/databank/droid/r2d2/">这里</a>有R2D2的官方介绍。</p>
<p>还可以到<a href="http://www.googlism.com/">googlism</a>看看网上是怎么介绍和<a href="http://www.googlism.com/who_is/r/r2d2/">评价R2D2</a>的。我还是第一次发现googlism这么好玩，看它搜索出来的资料：</p>
<ul>
<li> r2d2 is 3 feet 1 inch tall &#x2F; r2d2 is 94 cm tall </li>
<li> r2d2 is left handed （r2d2有hand吗？） </li>
<li> r2d2 is much cooler than c3po （哈哈！） </li>
<li> r2d2 is by far the best character actor in all the star wars movies </li>
<li> r2d2 is stephen hawking （这令我非常疑惑，怎么与霍金拉上关系呢，最后在<a href="http://www.glennbeck.com/news/05202002.shtml">这里</a>找到答案）</li>
</ul>
]]></content>
      <tags>
        <tag>Funny</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Earth</title>
    <url>/blog/2005/06/29/Google-Earth/</url>
    <content><![CDATA[<p>Google earth是google收购keyhole后推出的软件，我没有用过以前的keyhole，反正感觉这个很好用，符合google用户界面的一贯风格，比NASA的WorldWind易用多了。<br>GIS应用越来越走向大众了，刚看到新闻，MSN也要推出Virtual Earth，竞争吧，我喜欢:)   </p>
<p>深圳滨海公园</p>
<img src="/blog/attachments/2005/6/GoogleEarth1.jpg" class="">

<p>NewYork, 真是数字城市啊  </p>
<img src="/blog/attachments/2005/6/GoogleEarth2.jpg" class="">
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>大家都来blog</title>
    <url>/blog/2005/11/03/Everyone-to-blog/</url>
    <content><![CDATA[<p>Blog这个东西还真挺厉害，原本以为只是给那些网络知识分子闹的，还有就是广大网民百姓自娱自乐，现在可连各类名人都纷纷“博”起来了。文化界的人老早就在网上非常活跃，只是我平常上网只看技术方面的东西，不知道而已。</p>
<p>今天无意中还看到了何勇的blog（<a href="http://www.blogcn.com/user42/qilinriji/index.html">麒麟日记</a>），还不知道是真是假，从一些文章看来应该是真的吧。记得早两年还看到什么传闻说何勇已经得了精神病:( 看来网络就是好，起码能让人知道他没有进精神病院。</p>
<p><a href="http://lydon.yculblog.com/">按摩乳</a>的blog有意思，他的友情链接更有意思，都是国家级男女流氓啦，限制级男女文青啦之类的。下面是从他的blog中copy过来的，我觉得很搞笑。</p>
<p><strong>五分钟电视剧：《余秋雨开博客》</strong>   </p>
<blockquote>
<p>[新浪网办公室]<br><strong>公关小姐</strong>：请问您是余秋雨老师吗？<br>[正在枉凝着眉头做文化苦旅状的余秋雨突然听到了一个曼妙的甜甜的声音，赶紧把拧成中国结般的眉头舒展成了额头的两道弧线]<br><strong>余秋雨</strong>：：我似余秋雨，请问您是哪位？<br><strong>公关小姐</strong>：：我是新浪网公关部的，我叫博一客。<br><strong>余秋雨</strong>：：您找我有事么？<br><strong>公关小姐</strong>：：对不起，余老师，打扰您了，想占用您点时间。<br><strong>余秋雨</strong>：：没关系，你说。<br><strong>公关小姐</strong>：：是这样，我们新浪网开了博客空间，想请您到我们这里开一个博客，您看您在社会上有这么大的影响，写了那么多有理、有力、有节的文字，连三陪小姐都看您的书，说明您的文字成了这个时代的文本。<br><strong>余秋雨</strong>：：对不起，我没听清楚，你刚才说的是什么？博客？跟嫖客有什么关系？<br><strong>公关小姐</strong>：：哦，您可能不知道吧，那我就再给您介绍一下，博客就是……<br>[公关小姐坐地日行八万里般地一通介绍，把博客的来龙去脉，上下五千年介绍一遍，电话那头的余秋雨听得一头雾水，但是他舍不得这么好听的声音，否则他会立刻挂掉电话。]<br><strong>余秋雨</strong>：：我不明白，我写的日记干嘛要让别人看？这样他们又要拷问我的灵魂了。<br><strong>公关小姐</strong>：：余老师，您误会了，其实不一定是您写的日记，您平时写的那些脍炙人口的文章都可以贴在上面，让大家欣赏不是一件很好的事情吗。只是博客这种网络日志，非常随意，想写什么就写什么，比如您今天去买菜看到了什么，您去大学作报告的感受，您看报的时候对一些新闻事件的产生的看法，都可以写到博客上。<br><strong>余秋雨</strong>：：这么说我明白了，就是什么都可以写在上面，那我可以骂那些攻击我的人么？<br><strong>公关小姐</strong>：：当然可以。<br><strong>余秋雨</strong>：：可是我平时很忙，没有时间啊。<br><strong>公关小姐</strong>：：我知道您忙。您看，余华老师都在我们这里开博客了，他平时也很忙，但是他说，再忙也要在新浪开一个博客，因为我喜欢这种网络日志形式，对我来说是一种新的体验。您看，你们都性欲，不对，都姓余，凭什么他都开博客了，您就不能开呢？<br>[这招的确管用，我平时采访的时候就惯用这种伎俩，如果遇到不想接受采访的人，就来这招，保管管用。您看罗大佑、刘欢、崔健、李宗盛都谈了自己的看法，您要是不谈谈的话，好像少点分量。要知道，名人的虚荣心都很强，虚荣到虚怀若谷的境界了，你要是这么一说，他立马就上钩]<br><strong>余秋雨</strong>：：嗯，网络是一种很新颖的形式，我觉得网络带给我很大方便，我经常上网，但是对博客这东西我的确比较陌生。<br><strong>公关小姐</strong>：：没关系，您不明白的事情我会帮助您，只要您登记注册就行了。<br><strong>余秋雨</strong>：：登记？我几年前已经跟我太太登记了，再登记就是重婚了。<br><strong>公关小姐</strong>：：余老师，您理解错了，我说的登记啊，就是在网络上注册一个您的名字，这样就可以让人识别您了。不然的话，人家会以为您是余杰呢。<br><strong>余秋雨</strong>：：你说什么？余杰？如果他在新浪上开博客，我坚决不开。<br><strong>公关小姐</strong>：：余老师，您放心，我们不会请余杰开博客的，因为他的文字里面敏感词太多了，就算是在我们那里开博客，根本贴不上去，会把他气死的。<br><strong>余秋雨</strong>：：那你们还是让他开一个吧。<br><strong>公关小姐</strong>：：那您开不开呢？<br><strong>余秋雨</strong>：：开!为了气死余杰，我也开。<br><strong>公关小姐</strong>：：那您的博客叫什么名字呢？<br><strong>余秋雨</strong>：：就叫“文化甜饼”怎么样？<br><strong>公关小姐</strong>：：太好了，您不愧是一个学者，给博客起名字都那么高雅、那么有文化，不像有些人，给博客起名字叫什么“按摩乳”，多下流啊。人啊，就是这样，多读一本书，境界就不一样啊。<br><strong>余秋雨</strong>：：那我写的东西你们怎么付我稿酬呢？<br><strong>公关小姐</strong>：：是这样，您开了博客，会给您带来更大的影响，会有很多媒体关注的，您的文章会转遍大江南北的媒体，到时候，您就多往邮局跑吧。<br><strong>余秋雨</strong>：这我还没想到。那好，我决定开博客了。<br>[于是，在半推半就之间，余秋雨的博客像羞答答的玫瑰静悄悄地开一样出现在第二天的新浪新闻首页上：余秋雨博客]<br><strong>余秋雨唱</strong>：就这样被你征服，喝下你藏好的毒，我的心情是坚固，我的决定是糊涂……<br><strong>公关小姐唱</strong>：就在半推半就之间，我们越过时空相见，每一分钟换成一年哦，究竟能有多少缠绵，就在半推半就之间，我们忘了还有明天，忘了保留一点时间哦，好让这种感觉永远，迷迷糊糊睁开双眼，醒来你已了无踪影，再回到梦里，梦已不相连哦……讨厌，似梦似真，转眼改变梦已不相连……<br><strong>那些没有被新浪搞定的名流唱</strong>：大错特错不要来侮辱我的美，我不是你的style为何天天缠著我，大错不要来侮辱我的美，但要是你喜欢我就快点大声说出来。<br><strong>公关小姐唱</strong>：：多想说声我真的爱你，多想说声对不起你，你哭着说情缘已尽，难再续，难再续。就请你给我多一点点时间，再多一点点问候，不要一切都带走，就请你给我多一点点空间，再多一点点温柔，不要让我如此难受。你这样一个名人，让我欢喜让我忧，让我甘心为了新浪的博客，付出我所有。<br><strong>开博客的众名人合唱</strong>：我们的博客它就要开，往哪儿开？往新浪里开。我们的博客它就要开，往哪开？往垃圾堆里开……<br><strong>新浪全体员工合唱</strong>：我必须学会新的卖弄呀，这样你才能继续地喜欢呢。因为网络是个天生的哑巴，它必须想出别的办法说话……   </p>
</blockquote>
<p><strong>新浪全体员工再合唱</strong>：：心会跟爱一起走，说好就一宿。<br><strong>开博客的众名人合唱</strong>：：“那就来一宿吧。”<br>（剧终）   </p>
<blockquote>
<p>出字幕   </p>
<p><strong>演职人员表</strong><br>公关小姐——林志玲饰<br>余秋雨——余杰饰<br>汪延——陈彤饰<br>陈彤——汪延饰<br>萨达姆——侯赛因饰<br>妓院老鸨——老六（反串）<br>新浪中层主管甲——南袁蕾<br>新浪中层主管乙——北孟静   </p>
</blockquote>
<p><strong>鸣谢以下艺人提供歌曲：</strong><br>那英：《征服》<br>谭咏麟：《半梦半醒之间》<br>中国娃娃：《大错特错》<br>周华健：《让我欢喜让我忧》<br>二手玫瑰：《火车快开》、《伎俩》<br>郭峰、陈洁仪：《心会跟爱一起走》   </p>
<blockquote>
<p>编剧：带三个表<br>艺术指导：大仙<br>摄像：土摩托<br>录音合成：共同提高<br>音乐监制：流氓洪启<br>短信平台宣传：小强<br>海外推广：安替<br>灯光：平客的脑袋<br>场记：小精子<br>字幕：新浪嘉宾聊天特约打字员<br>英文字幕：飞猪<br>制片人：老颓<br>导演：老六&amp;HuHu工作室   </p>
</blockquote>
<p>中央新闻纪录电影制片厂<br>新浪网<br>中央电视台<br>金五星家具城<br>火鸟色拉油   </p>
<blockquote>
</blockquote>
<p>联合摄制<br>2005.10.29   </p>
<blockquote>
</blockquote>
<p>（步步低DVD温馨提示：碟片已播放完毕，请退碟。）</p>
]]></content>
      <tags>
        <tag>Misc</tag>
        <tag>Funny</tag>
      </tags>
  </entry>
  <entry>
    <title>寂静之城 —— 向1984致敬</title>
    <url>/blog/2005/07/21/The-city-of-silence-to-1984-salute/</url>
    <content><![CDATA[<p><em>一部非常1984的小说。看完之后google一下，发现还是挺有名的，曾经在《科幻世界》杂志上发表。从<a href="http://chinahuan.blogchina.com/1432501.html">钟国幻评6</a>的评论看来，这个版本应该还是杂志发表前的原版。</em></p>
<p>寂静之城<br>作者：马伯庸  </p>
<p>AndinthenakedlightIsawtenthousandpeople,maybemore.<br>Peopletalkingwithoutspeaking,peoplehearingwithoutlistening.<br>Peoplewritingsongsthatvoicesnevershared,noonedareddisturbthesound<br>ofsilence.<br>—Thesoundofsilence  </p>
<p>美利坚合众国，2015年，纽约。  </p>
<p>当电话响起来的时候，阿瓦登正趴在电脑前面睡觉。电话铃声十分急促，尖锐，每一次振<br>动都让他的耳膜难受好久。他揉了揉干涩的眼睛，十分不情愿地爬起来，觉得脑子沉滞无<br>比。  </p>
<p>其实他的脑子一直就很沉滞，这种感受既然是生理上的也是心理上的。他身处的房间很狭<br>窄，空气不很好，唯一的两扇窗户紧闭着—-即使打开窗户也没用，外面的空气更加浑浊<br>。这是一间大约只有三十平米的小屋子，屋子墙壁上泛黄的墙纸有好几处开始剥落，天花<br>板上的水渍渗成奇怪的形状；一张老式的军绿色行军床摆在墙角，床腿用白漆写着编号；<br>紧挨着行军床的是一张三合板制成的电脑桌，桌上摆着一台浅白色的电脑，机箱后面五颜<br>六色的电线纠缠在一起，把它们自己打成一个古怪的死结，杂乱无章地蔓延到地板与墙角<br>，仿佛常春藤一样。  </p>
<p>阿瓦登走到电话前，慢慢坐到地板上，目光呆滞地盯着电话，手却没有动。这部古怪的东<br>西是老式的按键式电话，大概是十几年前的款式，这是阿瓦登有一次去费城出差时偶尔在<br>一家杂货店里买到的；他拿回家以后稍微修理了一下，发现居然还能用，这让他当时小小<br>地兴奋了一阵子。  </p>
<p>电话继续在响着，已经是第七声。阿瓦登意识到自己不得不去接听了。于是他弓下腰，用<br>两个指头拈起电话，慢慢把电话放到耳边。  </p>
<p>“请说出你的网络编号？”话筒里传来的声音并不急噪，事实上它也不带其他任何的感情<br>色彩，因为这是电脑合成的人工智能语音系统。  </p>
<p>“19842015”  </p>
<p>阿瓦登熟练地报出一连串数字，同时开始觉得胸有些更闷了。说实话他并不喜欢这些空洞<br>的电子声音，他有时候想，假如打过电话来的是一位声音圆润的女性该多好。阿瓦登知<br>道这是一种不切实际的幻想，不过这幻想会让他的身体得到几秒钟的舒缓。  </p>
<p>话筒里的声音仍旧在继续着。  </p>
<p>“关于你在十月四日提交的网络论坛用户注册申请已经被受理，经有关部门审查后确认资<br>格无误，请在三日内持本人身份证件、网络使用许可证及相关文件前往办理登记手续，并<br>领取用户名及密码。”  </p>
<p>“知道了，谢谢。”  </p>
<p>阿瓦登谨慎地选择词语，同时努力挤出一副满足的微笑，好象话筒的另一侧有人在看着自<br>己一样。放下电话，阿瓦登先是茫然地盯着它看了大约两分钟，然后站起来活动一下手腕<br>，坐回到电脑前面，缓慢地推动了一下鼠标。  </p>
<p>电脑屏幕”啪”地一声亮了起来，显示出一个登陆的界面，还有一行英文：”请输入你的<br>网络编号和姓名。”阿瓦登将那八位数字敲进去，又输入了自己的名字，点击”登陆”。<br>随即机箱的指示灯开始频繁地闪动起来，整个机器发出细微的噪音。  </p>
<p>每一个使用互联网的人都有一个网络编号，没有这个编号，就无法连接进互联网络。每一<br>个编号都是独一无二的，每个人只有一个；这是使用者在网上的唯一代号，既不能修改，<br>也不能取消。这些编号分别对应着使用者身份证上的名字，因此19842015就是阿瓦登，阿<br>瓦登就是19842015。阿瓦登知道有些记忆力不好的人会把自己的编号印在衣服的后面，那<br>看起来颇为滑稽，也容易引发一些不正当的联想。  </p>
<p>有关部门说使用网络实名制是为了规范网络秩序方便管理，杜绝因匿名使用网络而产生的<br>一系列重大问题和混乱。阿瓦登不太清楚那一系列重大问题会是什么，他自己没试过用假<br>名上网，他所认识的任何人里也不曾有人尝试过——–事实上，从技术角度来说，他根<br>本没办法匿名登陆互联网络，没有编号就没有权限上网，而编号则连接着他的详细档案，<br>换句话说，没人能在网上隐藏自己。有关部门把这一切都考虑的很周详。  </p>
<p>“有关部门”，这是一个语意模糊、但却有着权威与震慑力的词组。它既是泛指，又是确<br>指，其所涵盖的意义相当广泛。有时候，它指的是为阿瓦登颁发网络编号的美国联邦网络<br>管理委员会；有时候它是将最新通告及法规发到阿瓦登EMAIL信箱的服务器；还有时候它<br>是监察网络的FBI特属网络调查科；总之一句话，有关部门是无处不在，无职不司的，总<br>会在适当的时候出现，给予指导、监控或者警告，无论你是在网上还是网下。  </p>
<p>简直就象是老大哥一样无微不至。  </p>
<p>电脑仍旧在持续运转着，阿瓦登知道这得花上一阵子。这台电脑是有关部门配发给他的，<br>具体型号和配置阿瓦登并不清楚，机箱是被焊死的，无法打开。于是他拿出一小瓶清凉油<br>，用右手小拇指的指甲挑出一点抹在自己的太阳穴，然后从脚下堆积如山的杂物里翻出一<br>个塑料杯子，从桌子旁的饮水机里接了半杯蒸馏水，就着一片镇痛片一饮而尽。蒸馏水穿<br>过喉咙和狭长的食道滑进胃里，空泛的味道让他有些恶心。  </p>
<p>音响里忽然传来一阵美国国歌的旋律，阿瓦登放下杯子，重新把目光投到电脑上去。这是<br>已经连入互联网络的标志。屏幕上首先跳出来的是有关部门的通告，白底黑色四号字，里<br>面陈述了使用互联网的意义以及最新的规章制度。  </p>
<p>“缔造健康的互联网络，美国万岁！”  </p>
<p>音响里传来激昂的男性呼声，阿瓦登不大情愿地跟着大声念了一遍。”缔造健康的互联网<br>络，美国万岁！”  </p>
<p>这段呼号持续了三十秒钟，然后消失，取而代之的是写着”缔造健康的互联网络”标语的<br>桌面背景。另外一个窗口慢慢浮上开，上面开列出几个选项：工作、娱乐、电子信箱和<br>BBS论坛。其中BBS选项呈现灰色，说明这项功能还没有开通。  </p>
<p>整个操作系统简洁明了，这台电脑的浏览器没有地址输入栏，只是在收藏夹里有几个无法<br>修改的的网站地址。理由很简单，这些网站都是健康向上的，假如其他站点和这些网站一<br>样，那么只保留这些网站就够了；假如其他站点与这些网站不一样，那么就是不健康的，<br>是低级趣味，不能保留。这是有关部门精心设计的，是为了公民的精神健康着想，生怕他<br>们受到不良信息的侵染。  </p>
<p>阿瓦登首先点开了”工作”，一连串和他工作相关的站点列表与相关软件在电脑上显示出<br>来。阿瓦登是一名程序员，他每天的工作就是根据上级的要求编写程序。这份工作很无聊<br>，不过可以保证他有稳定的收入。他不知道自己的源代码会被用到哪里去，上级也从来没<br>有跟他说过。  </p>
<p>他打算继续昨天的工作，但是很快发现自己很难继续下去。阿瓦登觉得今天的情绪比以前<br>要烦躁，无法集中精神，大脑还是很呆滞，胸口仍旧发闷。他试图娱乐自己，但是他发现<br>“娱乐”选项里只有纸牌与挖地雷，根据有关部门的说法，这是两个健康的游戏，没有暴<br>力，没有色情，不会让人产生犯罪冲动，也不涉及任何政治色彩。据说美国境外也是有互<br>联网络站点的，不过无法连上去，因为本国的互联网络自成格局，独立自主，普通人无法<br>直接连接到国外—-IE浏览器没有地址栏，就算知道地址也没有用处。  </p>
<p>“您有一封新邮件。”  </p>
<p>系统忽然跳出来提示，阿瓦登终于找到了可以暂停工作的理由，他很快移动鼠标到电子信<br>箱的选项上，点开，很快一个新的界面出现了。  </p>
<p>“To:19802015<br>From：10045687<br>Subject:模块、已经、完成、当前、项目、是否、开始。”  </p>
<p>阿瓦登微微地叹了一口气，觉得有些失望。每一次他收到新的电子邮件，都希望能够有一<br>次新鲜的刺激来撞击他日益迟钝的脑神经，每一次他都失望了。其实他早就知道这一点，<br>只不过他觉得保持期待至少能够享受到几秒钟快感。就好象他期待着打电话过来的是一个<br>圆润温柔的女性声音一样。不给自己一些渺茫的希望，阿瓦登觉得自己迟早会疯掉的。  </p>
<p>这封信很简短，但是内容很充实。19802015是阿瓦登的网络编号，而10045687则是他的一<br>位同事的编号，这种工作性质的信件通常都以编号相称。信的内容是几个不连续的英文单<br>词，这是有关部门所提倡的一种电子邮件书写方式，因为这样可以方便软件检查信件中是<br>否含有敏感词汇。  </p>
<p>阿瓦登打开回信的页面，同时另开了一个窗口，打开一份名字叫做”网络健康语言词汇列<br>表”的TXT文档。这是有关部门要求每一位网民所必须使用的词汇。当他们书写电子邮件<br>或者使用论坛服务的时候，都得从这个词汇列表中寻找适合的名词、形容词、副词或者动<br>词来表达自己想要说的话。一旦过滤软件发现网民使用了列表以外的词，那么这个词就会<br>被自动屏蔽，取而代之的是”请使用健康语言”。  </p>
<p>“屏蔽”是个专有名词，被屏蔽的词将不允许再度被使用，无论是在书信里还是口头都不<br>允许。讽刺的是，”屏蔽”一词本身也是被屏蔽的词汇之一。  </p>
<p>这个列表是经常更新的，每一次更新都会有几个词在列表上消失，于是阿瓦登不得不费劲<br>脑汁寻找其他词语来代替那个被屏蔽掉的词语或者单字。比如在以前，”运动”这个词是<br>可以使用的，但后来有关部门宣布这也是一个敏感词汇，阿瓦登只好使用”质点位移”来<br>表达相同的意思。  </p>
<p>他对照着这份列表，很快就完成了一封文字风格与来信差不多的EMAIL—-健康词汇表迫<br>使人们不得不用最短的话来表达最多意思，而且要尽量减少不必要的修辞，所以这些信件<br>就好象是那杯蒸馏水一样，淡而无味，阿瓦登有时候想，他早晚也会和这些水和信一样腐<br>烂，因为这些信是他写的，水是他喝的。  </p>
<p>接下来阿瓦登启动检查软件先扫了一遍，确保自己没无意中加入什么敏感词汇。等这一切<br>都完成后，他按下了发送键，邮件被送出去了。  </p>
<p>阿瓦登没有留下备份，因为他的机器里没有硬盘，也没有软驱、光驱或者USB接口。这个<br>时代宽带技术已经得到了很大发展，应用软件可以集中在统一的一个服务器中，个人用户<br>调用时的速度丝毫不会觉得迟滞。因此个人不需要硬盘，也不需要本地存储，他们在自己<br>电脑里写的每一份文档、每一段程序、甚至每一个动作都会被自动传送到有关部门的公共<br>服务器中，这样便于管理。换句话说，阿瓦登所使用的电脑，仅仅具备输入和输出两种功<br>能。  </p>
<p>完成了这封信后，阿瓦登再度陷入了软绵绵的焦躁状态，这是一个连续工作了三天的程序<br>员的正常反应。这种情绪很危险，因为它让人效率低下精神低迷，而且没有渠道发泄。”<br>疲劳”、”烦躁”以及其他负面词汇都属于危险词汇，如果他写信给别人抱怨的话，那么<br>对方收到的将会是一封写满”请使用健康语言”的EMAIL。  </p>
<p>这就是阿瓦登每天的生活，今天比昨天更糟糕，但应该比明天还稍微好一点。事实上这个<br>叙述也很模糊，因为阿瓦登自己并不清楚什么是”好一点”，什么是”更糟糕”。”好”<br>与”坏”是两个变量，而他的生活就是一个定量，只有一个常数叫”压抑”。  </p>
<p>阿瓦登推开鼠标，把脑袋向后仰去，长长地呼了一口气。（至少”呼”这个字还没有被屏<br>蔽）这是空虚的表现，他想哼些歌，但却又不记得什么，转而吹了几下口哨，但那听起来<br>与一只生了肺结核的狗差不多，只得做罢。有关部门象幽灵一样充斥在整个房间里，让他<br>无法舒展自己的烦闷。就好象一个人在泥沼里挣扎，刚一张口就被灌入泥水，甚至无法大<br>声呼救。  </p>
<p>他的头不安分地转了几转，眼神偶尔撇到了摆在地板上的老式电话机，他忽然想到还必须<br>要去有关部门申请自己的BBS论坛浏览许可证。于是他关掉”工作”和”电子邮件”窗口<br>，退出了网络登陆。阿瓦登在做这些事的时候毫不犹豫，他很高兴能够暂时摆脱互联网络<br>，在那上面他只是一串枯燥的数字和一些”健康词汇”的综合体。  </p>
<p>阿瓦登找出一件破旧的黑色呢子大衣，那件大衣继承自他的父亲，袖口和领子已经磨损的<br>很严重，个别地方有灰色的棉花露出来，但还是很耐寒。他把大衣套到身上，戴上一副墨<br>绿色的护镜，用过滤口罩捂住嘴。他犹豫了一下，拿起”旁听者”别在耳朵上，然后走出<br>家门去。  </p>
<p>纽约的街上人很少，在这个时代，互联网的普及率相当地高，大部分事务在网上就可以解<br>决，有关部门并不提倡太多的户外活动。太多的户外活动会导致和其他人发生物理接触，<br>而两个人发生物理接触后会发生什么事则很难控制。  </p>
<p>“旁听者”就是为了防止这种事而发生的，这是一种便携式的语言过滤器，当携带者说出<br>敏感词汇的时候，它就会自动发出警报。每一位公民外出前都必须要携带这个装置，以便<br>随时检讨自己的言语。当人们意识到旁听者存在的时候，他们往往会选择沉默，至少阿瓦<br>登是如此。有关部门正逐步试图让网络和现实生活统一起来，一起”健康”。  </p>
<p>这时候正是11月份，寒风凛冽，天空漂浮着令人压抑的铅灰阴云，街道两旁的电线杆仿佛<br>落光了叶子的枯树，行人们都把自己包裹在黑色或灰色的大衣里面，浓缩成空旷街道上的<br>一个个黑点飞快移动着。一层若有若无的烟雾将整个纽约笼罩起来，不用过滤口罩在这样<br>的空气里呼吸将会是一件很有挑战的事情。  </p>
<p>距离上一次离开家门已经有两个月了吧，阿瓦登站在公共汽车站的站牌下，不无感慨地想<br>，周围的一切看起来很陌生，泛黄，而且干燥。那是上一次沙尘暴的痕迹。不过沙尘暴这<br>个词也已经被屏蔽了，因此阿瓦登的脑海里只是闪过那么一下，思想很快就转移到别的事<br>情上去了。  </p>
<p>站在阿瓦登旁边的是一个穿着蓝色制服的高个男人。他先是狐疑地看了阿瓦登一眼，看到<br>后者沉默地沉在黑色大衣里，他的两只脚交替移动，缓慢地凑了过去，装做漫不经心对阿<br>瓦登说：  </p>
<p>“烟，有吗？”  </p>
<p>男人说，每一个字都说的很清晰，而且词与词之间间隔也足够长。这”旁听者”还没有精<br>密到能够完全捕捉到每一个人语速和语调的程度，因此有关部门要求每一位公民都要保持<br>这种说话风格，以方面检测发言人是否使用了规定以外的词汇。  </p>
<p>阿瓦登转过头去，看了他一眼，舔舔自己干裂的嘴唇，回答说：  </p>
<p>“没有。”  </p>
<p>男人很失望，又一次不甘心地张开嘴。  </p>
<p>“酒，有吗？”  </p>
<p>“没有。”  </p>
<p>阿瓦登又重复了一次这个词，他也已经很久没有收到烟和酒了，也许是缺货的关系吧，这<br>是常有的事。不过有一点很奇怪，”旁观者”这一次却没有发出警报。以阿瓦登的经验，<br>以往一旦烟、酒或者其他生活必需品发生短缺现象，这个词就会暂时成为被屏蔽掉的敏感<br>词汇，直到恢复供给为止。  </p>
<p>这个男人看起来很疲惫，红肿的眼睛是这个时代的人们普遍的特征，这是长时间挂在网上<br>的关系。他的头发蓬乱，嘴边还留着青色的胡子碴，制服下的衬衣领口散发着刺鼻的霉味<br>。能看的出，他也很久不曾到街上来了。  </p>
<p>阿瓦登这时候才注意到，他的耳朵上空荡荡的，没有挂着那个银灰色的小玩意”旁听者”<br>，这实在是一件严重的事情。不携带”旁听者”外出，就意味着语言不会再被过滤，一些<br>不健康的思想和言论就有可能孳生，因此有关部门相当严厉地规定公民上街必须携带旁听<br>者。而这个男人的耳朵旁却什么也没有。阿瓦登暗暗吃惊，一时间不知道是该去提醒还是<br>装做没看到。他暗自想，也许向有关部门举报会更好。  </p>
<p>这时候那个男人又朝他靠近了一点，眼神变的饥渴起来。阿瓦登心里一阵紧张，下意识地<br>向后退去。这难道是一次抢劫？还是说他是个压抑太久的同性恋者？那个男人忽然扯住他<br>的袖子，阿瓦登狼狈地挣扎却没有挣开。出乎他的意料，那个男人并没有进一步的动作，<br>而是大吼一声，用一种阿瓦登已经不太习惯了的飞快语速向他倾泻起话语来。阿瓦登被这<br>突如其来的爆发弄的莫名其妙，不知所措。  </p>
<p>“我只是想和你多几句话，就几句，我很久没有说过话了。我叫斯多葛，今年三十二岁，<br>记得，是三十二岁。我一直梦想有一套在湖边的房子，有一副钓鱼竿和一条小艇；我讨厌<br>网络，打倒网管；我妻子是个可恶的网络中毒者，她只会用枯燥乏味的话叫我的网络编号<br>；这个城市就是一个大疯人院，里面大疯子管着小疯子，并且把所有没疯的人变的和他们<br>同样疯狂；敏感词汇都去他X的，老子受够了……”  </p>
<p>男人的话仿佛一瓶摇晃了很久然后突然打开的罐装碳酸饮料，迅猛，爆裂，而且全无条理<br>。阿瓦登惊愕地望着这个突然狂躁起来的家伙，却不知道如何应对；更可怕的是，他发现<br>自己居然对他产生了一点同情，那种”同病相怜”式的同情。男人的话这时候已经从唠叨<br>变成了纯粹谩骂，全部都是最直抒胸臆的那种。阿瓦登已经有五、六年不曾说过这些脏话<br>，最后一次听到这些也是四年前。有关部门认为这都有碍精神文明，于是全部都屏蔽掉了<br>。  </p>
<p>而现在这个男人就在公众场合对着他大吵大嚷，似乎要将被屏蔽掉的敏感词汇一口气全倒<br>出来。他的目光和手势并不针对任何人，甚至也不针对阿瓦登，更象是在一个人在自说自<br>话。阿瓦登的耳膜似乎不习惯这种分贝，开始有些隐隐做痛，他捂着耳朵，拿不定主意是<br>干脆逃掉还是……这时候，远处街道出现两辆警车，一路闪着警灯直直冲着这座公共汽车<br>站而来。  </p>
<p>警车开到站台旁时，男人仍旧在痛骂着。警车门开了，涌出了五、六名全副武装的联邦警<br>察。他们扑过去将那个男子按在地上，用橡皮棍痛打。男人两条腿挣扎着，嘴里的语速更<br>快了，骂出来的话也越来越难听。其中一名警察掏出一卷胶带，”嚓”地一声扯下一条向<br>男人的嘴贴去。男人在嘴被胶带封住之前，突然提高嗓门，冲着警察痛快无比地喊了一句<br>：”FUXKYOU,YOUSONOFBITCH！”阿瓦登看到他的表情由疯狂变成享受，面带着微笑，似<br>乎完全陶醉在那一句话所带来的无上快感和解脱感中。  </p>
<p>联邦警察们七手八脚地将男人送进了警车，这时才有一名警察走到了阿瓦登的跟前。  </p>
<p>“他，是，你朋友？”  </p>
<p>“我，不，认识。”  </p>
<p>警察盯了他一阵，取下他耳朵上的”旁观者”查看记录，发现他并没有提及任何敏感词汇<br>，于是重新给他戴回去，警告他说那名男子说的全部都是极度反动的词汇，要求他立刻忘<br>掉，然后转身押着那男子离开了。  </p>
<p>阿瓦登松了一口气，其实刚才他有一瞬间涌现出一种冲动，也想在这空旷的街道上大喊一<br>声”FUXKYOU,YOUSONOFBITCH”那一定很爽快，他心里想，因为那男子说出这句话的时候<br>表情很享受。不过他也知道，这也是妄想的一种，”旁观者”紧帖在耳朵上的冰凉感觉时<br>刻提醒着他。  </p>
<p>街上很快就恢复了冷清，十分钟后，一辆公共汽车慢吞吞地开进站里，锈迹斑斑的车门哗<br>啦一声打开，一个电子女声响彻整个空荡荡的车厢：”请乘客注意文明用语，严格按照健<br>康词汇发言。”  </p>
<p>阿瓦登把自己缩进大衣，压抑住自己异样的兴奋，决定继续保持沉默下去。  </p>
<p>大约过了一个小时，公共汽车到了目的地。从破碎的车窗玻璃里吹进来的寒风让阿瓦登脸<br>上挂起一层暗灰色的霜气，面部被风中的沙砾和煤渣刮的生疼。他听到电子女声报出了站<br>名，就站起身来，象一条狗一样抖抖身上的土，走下车去。  </p>
<p>车站对面就是阿瓦登要去的地方，那是有关部门负责受理BBS论坛申请的网络部。这是一<br>间五层的大楼，正方形，全水泥混凝土结构，外表泛灰。如果没有那几个窗户的话，那么<br>它的外貌将与水泥块没有任何区别：生硬、死气沉沉，让蚊子和蝙蝠都退避三舍。  </p>
<p>BBS论坛是一种奇特的东西，从理论上来讲它完全多余，BBS的功能完全可以由EMAIL新闻<br>组来取代，后者更容易管理和审查。而且申请使用BBS论坛资格不是件容易的事，申请人<br>必须要通过十几道手续和漫长的审查才能有浏览资格，浏览资格三个月才会被允许在指定<br>论坛发布帖子，至于自己开设BBS则几乎是不可能。  </p>
<p>因此真正对BBS有兴趣的人少之有少。阿瓦登当初之所以决定申请BBS论坛资格，纯粹是因<br>为他那种模糊但却顽强的怀旧心态，就好象他从杂货店里买的那部老式电话一样。他也不<br>知道自己为什么会自找麻烦，也许是为了给生活带来些刺激，还是说为了强调自己和曾经<br>旧时代的那么一点点联系，也许两者兼有之。  </p>
<p>阿瓦登恍惚记得在他小的时候，互联网与现在并不太一样。并不是指技术上的不同，而是<br>一种人文的感觉。他希望能通过使用BBS论坛回想起一些当年的事情。  </p>
<p>阿瓦登走进网络部的大楼，大楼里和外面一样寒冷，而且阴森。走廊里没有路灯，蓝白色<br>调的两侧墙壁贴满了千篇一律的网络规章条文与标语，冰冷的空气呼吸到肺里，让阿瓦登<br>一阵痉挛。只有走廊尽头的小门缝隙里流泻出一丝光亮，小门的上面挂着一块牌子，上面<br>写的是”网络部BBS论坛科。”  </p>
<p>一走进这间屋子，阿瓦登立刻感觉到一阵温洋洋的热气。屋子里的暖气（或者是空调）开<br>的很大，让阿瓦登冻麻了的手脚和脸麻酥酥的，有些发痒，他不禁想伸出手去挠挠。  </p>
<p>“公民，请您站在原地不要动。”  </p>
<p>一个电子女声忽然从天花板上的喇叭里传来，阿瓦登触电似地把手放下，恭敬地站在原地<br>不同。他借这个机会观察了一下这间屋子。这屋子准确来说应该是一个狭长形的大厅，一<br>道拔地而起的大理石柜台象长城一样将房间割裂成两部分，柜台上还装着一排银白色的圆<br>柱形栅栏，直接连到天花板。屋子里没有任何装饰，没有观赏植物，没有塑料鲜花，甚至<br>没有长椅和饮水机。  </p>
<p>“缔造健康的互联网络，美国万岁。”  </p>
<p>阿瓦登跟着声音重复了一遍。  </p>
<p>“请前往八号窗口。”  </p>
<p>电子女声的语调很流畅，因为这是电脑制作出来的，因此没有敏感词汇的限制。  </p>
<p>阿瓦登转头看到在自己右手边的不远处，大理石柜台上的液晶屏幕显示着八号的字样。他<br>走过去，拼命抬起头，因为柜台实在太高了，他只能勉强看到边缘，而无法看到柜台另一<br>侧的情形。不过他能听到，一个人走到柜台对面，坐下去，并有翻动纸张与敲击键盘的声<br>音。  </p>
<p>“请把文件放入盒子里。”  </p>
<p>柜台上的喇叭传来命令。出乎意料，这一次在喇叭里的声音却变了。虽然同样冷漠枯燥，<br>但阿瓦登还是能分辨出它与电子女声的不同—-这是一个真正的女性的声音。他惊讶地抬<br>头望去，却什么都看不到，柜台太高了。  </p>
<p>“请把文件放入盒子里。”  </p>
<p>声音又重复了一次，语气里带着一丝烦躁，似乎对阿瓦登的迟钝很不满。  </p>
<p>“是的，这是真正的女声……”阿瓦登想，电子女声永远是彬彬有礼不带任何感情色彩的<br>。他把相关的电子身份证、网络许可证、网络编号和敏感词汇犯罪记录等一系列个人资料<br>卡片一起放进柜台外的一个小金属盒子里，然后把盒子插进柜台上一个同样大小的凹槽中<br>，关好门。很快他听到”唰”的一声，他猜测这也许是对面的人—-也许是个女人—-<br>将盒子抽出去的声音。  </p>
<p>“你申请BBS服务的目的是什么？”  </p>
<p>喇叭后的女声浸满了纯粹事务性的腔调。  </p>
<p>“为了、提高、互联网络、工作效率、为了、缔造、一个、健康、的网络、环境，更好地<br>、为、祖国、做出、贡献。”  </p>
<p>阿瓦登一字一句地回答，心里知道这只是一道官方程序，只需要按标准回答就可以。  </p>
<p>对面很快就陷入沉默，大约过了十五分钟，喇叭再度响起。  </p>
<p>“最后手续确认，你已经获得BBS论坛浏览权。”  </p>
<p>“谢谢。”  </p>
<p>“砰”的一声，金属盒子从柜子里弹了出来，里面除了阿瓦登的证件以外还多了五张小尺<br>寸光盘。  </p>
<p>“这是有关部门核发给你的BBS论坛统一用户名与密码，BBS论坛列表、互联网BBS论坛使<br>用指南及相应法规、以及最新健康网络词汇列表。”  </p>
<p>阿瓦登向前踏了一步，从盒子里将这些东西一股脑全拿出来，揣进大衣的大兜里。那些东<br>西其实是可以全部放在同一张光盘里的，不过有关部门认为每一张光盘装一份文件有助于<br>用户理解这些文件的严肃性和重要性，并产生敬畏。  </p>
<p>他心里盼望着那个喇叭能再说两句。让他失望的是，对面传来的是一个人起身并且离开的<br>声音，从脚步声的韵律判断，阿瓦登愈发相信这是一名女性。  </p>
<p>“手续办理完毕，请离开网络部回到自己的工作岗位上。”  </p>
<p>甜美空洞的电子女声从天花板上传来，阿瓦登厌恶地抽动鼻翼，拿手揉了揉，转身离开这<br>间温暖的大厅，重新进入到寒冷的走廊。  </p>
<p>在回家的路上，阿瓦登蜷缩在公共汽车上一动不动，顺利申请到BBS的使用权让他有些虚<br>无缥缈的兴奋。他闭着眼睛，找了一个合适的角度躲开破窗而入的寒风，右手在兜里不断<br>摩挲那一系列光盘，还在怀念着那一个神秘的女声。  </p>
<p>如果能再一次听到该多好，他不能抑制自己这样的想法，同时用拇指的指肚在光盘上轻轻<br>地摩擦，幻想这几张光盘也曾经被她的手触摸过。他兴奋的几乎也想破口大骂一句”<br>FUXKYOU,YOUSONOFBITCH”，真奇怪，那名男子的骂声在他的记忆里根深蒂固，并时不时<br>不自觉地滑到唇边。  </p>
<p>忽然，他的手指在光盘上发觉到一丝异常的感觉。阿瓦登下意识地朝四周望去，确认周围<br>一个乘客也没有后，他小心翼翼地把光盘全拿出来，就着窗外的光亮仔细端详。  </p>
<p>阿瓦登很快注意到，在装有BBS论坛列表的光盘背面，被人用指甲轻轻地划了一道刮痕。<br>这条刮痕很轻，如果不是阿瓦登仔细地抚摩光盘的话，是很难发觉到的。这条刮痕很奇特<br>，是一条直线，而在这条直线末端的不远处，则是另外一条极短的刮痕，似乎刻意想弯成<br>一个圆点。整体看上去就好象是一个叹号，或者倒过来说，象是字母i。  </p>
<p>很快他在其他四张光盘上也发现了类似的刮痕，它们造型都不同，但都似乎代表着某种符<br>号。阿瓦登回想起喇叭里那个女声最后一句提到过的文件顺序，于是把这五张光盘按照<br>BBS论坛统一用户名与密码、BBS论坛列表、互联网BBS论坛使用指南、相应法规、以及最<br>新健康网络词汇列表的顺序排列好，接着依次把那五道刮痕用手指临摹到汽车窗户上。很<br>快那些刮痕构成了一个英文单词：  </p>
<p>title  </p>
<p>题目？这是什么意思？  </p>
<p>阿瓦登看着这个单词莫名其妙，这究竟是纯属无意的痕迹，还是有人刻意为之？如果是有<br>人刻意为之，他这么做的用意是什么？  </p>
<p>这时候汽车停住了，又有几名乘客走上车来。阿瓦登挪动一下身体，不让他们看到自己在<br>车窗上写出来的字迹，然后装做打呵欠的样子抬起袖子，轻轻把那五个字母擦掉。  </p>
<p>阿瓦登暗自庆幸，如果他没有在现在发现这些光盘上的痕迹，那么以后就永远没有机会发<br>觉了。按照规定，个人电脑是不允许使用任何存储存设备的，因此阿瓦登的电脑并没有光<br>驱。他下一步所要做的是将这些光盘送交到管区网络安全部，由他们将光盘内资料登陆到<br>服务器中，再转发给阿瓦登。这是为了防止个人私自在家里制造、阅读或者传播黄色或者<br>反动信息，网络安全部发出的通告是这么解释的。联邦的网络警察经常会突入到个人家中<br>进行临时检查，看用户是否非法拥有信息贮存设备，阿瓦登曾经亲眼见过一个邻居被警察<br>带走，原因仅仅是因为他私自藏了一张光盘在家里—-其实他只是打算拿那个当茶杯垫用<br>。那个邻居再没回来过。  </p>
<p>无论这些符号代表的是什么意思，它都是一种全新的体验，这让阿瓦登感觉到兴奋。怀旧<br>与渴望新奇是阿瓦登生活在这个时代的两根精神支柱，否则他会与这座城市一样变的僵硬<br>，然后窒息而死。  </p>
<p>他先来到网络安全分部，将光盘交给那里的负责人，负责人反复地检查光盘和阿瓦登的表<br>情，好象所有使用BBS论坛的人都不可信赖一样。末了负责人终于找不到什么破绽，只得<br>将光盘收下，然后举起右手，阿瓦登和他一起高呼”缔造健康的互联网络”。这句话是唯<br>一被允许可以连贯着被说出来的句子。  </p>
<p>回到家里，阿瓦登脱掉大衣，摘了过滤口罩，将旁观者扔到了行军床上，然后整个人也倒<br>进枕头里。每次出去外面都会让他疲劳，这一半是因为他孱弱的肉体已经不大适合室外活<br>动；另外一半原因是因为他必须花费大量的精力来应付旁观者。  </p>
<p>过了四十分钟，他才悠悠地醒过来，头还是和平常一样地疼，胸口还是一如既往地闷。胡<br>乱吃了一点东西以后，阿瓦登爬到电脑桌前，打开电脑，按程序登陆上网络，习惯性地先<br>检查了一遍信箱。  </p>
<p>信箱里有七、八封新的信件，其中两封是同事发来的事务信。另外五封则是网络安全部发<br>给他的，内容就是他送交的那几张光盘。  </p>
<p>阿瓦登打开了包含有BBS论坛的用户名、密码和BBS论坛列表的两封信。他看到自己的论坛<br>通用用户名叫做19802015，和自己的网络编号完全一样，不由得有些失望。他依稀记得在<br>小的时候，BBS论坛的用户名是可以自己决定的，而且每一个论坛都可以不同，一个人在<br>网上并不单只是一串枯燥数字。  </p>
<p>小时候的记忆往往是跟童话和幻想混杂在一起，未必与实际相符。现实中你只能使用有关<br>部门指定的用户名和密码，理由很简单，用户名和密码内也可能含有敏感词汇。  </p>
<p>阿瓦登又打开了那份BBS列表，全部都是有关部门开设的官方论坛，没有私人的—-事实<br>上个人能够合法持有的电脑设备从技术上来说也无法架设新BBS—-这些论坛的主题各有<br>侧重点不同，但基本上是围绕着如何更好响应国家号召，缔造健康互联网络来说的。比如<br>其中一个电脑技术论坛，主题就是如何更好地屏蔽掉敏感词汇。  </p>
<p>居然在这些论坛中还有一个是关于游戏的。里面正在讨论的是一个如何帮助别人使用健康<br>词汇的网络游戏，玩家可以操纵一名小男孩在街上侦察，看是否有人使用了敏感词汇，小<br>男孩可以选择上前指责或者通知警察，抓到的人越多，小男孩得到的褒奖就越高。  </p>
<p>阿瓦登随便打开了几个论坛，里面的人都彬彬有礼，说话很”健康”，就好象街上的那些<br>行人一样。不，准确地说，比街上的气氛还要压抑。在街上的人也许还有机会保留一下自<br>己的小动作，比如阿瓦登刚才在公共汽车上就偷偷地写了TITLE五个字母；而在网上论坛<br>，人的最后的一点隐私也全被暴露出来，有关部门随时可以调看你的一切行动，无从遁形<br>，这就是科学技术发展所带来的进步。  </p>
<p>一阵失落和失望袭上阿瓦登的心头，他合上眼睛，把鼠标甩开，重重地向后靠去。原来他<br>天真地以为BBS论坛也许会少许宽松一些，现在看来甚至比现实中更叫人窒息，他感觉到<br>自己好象陷入沉滞的电子淤泥之中，艰于呼吸。”FUXKYOU,YOUSONOFBITCH”再一次涌现<br>到他的唇边，强烈无比，要化好大的力气才控制住。  </p>
<p>忽然，他又想到了那个神秘的title，那究竟是什么意思？那五张光盘里或许隐藏着什么<br>？也许这跟title有关系？  </p>
<p>阿瓦登想到这里，把目光重新转向电脑屏幕，仔细去看网络安全部发来的五封信的title<br>部分。五张光盘各隐藏着一个字母，凑到一起就是title，那么按照这个方式，那五封<br>EMAIL的title凑到一起，就变成了一句话：去用户学习论坛。”  </p>
<p>阿瓦登记得刚才他确实看到其中一个论坛的名字叫做”用户学习”，于是他抱着姑且一试<br>的心态连接到这个论坛去。他希望这并不是一个巧合。  </p>
<p>用户论坛是一个事务性论坛，里面是一些关于BBS用户资料的投诉帖和管理帖，斑竹的是<br>一个叫19387465的人；发帖的人和回帖的人数量都很少，里面冷冷清清的。阿瓦登打开帖<br>子列表，按照刚才的规律去搜寻每一个帖子的标题，并把它们综合到一起，很快他就得到<br>了另外一句话：  </p>
<p>“每周日辛普森大楼5层B户。”  </p>
<p>又是一个谜团，阿瓦登想。但这却坚定了他的信心，这其中必定隐藏着玄机。光盘、<br>EMAIL和BBS论坛，连续三次都可以通过首词组组合的方式得到暗示，绝非巧合。  </p>
<p>究竟是什么人会在有关部门的官方文件中隐藏着这样的信息呢？每周日在效率大楼5层B户<br>又会发生什么事情呢？  </p>
<p>阿瓦登终于找到了久违的兴奋感，未知事物的新奇刺激着他麻木很久的神经。更重要的是<br>，这种在有关部门正式文件中玩弄的文字技巧，叫他有一种喘息的快感，仿佛一个密不透<br>风的铁面罩上几个透进空气的小孔。  </p>
<p>营造健康的互联网络。  </p>
<p>FUXKYOU,YOUSONOFBITCH。  </p>
<p>阿瓦登盯着屏幕上的桌面背景，用嘴唇比出了那句粗话的口型，并且比出了中指。  </p>
<p>在接下来的日子里，阿瓦登一直处于一种潜藏的兴奋状态，就象是一个摆出无辜表情嘴里<br>却藏着糖果的小孩子，在大人转身过去之后露出狡黠的笑容，尽情享受心中藏有秘密的乐<br>趣。  </p>
<p>日子一天一天地过去，健康词汇在列表里又少了几个，窗外的空气又浑浊了几分，这已经<br>是生活的常态。阿瓦登自己已经开始拿网络健康词汇表当日历来用，划掉三个词就证明过<br>了三天，划掉七个就证明过了一周，于是周日终于到来了。  </p>
<p>阿瓦登抵达辛普森大楼的时间是中午，暗示的句子里并没有指明时间，阿瓦登认为在中午<br>前往应该是比较可以接受的。当穿着深绿军大衣，耳朵上别着旁观者的阿瓦登来到辛普森<br>大楼的入口时，他的心开始忐忑不安地跳跃起来。他在上一星期设想了无数种可能发生的<br>情景，而现在这个谜底就要揭晓了。无论在周日效率大楼会发生什么，也不会比现在的生<br>活更加糟糕，阿瓦登心里想，所以他并不怎么害怕。  </p>
<p>他走进大楼内部，发现这里的人也很少，空旷的走廊里只听到他哒哒的脚步声与回音。一<br>部老电梯里贴着”缔造美好网络家园”的广告，以及一个充满了正义感的男性头像海报，<br>背景是星条旗，他在纸里用右手食指指向观看者，头上写着一行字是”公民，请使用健康<br>词汇。”阿瓦登厌恶地转过身去，发现另外一侧也贴着同样的海报，避无可避。  </p>
<p>值得庆幸的是五楼很快就到了，电梯的门一开，对面的门上就赫然挂着B户的牌子。门是<br>掉了漆的绿色，门框上还点了几滴墨水，一部简易的电子门铃挂在右上角。  </p>
<p>阿瓦登深深吸了一口气，伸手去按电纽。  </p>
<p>电铃响起，很快屋子里传来脚步声。阿瓦登觉得这脚步的韵律很熟悉，似乎是在哪里见到<br>过。门”咔拉”一声被打开一半，一名年轻女子一手握着把手，把身体前倾望着阿瓦登，<br>警惕地说：  </p>
<p>“你，找谁？”  </p>
<p>女子疑惑地问道。阿瓦登一下子就认出了她的声音，就是那个在网络部BBS论坛科柜台后<br>面的女性。她很漂亮，穿着墨绿色绒线衫，头上梳着这时代流行的短发，皮肤特别的白，<br>只有嘴唇能看到一些血色。  </p>
<p>看着女子的眼神，一瞬间阿瓦登不知道该说什么好，犹豫了一下，他举起右手，轻声回答<br>说：”title。”  </p>
<p>阿瓦登不知道这句话能否奏效，也不知道自己是否真的找对了地方，但这是他唯一能想到<br>的回答了。他紧张地望着那女子，假如那女子忽然报警，那么自己就会被抓起来仔细审问<br>为什么无缘无故跑到陌生人家里。”肆意游走罪”只比”使用敏感词汇罪”轻那么一点。  </p>
<p>女子听到他这么说，脸上还是毫无表情，只是把头幅度很轻微地点了一下，右手谨慎地做<br>了一个”进来”的手势。阿瓦登刚要张口，那女子严厉地瞪了他一眼，吓的他把话又吞回<br>去了，乖乖地跟着她进了屋子。  </p>
<p>一进屋子，女子首先做的就是把门关好，然后拉起来一层铅灰色的门帘挡在门口。阿瓦登<br>不安地眨着眼睛，趁她拉门帘的时候环顾四周。这屋子是标准的两室一厅，在厅里摆放的<br>是一套双人沙发与一个茶几，茶几上居然还有几束红紫色的塑料花。靠墙是电脑桌和电脑<br>，墙上挂着普通的白色日历，但被主人用粉红色的纸套了边，看起来颇为温馨。一盏粗<br>笨的日光灯从天花板上垂下来，上面象是恶作剧一样挂了几缕绿色的电线，象是垂下藤蔓<br>的葡萄架。阿瓦登注意到厅口的鞋架上有四双鞋，尺码不同，说明今天的客人并不只他一<br>个。  </p>
<p>阿瓦登正踌躇不安，忽然女子从背后拍了拍他的肩膀，示意他朝里面走。于是两个人穿过<br>客厅另一侧的短小回廊来到其中一间卧室。卧室上挂着同样质地的铅灰色帘子，女子伸手<br>举起帘布，推开了门。阿瓦登迈了进去，首先映入眼帘的是三名面带微笑的人类，以及一<br>间用真正的鲜花装点的房间。屋子里有很多旧日记忆里的古老物品，比如一幅印象派的油<br>画、一尊乌干达木雕，甚至还有一个银烛台，唯独没有电脑。  </p>
<p>他正在迟疑，女子也进了屋子。她谨慎地拉好门帘关上门，将耳边的旁观者取下，回过身<br>来对阿瓦登用曼妙的声音说道：  </p>
<p>“欢迎加入说话会！”  </p>
<p>“说话会？”  </p>
<p>出于习惯，阿瓦登并没有把这三个字说出口，因为他不确定是否”健康”，只是用眼神表<br>示自己的疑惑。  </p>
<p>“在这里你可以随便说话，这个该死的东西不会起作用的。”女子把自己的旁观者晃了晃<br>，那个小东西象死掉了一样，对女子句子里两个敏感词汇”随便”和”该死”充耳不闻。  </p>
<p>阿瓦登一下子想到上星期在公共汽车站前碰到的男子，如果他摘下旁观者，会不会也会落<br>到同一境地呢？那女子见他犹豫不决，指了指门口的铅灰色门帘说：”放心好了，这里是<br>可以屏蔽掉旁观者信号的，不会有人觉察到。”  </p>
<p>“你们，是什么，人，这，是，哪里？”  </p>
<p>阿瓦登一边摘下耳朵上的旁观者，一边小声说道，语调还是改不了那种有关部门规定的说<br>话方式。  </p>
<p>“这里是说话会，是一个完全自由场所，在这里你可以畅所欲言，请不要拘束。”  </p>
<p>另外一个人起身对他说道，这是一名瘦高的中年男子，鼻梁上的眼镜非常地厚。  </p>
<p>阿瓦登嗫嚅着，却找不到发音的焦点，在四个人的注视下显得窘迫不堪，脸都要红起来。<br>女子同情地看了他一眼：”可怜的家伙，不用太紧张，每一个刚到这里的人都是这样。慢<br>慢就习惯了。”  </p>
<p>她把手搭到阿瓦登的肩上：”我们其实见过的，当然，我见过你，而你没见过我。”她一<br>边说，一边将自己的头发解下来，原来她留的是一头齐肩的乌黑长发，头发披下来的一瞬<br>间阿瓦登觉得她真的很美。  </p>
<p>“我……我记得你，记得你的声音。”阿瓦登终于说出了一句完整的话，虽然不够流畅。  </p>
<p>“是吗，那可太好了。”女子笑起来，拉着他的手，让他坐到沙发上，递给他一杯水。阿<br>瓦登注意到这是一个款式古老的茶杯，上面还刻着花纹，杯子里的水带着浓郁的香气，阿<br>瓦登尝了一点，那种甜丝丝的味道对喝惯纯净水的舌头来说刺激格外地大。让他觉得浑身<br>一下子被注进了许多活力。  </p>
<p>“弄到这个可不容易，我们也不是每周都能喝到。”女子坐到他身边，两只乌黑的眼睛注<br>视着他，”你是怎么知道这个集会的？”  </p>
<p>阿瓦登把发现光盘暗示的过程说了一遍，其他四个人都赞许地点了点头。”果然是个聪明<br>人，脑筋还没被陈腐的空气腐蚀掉。”一个三十多岁的胖子称赞道，他的嗓门大的要命。<br>那个戴眼镜的中年人把两只手交叉在一起，表示赞同。  </p>
<p>“这正是天生的说话会成员，聪明、敏锐，而且不甘屈从于沉默。”  </p>
<p>“那么。”胖子提议，”先让我们鼓掌欢迎说话会的新成员吧。”  </p>
<p>于是四个人鼓起掌来，小小的屋子里响起一片掌声。阿瓦登羞涩地举起杯子做回应，他还<br>不太习惯这样的场面。等到掌声稍息，他抬起头怯生生地问道：  </p>
<p>“可以问个问题吗？说话会到底是什么？”  </p>
<p>带他进屋的女子伸出食指，在他鼻子前两公分的地方比了一比，解释道：  </p>
<p>“说话会，就是可以畅所欲言的集会。在这里你不必顾忌什么，说出任何你想说的东西。<br>这里没有敏感词汇，也没有健康互联网络。这里是绝对自由的空间，你可以尽情释放你的<br>灵魂，舒展你的身体，没有任何禁锢与束缚。”说着说着，她的声音变的高亢、奔放，里<br>面饱含了许多早已经被屏蔽掉的词汇，阿瓦登不曾听到这样流畅连贯的话语很久了。  </p>
<p>“我们的宗旨就是，说话，就这么简单。”中年人扶扶眼镜，补充道。  </p>
<p>“可是，要说些什么呢？”阿瓦登又问道。  </p>
<p>“任何事情，你心里想的任何事情都可以说出来。”中年人露出宽和的笑容，”尤其是那<br>些被美国政府限制的思想。”  </p>
<p>这可真是一个大胆的集会啊，这分明就是犯罪，阿瓦登心想，但他发觉自己却被这种犯罪<br>慢慢地吸引住了。  </p>
<p>“当然，有件事我们会事先说明。说话会是危险的，每一个成员都冒着被有关部门拘捕的<br>风险。联邦执法人员也随时可能破门而入，以非法集会以及非法使用不合法词语的名义把<br>我们抓起来。你现在有权拒绝加入，并且离开。”  </p>
<p>阿瓦登听到女子的警告，心里一度犹豫起来。但一想到此刻离去的话，那么又要开始持续<br>那种窒息的泥沼生活，他就难以压抑自己的烦闷。阿瓦登第一次发现，原来”说话”对他<br>来说是一个致命的诱惑，他先前并不知道自己原来是如此地渴望着说话。  </p>
<p>“我不会离开的，我要加入你们，说话。”  </p>
<p>“那太好了。唔，那么不妨就从自我介绍开始吧。”女子高兴地说，同时站起身来，把右<br>手搭到胸前，”从我开始。我的名字叫阿尔特弥斯，至于网络编号和身份证号码，让他们<br>见鬼去吧！谁会去管那个！我有我自己的名字，我不是数字。”  </p>
<p>她的话让所有人包括阿瓦登都笑了起来。接着她继续说道：”不过，这其实只是一个假名<br>，这是希腊神话里的女神。”  </p>
<p>“假名？”  </p>
<p>“是的，和我户籍本上的名字是不同的。”  </p>
<p>“可是，为什么？”  </p>
<p>“你不会对自己在档案里的名字厌倦吗？我想起一个自己喜欢的名字，哪怕只有一次机会<br>也好，自己想叫什么就叫什么。在这个说话会里的每一个人都有一个自己喜欢的名字，我<br>们彼此拿这个称呼。”  </p>
<p>阿瓦登若有所思地点点头，他很理解阿尔特弥斯的想法。事实上当他在使用网络论坛的时<br>候，也希望能够自己取一个称心如意的名字，而不是被分配一个用户名。  </p>
<p>通过介绍，阿瓦登了解到阿尔特弥斯是网络部BBS论坛管理科的职员，今年23岁，未婚，<br>最讨厌蟑螂和蜘蛛，喜欢缝纫与园艺，屋子里的花就是她偷偷从城市边缘摘回来的。  </p>
<p>接下来是那名中年人，他自我介绍说名字叫兰斯洛特，41岁，是城市电厂的一名工程师；<br>兰斯洛特这名字出自英国的亚瑟王传说，是一名忠贞的骑士。他有自己的老婆和两个孩子<br>，一男一女；男孩三岁，女孩四岁，他们最喜欢吃的就是柠檬味道的水果糖。说到这里，<br>兰斯洛特说希望下次聚会能把他们也带了，孩子们正是学说话的时候，他想教给他们真正<br>的说话。  </p>
<p>那个三十多岁的胖子是网络部的一名网管，叫瓦格纳。这个身份让阿瓦登吃惊不已，他的<br>印象里网管都是些绷着脸全无表情的冷漠生物，但眼前的瓦格纳脸圆滚滚的，油光锃亮，<br>嘴边两条翘起的小胡子神气十足。他喜欢的是雪茄和歌剧，利用网管的特权这两样东西都<br>不难弄到。  </p>
<p>“这个能屏蔽掉信号的门帘就是他弄的。”阿尔特弥斯补充说，瓦格纳冲她做了个”乐意<br>为您效劳”的手势，然后点燃了雪茄，把它放到嘴里，很快屋子里就笼罩起一片稀薄的烟<br>雾。  </p>
<p>说话会的第四名成员是一位穿着黑色制服的女性，今年刚满三十。她的名字是杜拉丝，城<br>市日报（那个时代的报纸已经全部都数字化了）的编辑，她比阿尔特弥斯还瘦，颧骨高高<br>耸起，眼窝身陷，两片薄薄的嘴唇即使在最说话的时候也很少分开，看不到牙齿。爱好是<br>饲养狗和猫，尽管她并没有养。  </p>
<p>“那么，到你了。”阿尔特弥斯对阿瓦登说。阿瓦登想了想，结结巴巴地把自己的情况说<br>了一遍，当谈到自己的爱好时候，他一时间居然想不到自己喜好什么，似乎什么都没有，<br>在那之前他甚至从来没想过。  </p>
<p>“那，你最想做的是什么事呢？”阿尔特弥斯把手再一次放在他肩上，诱导着问道。  </p>
<p>“真的什么都可以？”  </p>
<p>“什么都可以，在这里没有任何限制。”  </p>
<p>阿瓦登觉得自己终于找到机会了，他咳了一声，抓抓头，脱口而出一句响亮的叫喊：”<br>FUXKYOU,YOUSONOFBITCH！”  </p>
<p>在一瞬间，在座的四个人都被他这句话震惊了。瓦格纳率先反应了过来，他先叼住雪茄，<br>用力鼓掌，然后用右手把雪茄取下来，张嘴大声地赞叹道：”真棒，痛快，这简直是最完<br>美的入会誓词。”  </p>
<p>“我宁可听十遍这样的脏话，也不想再去碰那个乏味的电子女声。”兰斯洛特也是一脸陶<br>醉，毫不掩饰自己对电子女声的厌恶。而阿尔特弥斯和杜拉丝全都咯咯地笑起来，杜拉丝<br>发现自己的笑容幅度大了一点，不好意思地把嘴掩住。阿瓦登觉得他们与其说是觉得新奇<br>，不如说是在享受这句脏话所带来的对体制的蔑视与挑战。  </p>
<p>“那你叫希望自己叫什么名字呢？”阿尔特弥斯歪着头问。  </p>
<p>“唔……王二。”阿瓦登沉吟了一下，回答说。这是一个中式的名字，他以前有一个中<br>国人朋友，喜欢讲故事，故事里的主角名字总是叫王二。  </p>
<p>屋子里的气氛现在完全融洽了，大家都开始谈些比较自然的话题，每个人都摆出了最舒服<br>的姿势，阿尔特弥斯不时拿起茶壶来为大家续水。阿瓦登紧张的心情逐渐放松下来，他感<br>觉到自己的脑子前所未有地轻松。  </p>
<p>“你知道的。”阿尔特弥斯又给他倒了一杯甜水，”我们一直想把说话会保持在一定规<br>模，平日是没有办法畅所欲言的，我们需要空间。麻烦的是，我们没办法公开征集会员，<br>又不可能直接通过物理接触去寻找，那风险太大。于是兰斯洛特就设计了一套暗示系统，<br>只有发现这些暗示的人才能知道本会的存在。”  </p>
<p>“这套系统考虑到的还不止是安全问题。”兰斯洛特把自己的眼镜摘下来仔细擦拭了一下<br>，得意地说，”这其实也是一个会员资格验证。说话会所吸纳的成员，必须有智慧，有头<br>脑，内心渴望激情，并且对自由有着渴望。”  </p>
<p>瓦格纳用两根指头夹着雪茄，在事先准备好的烟灰缸里弹了弹烟灰，大声说道：”据我的<br>经验，申请BBS论坛服务的人，大多数都是为了怀旧，或者说渴望一些新鲜的东西，这样<br>的人往往都怀有激情，认为BBS论坛也许能给他们一些与现实不一样的东西—-当然，事<br>实上并非如此，美国政府对BBS论坛的管理甚至严厉过电子邮件—-这暗示着他们心里渴<br>望解脱束缚。因此我们将暗示隐藏在申请BBS论坛的光盘之中，只有申请人才有机会接触<br>到这些暗示。而只有那些有智慧、观察敏锐的人才会发觉到这些暗示的存在，并顺利解读<br>出来，找到这里。”  </p>
<p>“归根到底，说话会也不过是一群渴望自由说话的秘密小团体罢了。”兰斯洛特笑道。  </p>
<p>“你是第二个找到说话会的人，第一个是杜拉丝小姐。”  </p>
<p>阿尔特弥斯告诉阿瓦登。阿瓦登敬佩地看了杜拉丝一眼，后者淡淡地回答道：”这没什么<br>，这是我的工作，我的工作就是摆弄文字。”  </p>
<p>阿瓦登想到上一周在公共汽车站碰到的那个疯狂男子，于是把这件事讲给其他成员听。听<br>完之后，兰斯洛特摇了摇头，从嘴唇里滑出一声叹息：  </p>
<p>“这样的事情我也是见过的，我的一个同事就是如此。所以说话会的存在是必要的，这是<br>缓解压力的阀门。长时间的敏感词汇限制会让人都疯掉的，因为他们既无法思考又没办法<br>表达。”  </p>
<p>“这正是美国政府有关部门所希望看到的，这样只有傻瓜能够存活下来，一个全是傻瓜的<br>社会是稳定的。”瓦格纳费力地把自己肥胖的身躯挪了一下位置，轻蔑地说。  </p>
<p>“你也是有关部门的一分子，瓦格纳先生。”阿尔特弥斯一边往茶杯里续了些热水，一边<br>抬头轻声说道。  </p>
<p>“阿尔特弥斯小姐，我只是一个能比普通人多使用几个敏感词汇的普通人而已。”  </p>
<p>大家都笑了起来。阿瓦登从来没有见过这么多的人说这么多的话，这是前所未有的奇妙经<br>验。他惊讶地发现自己居然很快就融进了这个小圈子里，隔阂与陌生感很快就消失了；同<br>时消失的还有胸闷与头晕等习惯性的毛病。  </p>
<p>很快话题就从说话会本身扩展到了更加宽泛随意的话题，阿尔特弥斯唱支歌，兰斯洛特说<br>了几个笑话，杜拉丝则给大家讲了美国南部诸州的风土人情；瓦格纳甚至还唱了一段歌剧<br>，虽然阿瓦登一个字也听不懂，但他一点也不吝惜掌声。在这个城市的某一个被屏蔽掉的<br>角落里，五个不甘沉默的人正在享受着在这个时代视为奢侈品的事情—-说话。  </p>
<p>“王二，你可曾看过《1984》？”  </p>
<p>阿尔特弥斯忽然问道，她就靠着阿瓦登坐下，阿瓦登摇摇头，反问道：”这是网络编号的<br>一段么？”  </p>
<p>“这是一本书的名字。”  </p>
<p>“书？”阿瓦登听到这个名词，头摇的更大了。这是个古老的名词，在这个电脑技术非常<br>发达的时代，网络可以承载一切信息，任何人都可以在网上图书馆查到电子版；因此有关<br>部门认为实体书籍变成了一种没有必要存在的浪费，实体书也就逐渐消亡了。瓦格纳对此<br>的评论是：”有关部门喜欢电子书籍的心情是可以理解的，电子书籍的话，只需要FIND和<br>REPLACE两个命令就可以消灭掉全部不健康词汇，替一本书消毒；而实体书籍的校对与修<br>订却是件旷日持久的工作。”  </p>
<p>“这是一本伟大的书，是旧世界哲人们对我们这个时代的预言。”阿尔特弥斯认真地说。<br>“它很早以前就洞察到了肉的束缚与解脱，灵的束缚与解脱，这是说话会的基石。”  </p>
<p>阿瓦登不无惊奇地发现他的网络编号开头恰好是这这本书名字：19802015。  </p>
<p>“那么，该怎么样才能看到呢？”阿瓦登盯着阿尔特弥斯乌黑色的眼睛问。  </p>
<p>“我们也无法找到纸质版，网络图书馆不可能存在这样的书。”兰斯洛特摇摇头，然后重<br>新露出笑容，左手向着杜拉丝摆了个请的姿势，”但我们的杜拉丝小姐应该为她的记忆力<br>而自豪，她在很早已经有幸阅读过这两本书，并且能够记得里面的大部分文字。”  </p>
<p>“太好了，然后她写下来了，对吗？”  </p>
<p>“那太危险，这时代持有实体书是个大罪过，也容易让说话会暴露。我们只是在每次聚会<br>的时候请杜拉丝小姐为我们背诵。即然是说话会，那么把这两个故事讲出来不是更名符其<br>实吗？”  </p>
<p>大家都安静下来，杜拉丝站起来走到屋子中央，其他四个人坐在旁边看着她。阿瓦登不经<br>意地把手搂在阿尔特弥斯肩上，后者微微朝这边靠过来，女性头发的幽香”咝咝”地划过<br>他的鼻子，让他的心里一阵荡漾。屋子里非常暖和，他分不清这是花香还是阿尔特弥斯的<br>味道。  </p>
<p>杜拉丝的声音并不高，不过却很清晰有力；她的记忆力确实惊人，不仅记得情节，包括一<br>些细节和句子都可以复述下来。杜拉丝讲到了朱丽亚假装摔倒，然后偷偷递给温斯顿一张<br>写着”我爱你”的纸条，绘声绘色，这让听众们都听的入神了，阿尔特弥斯听的尤其认真<br>，以至于都没有注意到阿瓦登一直注视着她。  </p>
<p>“1984的作者预见到了专制的进步，却没有预见到技术的进步。”瓦格纳在杜拉丝停下来<br>喝水的时候发表自己的评论，阿瓦登觉得他与外貌不太相称，是个很有洞察力的技术官僚<br>。  </p>
<p>“在大洋国人们还可以靠传递纸条来偷偷表达自己的想法，但是现在不一样了。美国政府<br>有关部门把我们全赶到了网上，而在网络技术发达的今天，我们即使想发一条短信都会被<br>系统或者网管看的一清二楚，无从遁形。现实里呢，还有旁观者在。”瓦格纳在腿上敲了<br>敲雪茄根部，”一句话，技术是中性的，但技术的进步会让自在的世界更自在，集权的世<br>界更加集权。”  </p>
<p>“这句话说的很有哲学家的味道哟。”阿尔特弥斯冲瓦格纳挤了挤眼睛，从抽屉里取来一<br>把饼干和曲奇散发给大家。  </p>
<p>“就好象同样是0和1，有的人就能写出工具软件，有人却拿那个编出恶性病毒？”  </p>
<p>阿瓦登想到一个类似的比喻，瓦格纳听了以后满意地打了个响指。  </p>
<p>“很不错的比喻，王二，就是如此，真不愧是程序员。”  </p>
<p>谈话持续了不知道有多久，杜拉斯看了一眼墙壁上的挂钟，连忙提醒谈兴正浓的四个人时<br>间快到了。说话会不能持续很长时间，旁听者被屏蔽的越久，暴露的危险就越大。  </p>
<p>“那么好吧，我们就抓紧最后半个小时来完成今天的活动。”  </p>
<p>阿尔特弥斯一边说着，一边将桌子上的空杯子收走。兰斯洛特和瓦格纳也都站起身来，活<br>动一下已经有些酸疼的肩膀和腰，只有杜拉丝坐在位子上没有动。  </p>
<p>“活动？还有什么活动？”  </p>
<p>阿瓦登奇怪地问道，说话会除了说话还有其他活动？  </p>
<p>“唔，对啊，我们还有其他活动。”阿尔特弥斯撩起额前的长发，对他妩媚一笑：”我们<br>还会和对方完全交流。”  </p>
<p>“完全交流？”  </p>
<p>“就是intercourse”  </p>
<p>“………………”阿瓦登一下子变的脸色苍白，呼吸急促起来，仿佛胃里被灌进去零下三<br>十度的寒风，他几乎不相信自己的耳朵。  </p>
<p>“说话会有说话的自由，也有选择与谁上床的自由。”阿尔特弥斯毫不羞涩地说，”我们<br>互相谈话，然后选择合适的人做爱，就象我们选择我们喜欢的词汇说话一样。<br>“<br>兰斯洛特看阿瓦登很窘迫，走过去拍拍他的肩膀，慢慢地说：”当然，我们不会强迫任何<br>人，这完全是在自愿的基础上。今天我还要早点回去照顾小孩，你们人数正好合适。”  </p>
<p>阿瓦登的脸色涨红，热的仿佛夏季的电脑CPU，他甚至不敢多看阿尔特弥斯一眼。他憧憬<br>过女性很长时间，但如此接近还是第一次。  </p>
<p>还要回家去照顾小孩子的兰斯洛特向大家道别后就先行离去了，阿尔特弥斯将房间留给瓦<br>格纳与杜拉丝，然后带着惶恐不安的阿瓦登来到了另外一间房间。这间显然是阿尔特弥斯<br>的卧室，屋子里很简单，但却收拾的十分干净，在床上枕头旁还摆着一个手制的布娃娃，<br>床单和窗帘都是粉红色的。  </p>
<p>最初的是由阿尔特弥斯主动开始的，丝毫没心理准备的阿瓦登只是被动地任她摆布。经过<br>了几轮挑逗，阿瓦登才逐渐放开，任由潜藏在自己心内的原始欲望奔流出来，那种期待听<br>到圆润女声的青春憧憬本来只是苦闷生活的意淫，而在今天它加倍实现了。很快这种憧憬<br>与他在现实中被压抑的郁闷合流，转化成了猛烈的冲动，让他一次又一次与阿尔特弥斯融<br>为一体。阿瓦登不知道这种冲动和他想大声说出”FUXKYOU,YOUSONOFBITCH”冲动有什么<br>不同，不过现在不是考虑这个的时候，他现在脑子里想的只有尽情地、全无束缚地让自己<br>释放激情，完全没有任何束缚。  </p>
<p>强烈的刺激一波波地冲击着兴奋中枢，最终一阵快感浪潮在狂暴洋面扬起头来，达到了一<br>个极高的顶端。阿瓦登在那一瞬间感觉到了前所未有的自由，那种轻盈无比的自由，以及<br>因自由而生的快乐与疲惫。浑身是汗的他喘息着倒在了阿尔特弥斯身上，一阵舒畅的倦意<br>如潮水般淹没了他的身体……  </p>
<p>……当他醒来的时候，发现阿尔特弥斯躺在自己身边，赤裸的身体好象一尊白玉雕像，睡<br>姿恬美静谧。他侧过身子去，慵懒地打了个呵欠，然后阿尔特弥斯睁开了眼睛。  </p>
<p>“很舒服，对不对？”她问道。  </p>
<p>“是啊……”阿瓦登不知道该说什么好，他顿了顿，犹豫地说道：”你以前和兰斯洛特、<br>瓦格纳他们也……呃，我是说，象刚才那样子过吗？”  </p>
<p>“是的。”阿尔特弥斯温柔地回答，她半支起胳膊，长发从肩膀披到了胸口。她的大方坦<br>白反而让阿瓦登有些不知所措。屋子里出现了一段时间的沉默，然后阿尔特弥斯忽然开口<br>问道：  </p>
<p>“还记得今天杜拉丝讲的那段故事吗？女主角偷偷递给男主角写着”我爱你”的纸条。”  </p>
<p>“唔，还记得。”阿瓦登回答，很高兴终于能从那个拙劣的话题摆脱出来了。  </p>
<p>“在有关部门的健康互联网络词汇列表里，没有爱这个字呢。在我们这个时代，我爱你也<br>是一个敏感词汇，被屏蔽掉了。”阿尔特弥斯的眼神里似乎是感慨，又象是失落。  </p>
<p>“我爱你。”阿瓦登不禁脱口而出，他知道在这间屋子里可以说出任何自己想说的话，不<br>必顾忌。  </p>
<p>“谢谢你。”  </p>
<p>阿尔特弥斯听到之后只是笑了笑，起身穿上衣服，催促阿瓦登时间差不多了。阿瓦登有些<br>失望，因为她没有预期反应的热烈，仿佛他刚才说的只是有些无关紧要的东西。  </p>
<p>这时候杜拉丝和瓦格纳已经离开了，屋子里只剩他们两个人。阿尔特弥斯把他送到门口，<br>将旁观者交给他，然后叮嘱他说：”记得在外面绝对不要提及说话会的任何事情或者任何<br>人，我们在说话会以外的地方是完全不认识的。”  </p>
<p>“我记住了。”阿瓦登回答，然后转身要走。  </p>
<p>“王二。”  </p>
<p>阿尔特弥斯忽然叫道，阿瓦登连忙转身，还没等他反应过来，两片柔软温暖的嘴唇忽然贴<br>到了他的双唇，然后是一个细切的声音在耳边响起：”谢谢你，我爱你。”  </p>
<p>阿瓦登觉得眼睛有些湿润，他戴上旁观者，推开门，重新步入到那一片令人窒息的世界中<br>去，但他此时已与来时的心境大不相同。  </p>
<p>此后阿瓦登的精神面貌明显有了改善。他谨慎地享受着这种秘密集会的乐趣，并且乐在其<br>中。每一周或者两周，他们五个人都会在周日秘密地举行说话会的活动，聊天，唱歌或者<br>听杜拉丝讲1984的故事。阿瓦登同阿尔特弥斯又”完全交流”了几次，偶尔他也会跟杜拉<br>丝”交流”。他有了两个身份，一个是现实中和网上的阿瓦登，编号19802015，还有一个<br>是说话会里的王二。他很享受这个名字，觉得这就是自己另外的一个人生。  </p>
<p>有一次集会，他们谈到了敏感词汇的问题。阿瓦登记得很早的时候—-他对这方面的记忆<br>有点模糊—-有关部门给出的是一份敏感词汇列表，由网站的内部管理人员秘密参考使用<br>，他对如何演变成现在的局面大惑不解。那一天瓦格纳带了一瓶葡萄酒，兴致很高，于是<br>索性给他们讲了讲”屏蔽”的进化史，身为网管的他经常可以接触到这些资料。  </p>
<p>在最开始美国政府只是单纯地屏蔽掉敏感词汇，但很快他们就发现这样的措施根本没有用<br>处。很多人会采取在词组中夹杂符号或者数字的方式来绕开系统检查；于是有关部门不得<br>不将这些近似敏感词汇也一一屏蔽掉。然而众所周知，数字与符号之间的组合方式是近乎<br>无限的，只要你有想象力，就完全可以组合出一个新的词组而且不失掉他的原意。比如说<br>“politic”这个词，就有”politi&#x2F;c”、”政polit&#x2F;ic”、”pol&#x2F;itic”等近乎无限种<br>表达方式。  </p>
<p>当有关部门意识到这个问题时，他们采取了新的策略。既然无法辨识词组，那么就用单词<br>屏蔽。这一举措在一开始是奏效的，违规交谈的人显著减少，但很快人们就发现可以用同<br>音字或者谐音的方式来继续表达自己的危险思想。即使有关部门封掉全部敏感词汇的同音<br>字，也无济于事，思想活跃的美国人充分发挥了自己的想象力，使用隐喻，借代、类比、<br>引申及其他修辞方法，或者将一个敏感词用数个不敏感的字来代替。人类的思维方式要比<br>电脑开阔许多。电脑屏蔽掉一条路，他们还会有更多的路可以选择。  </p>
<p>这一场水面以下的角力看起来似乎是美国大众要取得胜利。这时候，一个具有逆向思维精<br>神的人出现了。他的身份不明。有人说他是有关部门的主管；也有人说他是因过度使用敏<br>感词汇而被捕的危险人士。无论他是谁，总之整个局面被扭转过来。他向有关部门建议，<br>不再告诉大众禁止说什么，而是规定他们只能说什么，用什么方式去说。有关部门很快就<br>心领神会，制订了新的规章制度：取消了敏感词汇列表，取而代之的是互联网络健康语言<br>列表，并把这举措推广到了日常生活中的语言屏蔽系统中去。  </p>
<p>这一次，大众终于处于下风。以往他们与有关部门尽情地在网络与现实中捉着迷藏，而现<br>在他们却被有关部门扼住了咽喉。这样一来，有关部门可以有效率地掌握住言论，因为整<br>个语言的框架都被彻底控制了。在有限的空间内，大众几乎是无计可施。  </p>
<p>尽管如此，大众还是不屈不挠地将这场战争—-或者说游戏—-继续下去，他们挑选健康<br>词汇列表中的合法字眼来表达不合法的意思：两个连续的”稳定”意思就是”反对”，”<br>稳定”加”繁荣昌盛”则暗示”屏蔽”。美国政府不得不对这一动向保持着警惕，并日复<br>一日地将更多的词汇从健康词汇列表里删掉，禁止大众使用。  </p>
<p>“当然，这场战争会持续下去的。只要世界上还存在着两个不同的字或者词组，那么就可<br>以继续自由交流—-你知道莫尔斯电码吧？”  </p>
<p>瓦格纳说到这里，拿起茶杯一饮而尽，满意地打了一个嗝。  </p>
<p>“可是，这场战争的代价就是语言的失落。表达能力会越来越贫乏，越来越淡而无味，人<br>们会越来越倾向于沉默，这对有关部门反而是好事。”兰斯洛特摆出一副忧虑的表情，有<br>节奏地用指关节敲击着桌面，”这样一来，岂不就等于是大众的自由意识将语言推向死亡<br>的边缘？真讽刺啊。按照这个趋势，有关部门是不会败的，他们会笑到最后。”  </p>
<p>“不，不，笑这种情感他们是不会了解的。”瓦格纳淡淡地回答。  </p>
<p>“我倒是觉得，美国是一直处于恐惧的情感之中呢，生怕人们掌握了太多的词汇，表达出<br>太多的思想，变的难以掌握。”阿尔特弥斯说完摆出一副她在上班期间冷若冰霜的呆板脸<br>孔，学着僵硬的腔调喊了一句：”营造健康的网络环境，美国万岁！”  </p>
<p>杜拉丝、兰斯洛特与瓦格纳都哈哈大笑，唯一没笑的是王二（阿瓦登）。他对于兰斯洛特<br>刚才的那句话始终耿耿于怀：大众与有关部门的对抗，其最终结局就是语言的消亡。那么<br>他们现在这个小小的说话会，也只不过是在一列开向悬崖的列车里关上窗帘，享受坠毁前<br>最后的宁静罢了。  </p>
<p>不过他没有说出口，因为这太煞风景了。阿瓦登不希望破坏说话会的气氛，这对他很重要<br>。  </p>
<p>从说话会回到家里，阿瓦登躺在行军床上，双手枕着脑袋，陷入了沉思。自从加入说话会<br>以后，他变的比以前更容易陷入思考。有时候他想的是这个社会、这个互联网络或者这座<br>城市中存在的荒谬性；有时候他想的是自己的生活；还有时候他想的是阿尔特弥斯。他不<br>知道是不是在一个压抑的世界里，人的情感会变的格外强烈，他现在陷入对阿尔特弥斯的<br>迷恋无法自拔。阿瓦登一直很羡慕杜拉丝讲的《1984》里面的温斯顿，他和朱利亚有一间<br>两个人独处的小屋，一个只属于他们两个人的小世界。  </p>
<p>他在与阿尔特弥斯”完全交流”的时候曾经吐露过自己的心声，阿尔特弥斯没有直接回答<br>，而是表示两个人的关系无法再比说话会更近一步—-维持现在的状态就已经是个人行为<br>的极限，有关部门可不会一直打瞌睡。”我们只能把感情生活压缩在每周一次的说话会活<br>动里，这已经很奢侈了。”她对他说，同时温柔地抚摩他的胸膛。”只有在说话会里，我<br>们才是阿尔特弥斯和王二。而在其他时间里，你是19842015，而我是19387465。”  </p>
<p>对此，阿瓦登只能发出一声轻轻的叹息，确实他不该奢求更多。  </p>
<p>除了感情，发生变化的还有互联网络。自从加入说话会以后，阿瓦登逐渐发现互联网表面<br>下潜藏的一些东西。正如瓦格纳在一次活动的时候指出，普罗大众与有关部门的战争从未<br>结束，总会有思想和言论从严厉管制的缝隙中流泻出来。阿瓦登发现，在完全公式化的<br>EMAIL与网络论坛中其实隐藏着不少耐人寻味的细节，就好象那个title一样，存在着各式<br>各样的密码与隐藏寓意。这些东西出自不同人的手里，样式和破译方式都不同，阿瓦登不<br>知道那些密码背后隐藏的是怎样的内容。不过有一点可以确知的是，说话会并不是唯一的<br>一个地下集会，瓦格纳说的对，始终还是有人在试图用”健康”词汇表达”不健康”思想<br>。  </p>
<p>讽刺的是，给阿瓦登感触最深的，是有关部门的管制。以往他只是模糊地感觉到自己被绑<br>缚起来，现在他能清晰地看清这种束缚与压抑的脉络，以及加诸在自己身上的各种手段。<br>在小小说话会中享受到的自在让他更加深刻地感受到在宽阔现实中的不自在。  </p>
<p>“FUXKYOU,YOUSONOFBITCH！”  </p>
<p>每一次的聚会，三位男士都会轻蔑地一起高喊这一句粗话。他们清楚这不会给有关部门带<br>来什么不良影响，不过这确实很痛快。  </p>
<p>这一周，阿瓦登特别地忙碌，他的同事因为不明原因而被屏蔽掉了，这样一来整个项目就<br>全压在了他一个人身上。这项目是为有关部分设计一种软件，用来控制大功率主动式”旁<br>观者”的能源分配控制。软件很复杂，他不得不每天在电脑前工作十几个小时，只有在身<br>体实在支撑不住的时候才停下来随便吃一点东西，喝一口纯净水，困了就躺在旁边的行军<br>床上睡上一觉，爬起来继续工作。屋子里满是浑浊的烟味与袜子脏衣服的酸臭味，阿瓦登<br>就在这种环境下蓬头垢面地敲着键盘，并不时揉揉满布血丝的眼睛。  </p>
<p>偏偏在这个时候屋子里的暖气坏掉了。洋灰色的暖气片从昨天开始就变的冰凉，不再有热<br>水流动。阿瓦登检查了一下，发现并不是管道问题，而且邻居们也碰到同样的事，看来是<br>供热系统出了问题。这一变故的正面影响是稍微淡化了屋子内的酸臭味，负面影响是整个<br>屋子变的有如冰窖一样。紧闭的窗户和门能挡住寒风，却挡不住寒冷，低温让本来就寒酸<br>的房间更笼罩上一层霜气。无论是那把木椅还是行军床都象是冷酷的冰雕，屋子里唯一还<br>有些热气的就只剩下电脑。阿瓦登不得不披上所有的御寒衣物，蜷缩在床上，把电脑的散<br>热口对准自己。  </p>
<p>有关部门宣布”供热”和”暖气”暂时也被列入敏感词汇，于是阿瓦登没办法写信向供热<br>部门询问，只好静待，除了用来敲键盘的指头以外，尽量保持全身一动不动，以节约热量<br>。在停止供暖后的第四天，暖气片里终于传来”哗啦哗啦”的声音，带着热气的水开始流<br>动，屋子里恢复了温暖，”供热”和”暖气”又可以恢复使用了。于是EMAIL与网络论坛<br>上全都是”庆祝有关部门恢复供应暖气，急人民之所急”的帖子，EMAIL新闻组里也全是<br>类似主题。  </p>
<p>不过这对阿瓦登来说太晚了，他生了病，感冒，而且是重感冒。他面色苍白，全身软弱无<br>力，头疼的象是被一枚达姆弹射入头部，只能躺在床上等医生。医生来到他家里，给他做<br>了两三次点滴，喂了一些叫不上名字的药片，叫他静养。这一场病足足持续了数天，他不<br>得不放弃参加这一星期的说话会，身体状况实在太差了，阿瓦登甚至怀疑自己搞不好会因<br>此而死掉。  </p>
<p>阿瓦登躺在床上，心里懊悔不已，说话会是他唯一的乐趣，现在他却没办法参加。他把头<br>蒙在被子里胡思乱想，瓦格纳这一次会带什么特别的东西来呢？兰斯洛特有没有把两个孩<br>子也领过来？还有阿尔特弥斯，他没参加的话，她会和谁”完全交流”呢？瓦格纳还是兰<br>斯洛特？他还想到了杜拉丝，上一次的聚会里，杜拉丝讲到了温斯顿在秘密幽会的屋子里<br>对朱丽亚说”我们已经死了”，朱丽亚附和着说”我们已经死了”，这时候第三个声音说<br>道”你们已经死了。”  </p>
<p>杜拉丝就讲到这里，就停住了。阿瓦登急切地想知道接下来发生了什么，第三个声音是谁<br>，是党吗？温斯顿和朱丽亚是否会被捕，他们会有什么样的下场？不光是他，阿尔特弥斯<br>也很希望知道后续情节的发展，不过她并没有去追问杜拉丝。  </p>
<p>“让这成为一个悬疑，这样接下来的一周我们的生活都会在期待的乐趣中度过。”她对阿<br>瓦登说，然后两个人继续沉溺于intercourse的快乐。  </p>
<p>“也许他们都会死。”阿尔特弥斯在交流结束后，看着天花板说。  </p>
<p>“也许那只是奥布林的声音，他去探望他们。”阿瓦登安慰她道，但是他的心里也不确定<br>。  </p>
<p>阿瓦登的病持续了十天，然后他终于痊愈了。他痊愈后的第一件事就是从床上爬起来，然<br>后去看墙上的日历：这一天恰好是星期日，说话会活动的日子。阿瓦登已经缺席了一周，<br>这已经令他如饥似渴，甚至做梦都在和他们一起喋喋不休地说着话—-所幸他并没有说梦<br>话的习惯，所以24小时工作的旁观者并没发出任何警报。  </p>
<p>阿瓦登简单地洗了一下脸，用一把有些生锈的剃刀沾着肥皂仔细地刮掉脸上粗硬的胡须，<br>然后咕噜咕噜地刷了刷牙齿，用手和毛巾沾着热水将自己蓬起的乱发压下去。因为生病，<br>有关部门发了一些补贴给他，其中包括两块羊角面包、两瓶姜汁啤酒和一份精制砂糖。他<br>将这些东西都用塑料布仔细包好，揣到宽大的军大衣里，打算带到说话会上去与大家分享<br>。  </p>
<p>今天的天气和往常一样地冷，阿瓦登把自己裹在大衣里，登上前往效率大楼的公共汽车。<br>一路上车厢里的广播重复着”营造健康的互联网络”以及一些优秀网络用户的先进事迹；<br>车厢前面的电子屏幕不断滚动显示着最新的健康词汇列表，一个旁观者自车顶垂下来睥睨<br>着车内的每一个表情呆滞的人。阿瓦登坐在最后一排，望着窗外不断向后移动的建筑物与<br>枯黄的树木发呆。  </p>
<p>车子很快就到达了辛普森大楼附近的车站，阿瓦登下了车，把手放到怀里摸了摸塑料布包<br>着的食物，朝着大楼走去。他在半路无意中抬起头，忽然一阵冰冷的寒流刺入他的胸腔，<br>迫使他停住了脚步。  </p>
<p>有什么地方不对劲！  </p>
<p>他看到了效率大楼的第五层阿尔特弥斯家的窗户发生了一些奇怪的变化。以前阿尔特弥斯<br>家面向大街的窗户总是挂着粉红色的窗帘，而现在窗帘则被扯到了两边，窗户大开，用肉<br>眼可以勉强看到窗玻璃和屋子里雪白的墙壁。假如今天有说话会的话，阿尔特弥斯绝对不<br>会把有屏蔽效果的窗帘打开。而且打开窗户这件事也绝不寻常，在这个城市里的室外空气<br>十分浑浊，几乎不会有人会去开窗换气。  </p>
<p>也就是说，今天并没有说话集会召开，而是发生了另外一些事情。阿瓦登望着那窗户，心<br>情开始变的有些慌乱，他把手从兜里掏出来，叼起一支香烟，把身体靠在一根电线杆旁故<br>做镇静，以免被行人怀疑。究竟说话会发生了什么，为什么这一周停办了呢？要知道，只<br>要还有复数的成员能够出席，说话会就会一直办下去，难道说瓦格纳、兰斯洛特、杜拉丝<br>和阿尔特弥斯同时无法出席？这种概率实在太小了。阿瓦登一边这样想着，一边向四周不<br>安地张望。忽然他看到了一样东西，一个念头霎时占据了他的全部心灵，让他几乎眩晕过<br>去。  </p>
<p>“说话会本周不会有了，以后也不会有了。”阿瓦登嘴唇默默地蠕动着，面如死灰。  </p>
<p>他看到在街道内侧一处不起眼的地方隐藏着一个类似雷达天线的东西，其造型很象是两个<br>背部贴在一起的大碗。阿瓦登心里清楚这是什么东西：这正是他负责软件设计的大功率主<br>动式”旁观者”，这造型他很熟悉。这装置可以主动发射电波去探测人们的声音，并检查<br>其中是否存在敏感词汇。  </p>
<p>这样的装置居然就安放在阿尔特弥斯家附近，那么就等于说话会完全暴露在了有关部门的<br>监控之下。主动式旁观者的强大刺探电波会轻易刺穿她家中的铅质窗帘，把所有成员的话<br>原封不动地传到有关部门耳朵里。  </p>
<p>这是一个划时代的发明，这一技术的突破意味着有关部门可以不再被动地等待警报，可以<br>主动出击去刺探人们在任何时间任何地点说的任何话语。阿瓦登可以想象接下来会发生什<br>么，阿尔特弥斯他们的每一句话都被有关部门记录下来，会有机器统计出到底有多少违禁<br>词汇被他们使用过；然后联邦警察会冲进她的屋子，将正在聚会的成员们都带走，只留下<br>搜查过后空荡荡的房间和窗户。  </p>
<p>阿瓦登想到这里，心如刀绞，他一点也不为自己的侥幸逃脱而感到幸运。他的胃袋翻腾起<br>来，一种恶心的感觉从胃里直接升到嘴边，让他想吐，却又不能吐—-因为”呕”也是个<br>敏感词汇；大病初愈的孱弱身躯无法承受这种打击，象害了风寒一样颤抖起来，几乎站立<br>不住。  </p>
<p>他不敢继续朝前走去，仓皇地转过身去，登上另外一辆公共汽车，把嘴闭的更紧了。等阿<br>瓦登回到自己家楼下，看到楼房附近另外一架新的主动式旁观者正在兴建中，漆黑的天线<br>在半空舒展开来，仿佛一面巨大的蜘蛛网。看来有关部门已经着手在整个纽约市部署这种<br>新兴高科技产品。  </p>
<p>他不敢驻足观看，低着头从那巨大装置旁边走过，一路不停地走回家，然后把自己的脸紧<br>紧地压在枕头里，却不敢哭出声音来，连一句”FUXKYOU,YOUSONOFBITCH”都不能说。  </p>
<p>从那以后，阿瓦登的生活回到了普通状态—-就是说和原来一样沉滞、压抑、欠缺激情，<br>健康向上，缺乏低级趣味。兰斯洛特说过：”战争的结果就是，大众的自由意识会将语言<br>推向死亡的边缘”，现在看来，他的预言是很准确的：说话会的覆灭，导致”说话”、”<br>歌剧”、”完全”、”交流”几个词先后被剔除出了健康词汇列表，成为敏感词汇。  </p>
<p>另外，虽然阿拉伯数字还能用，但”1984”这一个数字组合也被屏蔽掉了，这让包括阿瓦<br>登在内的程序员在编写程序时不得不谨慎地检查数字是否违规，这额外增加了很多工作量<br>，让他更加疲惫。  </p>
<p>阿瓦登不是没有担心过，也许在某一天的深夜，他就会忽然接到一封EMAIL，让他留在家<br>里不要动，不要试图在网络做任何动作；接着电话会响起，电子女声会把这一要求重复再<br>重复，直到警察打开他家的大门，把他带去未知的地方，那里有未知的命运等待着他。《<br>1984》后面的情节发展阿瓦登始终不知道，唯一知道的杜拉丝已经彻底失踪了，所以温斯<br>顿和朱丽亚的结局始终是个谜；就好象兰斯洛特、瓦格纳、杜拉丝和阿尔特弥斯的结局一<br>样，也不从得知。其实这两件事对于阿瓦登来说没什么本质性的区别，所以它们也可以看<br>做是同一个谜。  </p>
<p>其实他最担心的，是阿尔特弥斯。每次想到这个名字，阿瓦登就难以抑制心中的郁闷。她<br>究竟会怎么样，彻底被屏蔽掉吗？如果是那样，那么她在这世界上遗留下来的唯一痕迹，<br>就是一个程序员记忆里的假名而已了。  </p>
<p>说话会消失后三个星期，仍旧风平浪静，没有任何人来找过阿瓦登，他也没收到过任何类<br>似内容的EMAIL，阿瓦登一直在想，也许是他们没有吐露出自己的下落，也可能是因为他<br>们根本不知道—-他们认识的只是一个叫王二的程序员。这个城市里有数以千计的程序员<br>，而王二是个假名。  </p>
<p>因此，生活一如既往地平静。不，确切地说，还是有一点不同的，那就是互联网络健康词<br>汇列表：那上面的词组消失的速度比以前要快的快，每小时每分钟都有词与单字飞快地在<br>名单上消失，阿瓦登不得不花上大量时间去更新列表，以跟紧当前形势。  </p>
<p>与词汇列表更新速度相对的，EMAIL和网络论坛上的东西越来越乏味。因为人们不得不用<br>极有限的词去表达广泛的意思，大家都变得寡言少语。就连那些秘密的暗语和联系方式也<br>少了许多；整个网络就象是前些天阿瓦登家里出了问题的暖气片一样：虽然名义上是给人<br>带来温暖的东西，但却变的冰冷、僵硬，让人如坠冰窟。  </p>
<p>这一天，阿瓦登从电脑前抬起头来，他看了看窗外迷茫的灰色天空，胸口一阵抽搐，不由<br>得痛苦地咳了一声。他拿起塑料杯，将杯子里的纯净水一饮而尽，杯子丢进同样是塑料质<br>地的垃圾桶里，发出钝钝的撞击声，他觉得自己的脑子也是一团垃圾，举起手敲了敲，果<br>然发出同样钝钝的撞击声。  </p>
<p>然后他拿起大衣，戴上墨绿色的护目镜，走出门去。阿瓦登没带便携式的旁观者，那东西<br>已经不需要了，城市里到处都是主动式的旁观者，随时监听是否有违禁词汇的存在。整个<br>纽约现在就象是互联网络一样，被有关部门营造成十分健康。  </p>
<p>阿瓦登这一次外出是有正当理由的，他决定去取消网络论坛服务，这服务已经用不着了，<br>因为无论EMAIL，新闻组，BBS论坛还是其他什么现在全部都变成了一样的东西。  </p>
<p>从日历来说现在应该是春季，但外面还是很冷，高大的灰色建筑矗立在平地上，仿佛绝对<br>零度下的石林。大团大团的风裹着黄沙与废气穿行其间，风沙无处不在，让人置身其中而<br>难以摆脱。阿瓦登把手揣进兜里，脖子缩进领口，畏缩着向网络部的大楼走去。  </p>
<p>忽然，他停下了脚步，惊讶地站在原地无法动弹。他看到阿尔特弥斯正站在前面的路灯下<br>，穿着黑色的制服。可是她的变化有多么大啊，面容象是老了十岁，满脸都是衰老的皱纹<br>，年轻的活力荡然无存；她听到脚步声，转过头来，两个乌黑的大眼睛显得异常空洞，目<br>光越过阿瓦登延伸到远方，没有一个明晰的焦点。  </p>
<p>阿瓦登万万没有想到会在这个时间这个地点碰到她，这让他已经沉寂已久的心灵泛起了几<br>点火花，可惜他迟钝的神经已经无法表达出”激动”这一个简单的情感了。两个人互相对<br>视了一阵，他终于木然走到她身边，张了张嘴唇，想对她说些什么。但是他掏出今天新发<br>布的健康词汇列表，发现上面是一片空白—-终于连最后一个词组也被有关部门屏蔽了。  </p>
<p>于是阿瓦登只好保持着沉默，默默地与面无表情的她擦肩而过，继续向前走去。他的身影<br>逐渐融入同样安静的灰色人群之中，整个城市都显得寂静极了。</p>
<p>– The End –</p>
]]></content>
      <tags>
        <tag>Novel</tag>
      </tags>
  </entry>
  <entry>
    <title>藏书与藏碟</title>
    <url>/blog/2005/11/05/Collection-and-hiding-disc/</url>
    <content><![CDATA[<p>书买了不少，放在办公室的书柜里老是被人家拿走就失踪了，时间长了自己都忘记自己有哪些书了。本来想找过软件来记录藏书资料的，却找着了一个网站 <a href="http://www.listal.com/">www.listal.com</a> ,在线管理自己的book&#x2F;music&#x2F;dvd。而且它能够根据ISBN号自动从 <a href="http://amazon.com/">amazon.com</a> 获取书籍的信息。</p>
<p>我的页面是 <a href="http://aleung.listal.com/">aleung.listal.com</a> ，上面列出的都是英文版的书，其实我英文没有这么厉害，大部分都是中译版，不过为了能够自动取得书籍信息，我都登记了原版书的编号。有空试试把DVD也记录上去。</p>
<p>另外有个个人书籍管理软件<a href="http://songstech.com/elibpro.html">eLibPro</a>，也可以从amazon拿到书籍信息。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Memory allocator影响多线程程序效率</title>
    <url>/blog/2005/11/10/Memory-allocator-/</url>
    <content><![CDATA[<p>在8个双内核CPU的SUN 4900上运行多线程程序居然比起2个CPU的440更慢，发现原因在于memory allocator的问题，缺省的malloc库只适合于单线程，内存操作是序列化进行的。更换了mtmalloc就正常了。另外还有一个选择是用libumem。</p>
<p><a href="http://developers.sun.com/solaris/articles/multiproc/multiproc.html">http://developers.sun.com/solaris/articles/multiproc/multiproc.html</a></p>
<p><a href="http://forum.sun.com/thread.jspa?threadID=24312&messageID=91895">http://forum.sun.com/thread.jspa?threadID=24312&messageID=91895</a></p>
<p>换别的memory allocator也很简单，程序都不需要重新编译，仅仅修改启动脚本就可以了：</p>
<pre><code>LD_PRELOAD=&quot;/usr/lib/libmtmalloc.so&quot; ./_my_application_
</code></pre>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Solaris上使用aio的问题</title>
    <url>/blog/2005/11/20/Solaris-aio-/</url>
    <content><![CDATA[<p>我们程序的IRI backend使用了ACE Proactor作为TCP client的框架，proactor实质上是使用了asynchronous IO(aio)从socket上读写数据。异步IO将速度慢的I&#x2F;O过程留在操作系统内部进行，不会阻塞用户线程，因此在应用中无需使用多线程也可以达到较高的效率。AIO在windows平台上使用比较广泛，称为CPIO。Solaris 9是支持aio的，按理说不会有什么问题，可是我们的程序就出现了很多奇怪的问题。</p>
<ul>
<li>有时CPU占用莫名其妙的很高，即使没有从网络收发数据 </li>
<li>进程的lwp数量会变化，某些时候不断增加 </li>
<li>用truss跟踪程序的时候，CPU就会降低</li>
</ul>
<p>反复检查过程序，都没有发现问题，程序只有一个线程进入了proactor，怀疑是ACE的proactor内部创建了线程，但看过ACE代码，里面也没有spawn线程。而且aio就是为了提高用户线程效率，让单线程可以处理大量并发IO的，没有理由需要再创建多线程。</p>
<p>我们的鬼佬chief architect是hacker出身的，他跟我们一起查找问题，最终找到了原因。</p>
<blockquote>
<p>Some notes for us on AIO to help us better understand:</p>
</blockquote>
<p>[1] <a href="http://sunsite.uakom.sk/sunworldonline/swol-03-1996/swol-03-aio.html">http://sunsite.uakom.sk/sunworldonline/swol-03-1996/swol-03-aio.html</a></p>
<blockquote>
</blockquote>
<p>[2] Keep in mind that any major improvement over standard read&#x2F;write system calls requires the use of multi-processor machines, since AIOs are executed via light weight processes (LWPs). </p>
<blockquote>
</blockquote>
<p>[3] aiorandom syiorandom<br>Both programs read 262,144 data blocks. Each block is 4,096 bytes. aiorandom submits a batch of 30 asynchronous reads at a time. Whenever the number of outstanding AIO operations falls below 15, it submits another batch. Results were recorded from the command timex. </p>
<blockquote>
</blockquote>
<table>
<thead>
<tr>
<th>&amp;nbsp;</th>
<th align="right">aiorandom</th>
<th align="right">syiorandom</th>
</tr>
</thead>
<tbody><tr>
<td>real</td>
<td align="right">42:43.92</td>
<td align="right">1:02:48.68</td>
</tr>
<tr>
<td>user</td>
<td align="right">5:35.57</td>
<td align="right">4:39.38</td>
</tr>
<tr>
<td>sys</td>
<td align="right">5:24.02</td>
<td align="right">2:41.23</td>
</tr>
</tbody></table>
<blockquote>
</blockquote>
<p>For aiorandom, this is a speed-up of close to 30 percent in real (elapsed) time. Note how aiorandom consumed more user CPU time due to the extra work associated with managing the AIO-related data structures. System CPU time doubled thanks to aiorandom running multiple LWPs. Keep this in mind on busy, multi-user systems since heavy AIO applications will depress the performance of other apps. </p>
<blockquote>
</blockquote>
<p>[4]  However, libaio is different; it implements system functions. Depending on the numbers of submitted AIO requests, libaio creates so-called “workers” (as implemented as LWP’s) to process the IO requests. </p>
<blockquote>
</blockquote>
<p>THIS IS WHAT IS KAIO .. [next line]</p>
<blockquote>
</blockquote>
<p>[1]  Solaris 2.5 implements kernel-supported asynchronous I&#x2F;O. The kernel has implemented special, efficient AIO assists for the libaio. </p>
<blockquote>
</blockquote>
<p>[2] <a href="http://developers.sun.com/solaris/articles/thread_pools.html">http://developers.sun.com/solaris/articles/thread_pools.html</a></p>
<blockquote>
</blockquote>
<p>Here is the code from aio.so:</p>
<blockquote>
</blockquote>
<p><a href="http://cvs.opensolaris.org/source/xref/on/usr/src/uts/common/os/aio.c">aio.c</a></p>
<blockquote>
</blockquote>
<p>    394 &#x2F;*<br>    395  * wake up LWPs in this process that are sleeping in<br>    396  * aiowait().<br>    397  *&#x2F;<br>    398 static int<br>    399 aionotify(void)<br>    400 {<br>    401  aio_t *aiop;<br>    402<br>    403  aiop &#x3D; curproc-&gt;p_aio;<br>    404  if (aiop &#x3D;&#x3D; NULL)<br>    405   return (0);<br>    406<br>    407  mutex_enter(&amp;aiop-&gt;aio_mutex);<br>    408  aiop-&gt;aio_notifycnt++;<br>    409  <strong>cv_broadcast(&amp;aiop-&gt;aio_waitcv);</strong><br>    410  mutex_exit(&amp;aiop-&gt;aio_mutex);<br>    411<br>    412  return (0);<br>    413 }</p>
<blockquote>
</blockquote>
<p>If the application uses a third party library that implements asynchronous operations, this may not be the best solution. This is because of the “anonymous” nature of aiowait(), which returns the result of any asynchronous read or write operation. And if a third party AIO library is used in the application, this means that aiowait() could return result sets of the third party library AIO calls as well. Due to obvious interface disparities, this could lead to unpredictable behavior. </p>
<blockquote>
</blockquote>
<p>.. i find out some very interesting things about the aio … especially<br>the CPU usage being high is very normal .. good if you want<br>to make a high capacity&#x2F;performance server that will run on<br>its own on a SMP machine .. then aio gives a very strong<br>efficiency and raw performance .. but use extra CPU because<br>the process have very high granularity of checking all async<br>operations .. much higher than a user space thread .. </p>
<blockquote>
</blockquote>
<p>however this kind of server will hog CPU and if used in a mixed<br>environment with many other systems on same host will not be<br>a good solution .. also such process have no ability to define<br>filters on the async events they listen for .. they will always get<br>interrupts from any kind of asynch event in the system . .then<br>have to go through that array of 1024 pointers and check if any<br>of the non-null pointers in there will contain an event for them ….<br>(thats why if you connect truss -p the CPU goes down .. all sigs<br>are blocked for a process inside truss) </p>
<blockquote>
</blockquote>
<p>the behaviour with CPU etc. that we see in ismapserver seems<br>quite ‘normal’ for the aio .. from what i can read the last days and<br>from what you can see in the solaris os code. (you can also look<br>in kernel.c and condvar.c) </p>
<p>看来aio并不是那么好用，对于我们的程序而言，IRI接口的网络吞吐量并不是瓶颈，而且我们的程序本来就是多线程程序，其实并不需要使用aio。程序中的其他网络接口使用的TP Reactor（基于多线程，select）就工作得很好，效率也远超出需求了。对于IRI backend，甚至用一个线程收一个线程发就够了，因为不需要处理太多connection，线程数量在这里不是问题。</p>
<p>还是应该遵循用最简单的方法来解决问题的原则。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>网络上的杀人游戏（原名：F2F—面对面）</title>
    <url>/blog/2005/11/28/The-network-of-killing-game-formerly-known-as-F2F-face-to-face-/</url>
    <content><![CDATA[<p>不要以为我说的是流行的杀人游戏，虽然也有人将这个游戏搬到网上来玩。我下面要贴出来的是一部小说，原名是F2F(face to face)，可能是译者觉得“网络上的杀人游戏”这个直白的名字更加让人容易了解小说的内容。</p>
<p>我读到这小说的中文翻译是在1997年春节，是清华大学的一个同学给我的。（那时还不知道有杀人这种游戏）。当时同学叫我不要传出去，因为译者可能想要出版。今天整理旧文件的时候把这个document翻出来了，google上搜索一下，没有找到任何相关的资料，看来书是没有出成。都过了那么久了，不忍心让它埋没了，把它贴出来共享一下。在此向翻译者致敬（抱歉我不知道他的名字）！</p>
<p>这小说有一定年头了——相对日新月异的网络发展速度而言，小说中所说的网络不是现在大家熟知的Internet，而是由一个个拨号BBS站台组成的网络，网友通过model拨号登录到本地的BBS上传下载信件或文件，异地的BBS之间会定时交换信件。我读这小说的时候，正在玩FIDO NET，所以对小说的背景相当熟悉，感觉小说很吸引人，不知道现在的读者还会不会有这样的感受了。也藉这篇小说，怀念一下CFIDO上的岁月。</p>
<hr>
<p>网络上的杀人游戏</p>
<p>（原名：F2F—面对面）</p>
<p>作者：Philip Finch</p>
<p>    当入侵者在午夜至黎明期间那段最为沉寂的时间里悄然而入的时候，她正处于熟睡之中。<br>    这女人一人独居。离她睡觉的地方几英尺远有一个小小的角落，她把这角落当作办公室，在那里一台个人电脑和一台激光打印机占据了桌面上的大部分空间。<br>    那台电脑嗡嗡地响着，几乎是悄无声息地，这是关在电脑硬盘驱动器里的盘片旋转时所发出的声音以及一台小冷却扇的呼呼声。<br>    一根延伸导线把电脑的调制解调器与一部电话的插口连接在一起——入侵者就是从这里闯进来的。<br>    大约凌晨两点的时候，一个电话呼叫悄悄地连上了电脑。但这女人却没有察觉这一举动，因为它太不令人注意了，只不过是一盏小红灯的闪烁和硬盘极为微弱的滴答声而已。<br>    有人在使用电脑。有人通过这根导线从几英里之外来到这里，并控制了这台电脑。女人仍在熟睡。<br>    她已经完全接受了电脑这一概念。她认为，电脑真是个神奇的东西。她为自己的电脑找了几十种工作，从通信联系到分析饮食、平衡支票簿和支付账单。<br>    与此同时，她还把自己生活中的一些最隐秘、最突出的细节都信任地托付给了它。这些是她储存在电脑硬盘上的秘密，她相信它们在那里是很安全的，可以躲开那些探询的目光。<br>    入侵者当即开始工作，游览盘上的目录，拷备文件——吞噬着她的秘密。<br>    自始至终，只有驱动器发出的呼呼声和轻轻的滴答声。<br>    接着，大约十五分钟以后，一切又恢复沉寂。连接被中断了。<br>    这女人仍沉浸在睡梦之中，一点都没意识到——从某种最真实的意义上说——她已经被人强暴了。</p>
<p>序曲</p>
<p>SNOWFLAKE<br>(雪片)</p>
<p>3月24日—25日</p>
<p>警告</p>
<p>    你的生命正处于危险之中。当你看到这则消息的时候，凶手对你已伸手可及。死亡就站在你身后，默不作声，而且你也看不到它。在任何时候，当它伸手拍你的肩膀时，你的后脖子就会感觉到它那冰冷的呼吸……</p>
<p>    不久之后，看到这条消息的某个人将奇怪而又恐怖地死在我的手中。（也许就是你！）</p>
<p>    你告诉自己：这不可能。不会是我。</p>
<p>    因为你相信对方并不知道你，也注意不到你。你感觉得到你与制造这条消息的人之间的距离缓冲区。你的隐私给你以安慰。<br>   <br>    但是，没有缓冲区。这段文章到了你那儿这一事实已经证明：不管你在哪儿，我都可能在那儿。</p>
<p>    至于隐私，它已不再存在。为了便利我们已经把它给牺牲了，它是我们献给“电子老爷”的煮熟的供品。你的被数字化了的细节都在公用区内，任何人，只要稍微有一丁点的智力和专业知识，都可以得到它。你暴露无遗。对我而言，你就象一个被绑在床角的四根立柱上脱光了衣服的妓女一样毫无遮掩。闲来无事的时候，我将研究研究你。我将仔仔细细、不紧不慢地把你解剖开来，检查检查，然后将你大卸八块。你完全处于我的摆布之下。<br>   <br>    我认识你。</p>
<p>    知识就是力量。</p>
<p>    力量是我的。</p>
<p>    你无法躲藏。</p>
<p>    有何反应？</p>
<hr>
<p>    三月份最后一个星期的星期五晚上七点四十八分，杀手如是宣告了他的到来。他把文件传送——或叫“上载”——到Verbum电子交换机的公告牌内。<br>    Verbum是电脑用户可获得的几千种在线服务之一。有些服务，象Compuserve和Prodigy这样的商业巨人，是巨大的数据和信息市场，它们服务的是成百上千万的付费用户。<br>    Verbum远没有如此庞大的规模。它是一种免费服务，由圣弗朗西斯科的一家社会研究基金会赞助，这家基金会又是靠一群非正式的软件作家和其他一些人的捐赠来运行的——而这些人的成功则归功于电脑和电子革命。然而对于在线鉴赏家来说，它是一个颇受欢迎的聚会场所。其用户总的来说都受过良好的、至少说相当足够的教育，而且年龄都在五十岁以下。他们中几乎所有的人对未来的电子时代都充满热忱，并且自信地认为，在那个时代里，他们能拥有自己的一席之地。单就这一特征便把他们同大多数人分离开来。<br>    从物质的角度来说，Verbum是位于圣弗朗西斯科南市场区的这家社会研究基金会的办公室里的一大堆硬件组成，它与84根电话线连接在一起。有一半以上的Verbum用户是圣·弗朗西斯科地区的居民，对他们来说，这项服务只不过是打一次市内电话而已。但是从某种意义上讲，象Verbum这样的网络使地理学的有些概念变得有待进一步商榷了。对任何人，只要有电脑和调制解调器，那么在线网就跟离他最进的电话机的插口一样远。<br>    Verbum每周要记录大约800条登录信息——通过外部电话线路的单独进网信息。用户在Verbum的电子系统里碰头，他们通过计算机键盘在那里闲聊、争论、演讲、猜测，以及调情。<br>    发布到公告牌及网络里其他任何地方的消息都既不用经过检查，也无需获得批准。Verbum被认为是一个真正开放的媒体。其唯一禁止的是不准发布受专利保护的材料——这有法律上的原因。<br>    虽然几乎所有的在线服务都允许非正式的绰号，即所谓的“登录名”，但大多数都要求用户登记他们的地址和真实姓名。<br>    而Verbum却没有这样的要求。许多用户的确注册了，这样他们就能获得选定登录名所特有权利，而且能使用一个电子邮件箱来接收和保存自己的个人信件。然而，即使是注册用户有时也用新的登录名登录，装扮成不同的角色，以不为人知的新加入者的身份漫游整个系统。<br>    从本质上讲，Verbum是一个庞大的化装舞会，任何人都可以随心所欲地进出，或者更换服装。<br>    因此，“雪片”的身份根本不可能查明。<br>    Verbum的记录只会显示他对网络的拜访只持续了不到两分钟的时间，仅够他登录和发布这条消息。<br>    “雪片”可能在任何地方。<br>    “雪片”可能是任何人。</p>
<hr>
<p>    Verbum的公告牌是其非常受欢迎的区域。至少从表面上看，“雪片”的警告很象经常出现在那里的许多其他恐吓性的邮件。它没有引起任何警觉。<br>    开始，有五个用户对此警告作出了反应。尽管他们的邮件是寄给“雪片”的，但它们被发送到公告牌中，从而对每个人都是开放的。<br>    致：雪片<br>    自：Joyboy(欢乐男孩)<br>    让我说明这点吧：你打算杀死某人，于是你事先把这消息告诉给全世界的人。<br>    对。就是这样。<br>    另外，让我再给你提一点点文字上的评论吧。我是指“死亡就站在你身后，默不作声，而且你也看不到它。”这句话，你是不是有点紧张过度？<br>    顺便说一下，你的登录名取得很好。你差一点蒙对了。只要去掉第一个字，用“片”就完美无缺了。</p>
<p>    致：雪片<br>    自：DeeTeeDude<br>    我知道你。你暴露无遗。<br>    去你妈的吧！！！</p>
<p>    致：雪片<br>    自：Chaz<br>    你是典型的毫无道德观念的社会垃圾，你们这些人污染了这个不管怎么样还算公正的设施。我建议成立一个特别检查委员会以制定出一个程序，在这些东西进入体面而又易受影响的中央处理器之前对它们进行甄别检查。<br>    不过说句公道话，我必须承认我对那个被剥光了衣服的浪荡女人的形象比较感兴趣——四肢被缚，让人悠闲地探查着。这还真的激起了我的欲望。</p>
<p>    致：雪片及Chaz<br>    自：Portia<br>    我提醒你们俩：今日性别歧视的蠢猪便是明日餐桌上的猪排。</p>
<p>    致：雪片<br>    自：Avatar<br>    这是个相当有趣的公告。关于隐私，你提出了些精妙的见解。我们真的很脆弱，很容易受到伤害。而且我确信，在某个时候，某个地方，某个人将会正如你所描述的那样利用我们的这一弱点。<br>    但你是那个人的可能性极小。<br>    你说到了，但你能做得到吗？</p>
<p>    这些答复大都用一种嘲弄的语气，这是很正常的。Verbum的严肃认真的用户们对孩子气极少有耐心。在网络上的大熔炉里，“雪片”被众人的怒火淹没了。<br>    第二天早上五点四十八分，“雪片”第二次登录进入Verbum。他当即去公告牌，在那儿浏览寄到他名字下的邮件。<br>    几分钟以后，他向网络“上载”了他的第二个文件。</p>
<p>    致：发怒的人们<br>    自：雪片<br>    请允许我作出答复。<br>    DEETEEDUDE—你的挖苦是插在我心口上的一把尖刀。对你的好意，我将不得不作出回报。<br>    PORTIA—当切肉刀落下来的时候，请记住：是你提出屠宰场这个比喻的。<br>    CHAZ—很好的玩笑。你可以说就是为此而死的。<br>    JOYBOY—过度紧张？等着吧——你会有好戏看的。<br>    AVATAR—我将把它当作一个友好的挑战。你可以亲自来衡量我的努力，我相信你不会失望的。<br>    你深思熟虑的答复真令人精神倍增。<br>    不幸的是，它并不能让你免除灾难。同其他人一道，我已经注意到你了。</p>
<p>    “雪片”并没有马上离开系统。他保持在线状态，停留在公告牌里。<br>    几分钟以后，系统收到一份新的邮件。<br>    致：雪片<br>    自：Ziggy<br>    请到此为止吧！对善意的恶作剧大家都会喜欢的，但你给它注入了一种凶杀色彩，在这块公告牌上没有它存在的地方。因为你干得太好了，因而使得这个玩笑更加令人感到不安。<br>    很显然，你是个非常聪明而且很有才智的人。你能干出比这令人不愉快的游戏要好得多的事情来。它对你自己的能力、对这美好的资源都是一种浪费。</p>
<p>    “雪片”立刻作出了答复。这时候网上的用户较少，“交通”比较通畅，所以Verbum的高级计算机——一台Sun Sparcserver 1000——能够几乎是同时把他的回复发送到公告牌中。“雪片”和Ziggy便开始了一场艰难的谈话。<br>    致：Ziggy<br>    自：雪片<br>    这不是玩笑。</p>
<p>    致：雪片<br>    自：Ziggy<br>    也许我们应该聊聊。“论坛”？</p>
<p>    Ziggy建议使用Verbum最受欢迎的服务之一—“论坛”。在论坛里面，他们可以进行“实时”交谈。这就是说，他们每个人敲击键盘的情况都会立即在对方的显示器屏幕上出现。<br>    其他人可以加入到谈话中来，发表自己的评论。事实上，Verbum将为Ziggy和“雪片”之间的商谈设立一个电子会议室，其大门对其他任何人都是敞开着的，大家可以参与讨论。<br>    致：Ziggy<br>    自：雪片<br>    我们到“后频道”吧。</p>
<p>    这也是一种联系，但它仅局限于两个人之间的联系。其他用户都不能偷听。事实上，“雪片”是在建议他们俩到房间里面去，然后将身后的门锁上。</p>
<p>    致：雪片<br>    自：Ziggy<br>    为什么去“后频道”呢？</p>
<p>    致：Ziggy<br>    自：雪片<br>    我想说，我是个属于那种害羞而又内向的类型的人。</p>
<p>    Ziggy有三分多钟没有说话。<br>    致：Ziggy<br>    自：雪片<br>    还在那儿吗？</p>
<p>    致：雪片<br>    自：Ziggy<br>    好吧，去“后频道”。</p>
<p>    他们各自离开公告牌，然后申请单独联系，这种联系很快就给自动建立起来了。<br>    从电子学的意义上讲，“雪片”和Ziggy现在面对面地相见了。<br>    SNOWFLAKE&gt; 你是个女的。<br>    ZIGGY&gt; 我的性别跟这没什么关系。<br>    SNOWFLAKE&gt; 你要是男的就不会承认。对，肯定是个女的。而且还有一点，你表现出一种女性的委婉，介入时的一种女性的犹豫不决——一种女性的警惕。这很好。<br>    ZIGGY&gt; 为什么这么说？<br>    SNOWFLAKE&gt; 警惕性是很必要的。外面是一个冰冷、残酷的世界。这里面也一样。尤其是现在我已决定要证明自己。<br>    ZIGGY&gt; 别再开玩笑了。没有人觉得好笑。<br>    SNOWFLAKE&gt; 我再重复一遍：这不是开玩笑。可是你却不相信我。<br>    ZIGGY&gt; 就假设我的确相信你吧。你愿意谈谈它的情况吗？<br>    SNOWFLAKE&gt; 不过你最好问些令人感兴趣的问题。<br>    ZIGGY&gt; 你为什么想杀人？<br>    SNOWFLAKE&gt; 因为生命一钱不值。<br>    ZIGGY&gt; 为什么要杀Verbum上的用户？<br>    SNOWFLAKE&gt; 以示强调，使其更加引人注意。以证明可以通过网络来杀人。而且，这上面有许多思维敏捷的聪明人。我对聪明人特别感兴趣。<br>    ZIGGY&gt; 你不喜欢聪明的人吗？<br>    SNOWFLAKE&gt; 一点也不。——他们让我觉得好笑。他们总是自以为是地认为他们对天下万物无所不知。<br>    ZIGGY&gt; 但是你也很聪明。<br>    SNOWFLAKE&gt; “聪明”这个词根本不能用来形容我。<br>    ZIGGY&gt; 啊，你属于由你一个人组成的一类。一个真正的大智大慧的智多星。<br>    SNOWFLAKE&gt; 事实就是这样。如果愿意，你应该接受这点。<br>    ZIGGY&gt; 你打算怎样实施这次行动？<br>    SNOWFLAKE&gt; 你这是要我破坏一些伟大的惊奇。<br>    ZIGGY&gt; 一些？用复数？<br>    SNOWFLAKE&gt; 我并不限定数量。<br>    ZIGGY&gt; 我猜测你只不过是想通过这个系统找到受害者然后实施谋杀而已。<br>    SNOWFLAKE&gt; 这离实际情况比你可能想象的要近得多。这个网络将一直服务到那最后的致命的一击到来的时候。接下来是手工工作所必需的身体接触。<br>    ZIGGY&gt; 你怎么能接触到我们？在这里我们用的都是匿名。<br>    SNOWFLAKE&gt; 隐姓埋名只有在被人发现以前才会起作用。<br>    ZIGGY&gt; 我不怎么喜欢你。我希望你离这个网络越远越好。<br>    SNOWFLAKE&gt; 非常抱歉，这种情况不会发生。实际上，我倒想向你提同样的建议。<br>    ZIGGY&gt; 我为什么要远离这个网络呢？<br>    SNOWFLAKE&gt; 因为它已成了一个很危险的地方，还因为你这么容易上当。<br>    ZIGGY&gt; 别告诉我象你这样有着超凡智力的人会去戏弄一个容易上当受骗的人。<br>    SNOWFLAKE&gt; 这是你的第二个警告。这两个都是大多数人在有生之年难以得到的忠告。<br>    ZIGGY&gt; 我要结束这次谈话了。<br>    SNOWFLAKE&gt; 毫无疑问，在这么长的时间里，你终于产生了最为正常的冲动。但是它来得太晚了。<br>    ZIGGY&gt; 为什么这样说？<br>    SNOWFLAKE&gt; 因为你已经被发觉了。</p>
<p>    这个用“Ziggy”作为登录名的年轻妇女以一种不同寻常的方式终止了她与“雪片”的联系——她把手伸过桌子，关掉了计算机的电源。<br>    她看着显示器的屏幕渐渐变成灰色。计算机里低沉的背景嗡嗡声也逐渐消失了。<br>    她在Verbum和其他在线服务设施上已登录了成千上万个小时，她还从来没有象这样如此突然——如此粗鲁地退出讨论。但“雪片”逼她这样干：她感到一种强烈的直觉——离他越远越好。关掉开关立即将他从她的世界里清除掉了。<br>    至少她是这么认为的。</p>
<hr>
<p>    在失去与Ziggy的在线联系后不久，“雪片”也退出了Verbum。然后他立刻又重新进入这项设施，这次是通过一个没有公开的电话号码进去的，这个号码是系统的主管者为了特殊的用途而保留的。虽然这样的号码只限于特定的人，但是通过一定程度的执着，一些精明的人有可能发现它们。<br>    当他接上网络时，计算机的操作系统要求输入一个口令。这些口令也同样能被那些有一定程度的执着精神——以及一定程度的狡诈——的精明人士得到。<br>    “雪片”输入一个含七个字符的字符串，计算机便允许他进入。<br>    这次没有问候。他已经经过所有的公共屏幕，进入了系统自身内部。<br>    他着手工作，利用计算机的操作工具程序寻找在过去14小时内发布且含有“雪片”这个词的每一条信息。<br>    更改或消除Verbum计算机上的文件的内容需要最高级的使用权限，即所谓的“根用户”或“超级用户”身份。“雪片”使用的口令并不准许他那些特权。<br>    然而，他能够改变系统用以识别每条上载邮件的电子标签。这种信息包括邮件进入系统的日期和时间。<br>    “雪片”改变了计算机为他提取的所有文件的日期。这些包括他发出的每份信件以及别人对此作出的所有答复。他把这些文件的日期都改早了，这样它们看上去比实际要“老”一个星期。<br>    六点五十六分，他退出系统。</p>
<p>    每天早上一到七点，Verbum功能强大的主机便开始进行两项管理家务的工作。<br>    其中第一项工作是流览寻找在过去二十四小时内发送的文本文件，然后把它们拷备到磁带上，以后Verbum的技术工人会把这些磁带放入贮藏室内。<br>    这些文件是Verbum之所以存在的一个主要原因。从某种意义上说，这一网络已被认为是一个永不间断地进行着的社会试验。赞助基金会的主管者相信，总有一天这些磁带记录将为以后的研究者提供一幅二十世纪最后十年中的计算机用户不断发展的、全面的画像。<br>    这天早上，当它寻找新的邮件时，系统主机跳过那些日期已被“雪片”改早的。他所发布的邮件以及他收到的答复都没有被拷备到记录磁带上去。<br>    然后，主机开始执行它的第二项日常工作。在浏览目录的时候，它已经把所有上面的日期已存在一星期以上的文件都作了记号。这天早晨，这些文件包括那些日期已被“雪片”更改过的邮件。<br>    接下来删除所有作了记号的文件，以执行Verbum“任何邮件在系统里存放的时间都不得超过一个星期”的规定。登时，任何提及“雪片”的东西都从系统里消失了。</p>
<hr>
<p>    “雪片”已不复存在。但是七点刚过不久，曾使用这个登录名的人又通过Verbum的公用电话线路进来了，他这次用了个不同的登录名登录。<br>    他编了个“机器人”——文件名为“BOT”(机器人)的程序，这个程序能自动拨号登录进入Verbum。一旦上了网络，这个“机器人”的表现就很难同人的表现区别开来。<br>    它的使命是监视几个登录在Verbum里的用户。它会跟踪这些目标；会拷备他们的信件，以便“雪片”以后阅读。如果目标进入“论坛”，只要他呆在里面，“论坛”里的所有活动都会同样被自始至终地记录下来。<br>    为避免引起别人的注意，“机器人”的指令要求它每次保持在线的时间不得超过一个小时。一小时后，它就会退出来，然后重新拨号，用新的登录名进入网络，继续监视系统。如果有人向它打招呼，“机器人”甚至能进行基本的会话。<br>    “机器人”程序使“雪片”几乎能不间断地监视Verbum，甚至睡觉的时候。他的目标是他在程序的指令集里键入的六个不同的登录名。<br>    这六个登录名是：<br>    CHAZ<br>    DEETEEDUDE<br>    AVATAR<br>    PORTIA<br>    JOYBOY<br>    ZIGGY</p>
<hr>
<p>    罗贝塔·赫金斯在Transbay汽车站叫了辆出租车。司机是个墨西哥人，也可能是危地马拉人，或者萨尔瓦多人——不管怎么样他肯定刚来这个城市不久，当她告诉他要去的地方——Kearney那边的Telsa大街时，她可以从他脸上困惑的表情看出这一点。<br>    “哪？”他问。<br>    “电报山。”她说。<br>    他想了一下，一会儿脸上就开朗了。他抬起右手，向上旋转着地比划着；这种螺旋式的运动直到他碰到出租车的车顶才停止。他比划的是去那儿的路线。<br>    “对，亲爱的。”她说，于是他加大油门驶上Fremont大街。<br>    路上交通很拥挤。此时七点刚过，正是早晨上班高峰快到达最高点的时候。这次她比平时早了几个小时出发。她从来没有对埃利斯·霍伊尔说过她会迟到。她知道他是不会介意的。他甚至不会注意到她迟到了。白天的时间对这个人来说毫无意义。<br>    司机还是真的知道怎么走。他从Fremont大街开到Folsom大街，沿Folsom大街驶过几个街区，然后向左拐上Embarcadero大街，从车流中一路穿插而过。<br>    她的右面是海湾，从码头上一长溜棚屋的狭小缝隙中可以不时地等到它。她的前上方便是科伊特塔——一个圆柱形矛一样的水泥建筑物，从电报山山顶上葱郁的树林中耸然而立。<br>    埃利斯·霍伊尔的房子就在塔的正下方，从这里她能看到它嵌在其他建筑物之间，这些建筑物紧紧挤在一起附着在山的斜坡上。<br>    她引导司机离开Embarcadero大街，上了迷宫一样的山坡。这里的街道又陡又窄，房子都肩并肩地挤在一起，几乎到了人行道旁边。<br>    这周围一带曾经是意大利渔民居住的地方，他们每天早上走下山去上船。一家独用或两家合用的房子排列于街道两旁。但是在过去的三十年里，许多老房子都被集体公寓和单元楼代替了。这些矮矮胖胖的立方体占据了它们的每一寸建筑面积。<br>    当出租车爬上泰斯勒大街时，街上非常寂静。街道很窄，上面经常挤满了停放的车辆。上了一半，她对司机说，好，就是这儿。他们正前方是科伊特塔，高耸入云。<br>    好付了车费，然后在E的房子前下了车。从这里看上去，它并不怎么象一间涂着白灰泥的小平房。窗上安了窗条，百叶窗是关着的，象平常一样。<br>    罗贝塔从钱包里找出钥匙打开大门。门是用坚实的硬木制成的，有几英寸厚上面擦得放亮——这是扇很华丽的门，也是第一个迹象表明它可能不是你所想象的那种涂着白灰泥的平房。<br>    她进了屋，把身后的门关上。屋里一片漆黑。<br>    她打开灯。大门后面，不是你所想象的那样是个起居室，而是一个宽敞的阳台，它增加了房子的宽度。在正前方，阳台的边缘，是一扇可俯览全景的窗子。<br>    窗上的帘子经常是拉上的。<br>    罗贝塔开始从阳台的一头沿着黑色的铁楼梯下楼去。这房子是沿着电报山的山坡往下建造的。下面一层显得更加宽敞，从街道水平面下来你就进入了主要生活区——要是你能叫它“生活”的话。但埃利斯·霍伊尔的确生活在这里。<br>    下到楼梯底部的时候，她闻到咖啡的香味。下面更加阴暗。这里唯一的光线是计算机显示屏幕发出的微弱的光芒。埃利斯·霍伊尔眼睛盯着屏幕，指尖停留在键盘上，这微弱的光线正照在他的脸上。他三十多岁的光景，头发凌乱，胡子有两天没刮了。看上去他又干了一整个通宵。<br>    他甚至看都不看她一眼。屏幕上的东西吸引了他的注意力——他的注意力总是被这些东西吸引着。<br>    他正坐在他的小安乐窝里。她不知道还能叫它别的什么。在房间最里面的另一扇风景如画的大窗子旁边——要是换了别的任何人，他都会在那儿放上几张沙发和一些椅子，向外朝着这些风景——埃利斯·霍伊尔放了六张桌子，摆成马蹄形状。他的转椅就位于U形正中。<br>    桌面上堆满了东西。首先是计算机，三台计算机和显示器，还有一台打印机、一台传真机、一台复印机，以及她叫不出名字的电子设备。除此之外，还有一堆堆的纸张、书籍和手稿，它们堆得高高的，以至于几乎形成三堵墙壁把埃利斯·霍伊尔围在里面。小安乐窝。桌子外面更是一架子一架子的电子设备、摄像机、精巧的小机械、磁带，以及这些东西的零部件。<br>    她在下面又开了几盏灯。他的眼睛始终没有离开过屏幕。他理应知道是她在这儿，但他只是象往常一样出神地盯着显示器，牙齿咬着下嘴唇。<br>    说得客气点，他是个不合群的人，她这样想。她又对自己说，这实际上使她的工作变得更加容易，因为和埃利斯·霍伊尔在一起她不用在寒暄上浪费时间。而且，他是个异常聪明的人，你不得不宽容一点。<br>    但被这样忽视仍使她感到不安。过去的六个月中，她每周两次到这儿来给他打扫房子、洗衣服、甚至做些饭——他的前妻非常急切地雇佣了她，她希望他在离婚后仍能正常地生活。<br>    她对自己说，到现在她应该已习惯了他的这种奇怪的方式；但她又想，他待她应该更好一点。<br>    她走进厨房，给他倒杯咖啡，在面包盒子里找了块蓝莓甜饼放在碟子上。她把咖啡和甜饼用一个托盘给他送去。放在靠近他肘部的一堆较低的书上。<br>    此时他的手指正在键盘上飞快地跳跃着。<br>    她正准备转身回厨房的时候，她注意到窗帘四周的边缘有一道窄窄的光线，象涂了奶油一样。她不能再无动于衷：这间黑屋里的那可怜的一丁点银白色的阳光令她激动。<br>    她作了从她第一次见到这地方起就一直想作的事情。<br>    她绕过桌子走到窗前，抓住窗帘，然后向一拉。屋里登时大亮。<br>    罗贝塔·赫金斯站立在窗前，外面的景色尽入眼底。跨过水面她可以一直看到东海湾。前面正前方的海湾大桥通往奥克兰，桥的上层不时闪烁着汽车挡风玻璃反射的阳光。向Alcatraz方向望去，一只红白相间的渡轮正乘风破浪驶向马林县。近一点的是码头、Embarcadero大街和渔港，它们看上去象一堆玩杂技的小道具；再近处是正在山脚下的住房、单元楼和办公楼的窗户，看上去几乎触手可及。<br>    她又得抑制住自己的冲动，问问他愿不愿意跟她把房子换一段时间住住，自从遇到埃利斯·霍伊尔起，这也许是第一百次了。她想对他说，嘿，黑房子都是一样的，我在M.L. King Parkway为你找一间三居室的房子，绝对好，你可以给窗户都钉上木板，这样就觉得自在了，你将会象生活在贝壳里一样开心。<br>    她转身离开了这美好的景色。<br>    埃利斯·霍伊尔的眼光终于离开了屏幕，正扭头看着她。看上去他似乎觉得有点好笑。脸上挂着淡淡的笑容：只要打扮得整整齐齐，他也不难看。<br>    “你好，赫金斯夫人。”他说。<br>    “嗯，”她答道。<br>    她走进厨房，开始检查放在柜台上的食品盒。埃利斯·霍伊尔叫人把食品送来了。她每周准备两次食物，把它们保存在冰箱里。他并不挑剔，任何能合适地放在玻璃盘中而且他可以放入微波炉里的东西他都不在意。<br>    她在水池里把脏碟子洗了洗，把食品放好，然后开动洗碗机。她又回到了大房间里。<br>    里面又是一片黑暗。埃利斯·霍伊尔用窗帘把他那价植连城的风景盖上了。<br>    他又钻回小安乐窝，回到那令人生厌的光芒之中。她站在那看了他一会儿：他又一次盯着屏幕，手指敲着键，停一会儿，再接着敲。他看上去很高兴——以一种奇怪的方式。<br>    她想，你要是用这种方式寻找乐趣，那么你肯定是个很不同的人。<br>    但埃利斯·霍伊尔就是这样的人。他在许多方面都与众不同。  </p>
]]></content>
      <tags>
        <tag>Novel</tag>
      </tags>
  </entry>
  <entry>
    <title>C++中生成格式化字符串方法的性能比较</title>
    <url>/blog/2005/12/02/C-/</url>
    <content><![CDATA[<p>在C++中进行格式化字符串的生成，通常有两种方法。一种是C风格的，使用sprintf生成格式化字符串，用str系列字符串函数进行字符串（实际是内存buffer）的拼接、拷贝等操作。另外一种是C++风格的，用string stream类通过流操作来生成格式化的字符串。</p>
<p>在使用上，两种方法各有长短，在这里不作分析。我发现的问题是string stream的效率相对C的方法效率比较低。</p>
<p>编写了两个程序做对比测试，都是模拟写日志文件的操作，往文件里面写入特定数量的文字信息，每行包括了字符串、整数，分别使用两种方法生成同样的内容。为了避免代码其余部分造成的影响，使用rational quantify采集运行的时间信息，只比较生成格式化字符串部分的代码运行所占用的时间。做了多次测试，结果都表明，C++风格方法的耗时是C风格方法的3倍。</p>
<p>结论是string stream的效率相对sprintf要低，实现同样的功能耗时大概是3倍左右。其实STL慢是很正常的，毕竟复杂很多，只是没想到慢这么多。其实大多数应用中，这也不算什么问题，毕竟现在的处理器能力这么强，只有在对性能要求极端严格的场合才需要把这因素考虑进去。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>ACE concept map</title>
    <url>/blog/2005/12/03/ACE-concept-map/</url>
    <content><![CDATA[<p>ACE(The ADAPTIVE Communication Environment)是一套功能非常丰富的open source C++ library&#x2F;framework，虽然目前已经有相关的一些书籍和在线文档，但要全面的掌握它依然不是一件容易的事情。</p>
<p>花了几天时间，将ACE的主要功能整理了一下，用 mind map 归纳出来，这有助于了解ACE提供些什么功能，也可以用作速查参考，查找要实现某项功能时应该用ACE的什么类。</p>
<p>下图未将节点完全展开，请下载: <a href="http://aleung.blogbus.com/files/1133518564.rar">ACE.mm</a> (使用<a href="http://freemind.sourceforge.net/">FreeMind</a>打开)  </p>
<img src="/blog/attachments/2005/12/69324015_6c168b2ec2_o.png" class="">
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>广州的交通</title>
    <url>/blog/2005/12/04/Guangzhou-traffic/</url>
    <content><![CDATA[<p>今天读报，《市建委主任<strong>再</strong>拍胸脯，天河塞车三年内一定解决》。去年6月他就说三年内可<strong>根本</strong>解决天河交通问题，到现在一年半过去了，堵的继续堵，不堵的也开始堵。我不知道他为什么说话不给自己留条后路，既然他这么说，我就拭目以待，天河塞车问题是我们切肤之痛。我不知道他近日说的三年是从现在算起的三年还是去年说的三年，不过人家说是<strong>根本解决</strong>啊，根本解决了之后是否就不会再有塞车出现？要真是这样就算要等上四年五年，十年八年我也很高兴了，但别让我等一辈子就行了。</p>
<p>关于如何解决广州交通的问题，政府的规划看上去还是挺美的，分析了各方面原因并给出解决方案，不过我觉得还有一点原因没有提，就是广州的交警不作为。现在的道路通行能力差，我觉得近半原因是混乱造成的，这个不解决，修更多的路更多的桥也不管用。不能老怪市民没有素质，都是给逼出来的——老实人吃亏，现状就是鼓励违反交通规则的人，你要老老实实开车、老老实实过马路，那就慢慢等吧。但是这点给建委主任提也没有用，不归他管，因此我是挺替他担心的。</p>
<p>我不是专业人士，不敢像人家那样拍胸脯说些言之确凿的数字，只能胡乱发布些自己的看法。</p>
<p>天河的道路的通行能力都不高，因为车速上不去，每个路口都是一个瓶颈，路口的通过量制约了整条道路以致路网的通行能力。天河东西向没有一条路具备主干道的能力，广源东路更多是作为区域外环通道，对区内交通帮助不大。随着城市东部人口不断增加，将来天河的交通压力越来越大，如果没有主动脉，我看很难有什么本质改变。</p>
<p>在车道设计上，也会对通行能力做成影响。例如有些地方转弯半径过小，大车要小心翼翼的过，甚至转不过去，后边就堵上一长串车龙乐；一些车道要在高架桥的桥墩之间绕来绕去；公交车站就设立在路口旁边。天河城的多车道港湾公交车站本来挺好的，偏偏到了出口处就要挤成一团，如果改成像高速公路出入口那样，出口延伸出去对应一条车道可能会好些。</p>
<p>小区交通方面，现在的摩的大行其道，自然是由于有市场需求。公交线路的覆盖范围有限，公交车站也不能过密，市民下车后往往还要走较远的一段距离，需要有代步的工具。不过摩的始终会带来很多安全隐患，小区交通应该有专门的载体。作为接驳公交车站到居民小区以及小区内的近距离交通工具，我觉得电瓶车就挺合适，载客量适中开行灵活，车速较低比较安全，没有尾气污染，噪声也低，估计运营成本也不高。现在电瓶车都是不允许上路的，其实我觉得应该适当放宽些，允许在一定范围内像小区路段内开行。至于政府规划中的所谓开放小区道路，打通微循环，我觉得是弊大于利，无非后果就是让市民的生活环境更恶化一些，大马路成了大停车场了，连这些小区路都要堵上。路网应该是血液循环系统一样，有主动脉主静脉，再分支，直到毛细血管。主动脉堵塞了，希望打通毛细血管来改善循环，这不是荒唐吗。</p>
<p>近距离交通还有一个选择是自行车（包括电动自行车）。虽然我到目前依然是坚持骑自行车上下班，但必须承认自行车在这城市中最终将会消失，尽管欧洲一些城市现在反而推广自行车作为交通工具。在广州的路面，骑自行车危机重重，严重的废气也让人不得不放弃。其实自行车作为近距离交通工具也是很有优势的，不是像以前那样作为主要交通工具，而是公共交通的辅助，例如在非城中心区的地铁站提供自行车停车场。自行车停放其实很省地方，也容易做到立体分层停放。BTW，看单排轮滑的书，里面说单排轮滑是可以作为交通工具用的，说的当然不是中国了。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>《刺杀肯尼迪》片尾演讲</title>
    <url>/blog/2005/12/12/The-Kennedy-assassination-of-speech-of-the-movie/</url>
    <content><![CDATA[<p><em>JFK，一部政治电影，导演在叙述他的政治观点的同时，更在诠释着民主与自由的理念，国家、政府与人民的关系。下面一段是片子最后半小时，检察官在法庭上的陈述，其实也是电影要表达的思想的总结。文字绝对不如电影有震撼力，这部3个小时的电影值得一看。</em></p>
<p>电影介绍：<a href="http://www.douban.com/subject/1292230/">JFK</a></p>
<blockquote>
<p>　　有谁会为埋在廉价墓地里的奥斯瓦多感到伤心呢？没有。几分钟之内，关于奥斯瓦多的不实报道就传遍了全球。传说出自政府，新闻界的消息来自政府。当局在撒谎，史诗般壮观的肯尼迪葬礼迷惑了我们的双眼和我们的头脑。希特勒说过：越大的谎言就越有人相信。李哈维奥斯瓦多，一个疯狂的孤独的无名之辈，想出风头而暗杀总统，只是一长串名单中的第一个替罪羊。而近年来，罗伯特肯尼迪，马丁路德金，凡是想改革想和平的人都是渴望战争的权贵们的眼中钉。这些人也都被疯狂的孤独的个人杀害了。这些没有意义的个人愚蠢行为使我们毫无内疚。我们都成了哈姆雷特，认杀父仇人为亲人，让凶手占据着皇位。<br>　　<br>　　肯尼迪和他被害的秘密与我们在我们的美国梦中相遇，他向我们提出这样的问题：我们的宪法核心是什么？我们的生命价值又是什么？一个国家的总统被杀害，在诸多疑问面前，它的司法机构只会发抖。这个国家的民主又是什么？还有多少政治谋杀，将会说成是心脏病发作，将会说成是自杀、癌症和过量吸毒。还有多少飞机失事和车祸，将会发生在事情暴露的前夜？<br>　　<br>　　有一位英国诗人曾经写道：背信弃义永远不会成功。为什么？因为他成功了就没有人叫他背信弃义。为什么美国人民还没有看到赞布鲁得的录像带？为什么成千上万的文件可以作证，为什么却被政府撤掉并烧毁？每次当我在办公室或是你们人民提出疑问，要求查看证据，得到的回答总是：国家安全机密。我们的国家领导人被夺取了生命，还有什么国家安全可言？什么样的国家安全允许剥夺人民最基本的权利，并批准一个看不见的政府统治美国？这样的国家安全，陪审团的先生们，当它闻起来如此，看上去如此，感觉到如此，你们就可以叫它——法西斯主义！<br>　　<br>　　我向你们提出发生在1963年11月22日的事件，是一场政变！它最直接最可悲的后果，就是改变了肯尼迪从越南撤军的决定。每年消耗800亿美元的战争，是美国收益最大的生意。肯尼迪总统的谋杀案，是由政府最高层事先策划，由五角大楼和中央情报局当中鼓吹战争的狂热分子实施。你们面前的克莱肖就是他们当中的一员！<br>　　<br>　　这是毫无疑问的。可却被达拉斯警方、特工处、联邦调查局和白宫里臭味相投的人庇护起来，这里还包括艾德加胡佛和林登约翰逊，我相信他们在事后成为共犯！因前总统遇刺而进入白宫的那个总统，一方面尽可能多的大谈渴望和平，同时在国会里为他的军事合同伙伴充当生意代理人。<br>　　<br>　　现在有人说我简直是疯了，一个南方小丑在寻求高官厚禄。这有一个简单的办法能证明我是否是一个偏执狂。要求从前总统遇刺中受益的那两个人和你们的新总统里查德尼克松公布中央情报局关于奥斯瓦多和杰克鲁比的51份文件，或是在复制时被毁坏的，或关于奥斯瓦多在苏联活动的秘密备忘录。这些文件是你们的，是人民的财产，你们付了钱的。但是政府或许认为你们都是孩子，会被事实吓坏，或许你们会过于激动，私自处死有关人员。所以在未来的25年里，你们看不到这些文件。<br>　　<br>　　我现在40岁了，所以我熬不到那一天了。但是我已经告诉了我8岁的儿子，让他保持身体健康，以便在2038年一个光荣的9月早晨，可以走进国家档案馆，发现中央情报局和联邦调查局的秘密。他们可能会把时间再次推迟，这可能成为几代人的事。父亲把问题传给儿子，一代传一代。不过总有一天，在某个地方，某个人发现该死的真相。到那时，我们最好，我们最好给自己建立一个新的政府。正如《独立宣言》所说的：任何形式的政府一旦起破坏作用，人民便有权予以更换和废除。<br>　　<br>　　一个美国博物学家说：一个爱国者必须随时准备和政府斗争，以保护他的国家。我很不愿意处于你们今天的地位，你们有很多事情需要思考，你们看了公众没有看到的证据。回想起我们小时候，大多数人都认为正义是自己降落在我们中间的。美德是对美德最好的回报，正义一定能够战胜邪恶。可我们长大后发现事情并不是这样。我们每个人都必须为正义而斗争，这并不容易。因为真理总是会引起权势们的恐慌，我们不得不冒着风险和权势们斗争。像艾塞姆赫兰、李鲍尔斯、杰希恩、威尔奥吉夫，都冒了很大的风险向前走去。<br>　　<br>　　我这有从全国各地寄来的8000美元，分票毛票一元两元，来自家庭主妇、伐木工人、汽车推销员、教师，他们都是平民百姓，他们都不富裕。他们开着送货车，他们在医院护理病人，他们看着自己的孩子开赴越南。为什么？因为他们在乎并想知道真相，因为他们想找回自己的国家。因为只要我们能为自己的信仰而斗争，这个国家仍然是我们的。<br>　　<br>　　寻求真理，仍然是我们最重要的人生价值。如果真理已经被政府谋杀，如果人民不再受到尊重，那么这个地方就不是我出生的那个国家，肯定也将不是我想终生与之厮守的国家。<br>　　<br>　　但尼生写道：当权者忘却了死去的国王。这就是约翰福特肯尼迪的真实写照。他的被害也许是我们国家历史上最可怕的事情之一。我们的人民，我们的陪审制度，今天面对对克莱肖的裁决，代表着人民与政府斗争的希望。所以我恳请你们，在解散陪审团之前，给克莱肖定罪。我肯请你们。不要问这国家能为你做什么，问自己能为国家做什么！<br>　　<br>　　不要忘却你们死去的国王。这仍然是一个，一个民有、民治和民享的政府。只要我们活着，没有比这更重要的了。<br>　　<br>　　全看你们的了。 </p>
</blockquote>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>我的硬盘被什么吃了？</title>
    <url>/blog/2005/12/13/My-hard-disk-is-what-to-eat-/</url>
    <content><![CDATA[<p>啊，硬盘又满了，要清理一下了。每个电脑使用者都常常要面对这样的问题，硬盘越来越大，可是里面要塞的东西也越来越多。要清理硬盘，首先就需要找出是什么东西把硬盘占满了。有一些工具可以帮助我们，显示出每个目录占用的空间大小，但通常这些工具都只能简单的列出某层目录所占用的空间大小，并不能给出整个硬盘空间的占用情况。</p>
<p><a href="http://windirstat.sourceforge.net/">WinDirStat</a>，这个移植自Linux KDE KDirStat的软件通过直观的图形告诉你硬盘的占用情况。我觉得这真是非常优秀的人机界面设计，不用复杂的操作，界面也不算繁复，一切信息那么一目了然。</p>
<img src="/blog/attachments/2005/12/72826124_5fe787b3e0.jpg" class="">

<p>看看这个程序的屏幕截图，很简单。下面的图表示硬盘的文件大小分布，每个小方块代表一个文件，文件越大，方块面积越大。</p>
<ol>
<li>在左上部分的目录树中选中一个目录，分布图中会通过白色方框告诉你这个目录占用了多少磁盘空间；反之，鼠标点击图中的一个方块，会在目录树中将这个文件定位出来 </li>
<li>鼠标指向任一个方块，在状态条中显示对应的文件名 </li>
<li>不同颜色代表不同文件后缀，在右上部分的后缀列表中选中一个后缀，分布图中此后缀文件所对应的方块会突出显示</li>
</ol>
<p>不过，这个软件的分布图的缺省显示是有立体效果的，一个个方块好像昆虫的复眼一样，看久了有点毛骨悚然。我修改了一下显示配置，让它显示成现在这个效果。</p>
<p>Options - Config - Treemap</p>
<ul>
<li>Grid color: light grey</li>
<li>Highlighting Rectangle: yellow</li>
<li>Brightness: 55</li>
<li>Cushion Shading: 100</li>
<li>Height: 19</li>
<li>Scale Factor: 29</li>
</ul>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>Version control with UML reverse engineering</title>
    <url>/blog/2006/01/06/Version-control-with-UML-reverse-engineering/</url>
    <content><![CDATA[<p>现在的版本管理工具都具有版本比较的功能，可以比较一个文件不同版本间的差别，将变化的代码行标记出来。对于常见的开发语言，也有工具可以进行UML逆向工程，根据代码生成出class diagram，这提供了一个概览代码的途径，对于理解代码整体结构很有帮助。有没有可能再进一步，将UML逆向工程与版本管理结合在一起呢？</p>
<p>我设想的工具具有这样的功能：将两个版本的project进行比较，生成出class diagram，并且将变化过的（增加&#x2F;修改&#x2F;删除）类、方法、关系等UML元素用特别颜色标记出来。这样，就可以方便的看到两个版本之间修改过什么类、方法，而不仅仅是只是在代码行的级别。</p>
<p>这样，做代码review也方便多了，知道重点看哪里。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>CP950相机拆装记录</title>
    <url>/blog/2006/04/10/CP950-/</url>
    <content><![CDATA[<p>我的古董数码相机Nikon Coolpix 950已经服役五年多了，去年终于不能工作，表现为快门无法打开。最初是开机后快门打不开，但多按几次后就能正常，但后来就怎么都开不了了。</p>
<p>原来就打算将它拆开看看的，刚好最近在无忌上看到了<a href="http://www.xitek.com/forum/showthread.php?threadid=323436">一篇帖子</a>，介绍995的镜头的拆卸。看完后来了兴趣，今天把相机的镜头部分拆开了（这款相机的镜头与机身是分离的）。反正死马当作活马医，弄不好也不心痛。一层层拆下来，最终将快门组件拆开了。快门叶片是两片薄片，像剪刀口一样，通过一条拨杆由电磁铁控制。把叶片小心的拿开，把下面的垫片也拿起来，看到下面一层就是光圈了。光圈也是类似快门一样由几片叶片构成，不过看起来比较精细，而且有小弹簧等东西，不敢再拆了，怕装不回去，于是就把快门叶片重新装好。用镊子把快门拨杆拨动一下，快门能够正常开合。估计是使用得久，快门不如原来顺畅，容易卡住。我也不知道有什么办法可以处理，既然它能够动了，就把它装回去，将快门组件的上盖上回来，再试试拨动快门叶片，感觉有点紧，于是就将螺丝稍微拧松一些。将镜头组装回原样，装上电池试机，哈哈，一切正常。虽然很可能快门再用一段时间还是会再出问题，但好歹现在能用了。</p>
<p>950的结构与995大体上是近似的。不过950的外壳拆开后，竟然里面还有一个内壳，从无忌帖子的照片上看，995就没有这样的双层壳结构了。如果是测评写手，就会说它是用料十足。以前没有拆过相机，但950拆起来并不难，组装回去也没有太多棘手的地方。螺丝比较多，而且不同部件的螺丝都不同的，我的做法是一边拆一边用一张纸画下草图，并将卸下来的螺丝用透明胶贴在纸上，这样就不会丢失不会混淆了。拆相机要小心闪光灯，不知道这些相机的闪光灯是否高压的，保险起见我用镊子将闪光电路的电容短路了一下，虽然相机已经卸下电池一两个月了，电容放电时还是啪的很响一个火花。镜头拆装一次，进了一点灰尘，镜片也沾了一点手指印，东西太小，拿在手上翻来翻去很容易沾上。将镜头组拆下来的时候，突然掉下一个小弹簧，吓了一跳，又不知道从哪里掉出来的，心想很可能装不回去了，幸好后来发现这个小弹簧还是很容易装的。</p>
<p>拆过之后，感觉这种小相机的镜头，什么几片几组，其实都没有什么太复杂的，拆到最后就是两块小东西（前镜组和后镜组），中间两根金属导轨连起来，整个看起来就好像塑料玩具一样。对焦和变焦靠的是两个小电机带动蜗杆，结构也很简单。还有那片CCD也不是想象中那样脆弱，看上去象一片带透明上盖的集成电路。</p>
]]></content>
      <tags>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title>看外国人怎么写中文文章</title>
    <url>/blog/2006/04/19/See-how-foreigners-write-Chinese-articles/</url>
    <content><![CDATA[<p>看这个”喜欢学中文的美国老外”的blog，<a href="http://spaces.msn.com/aradosh/Blog/cns!4B8704B442B4C2FC!1109.entry">他的写中文文章的方法</a>跟我们很不同，先用拼音将文章通篇写出来，再用软件转化为汉字。</p>
<p>最近学英语，也在思考语言的表音和表意这个问题。拉丁文是一种表音的文字，而中文（汉字）是综合了表音和表意的功能，应该是更多的偏于表意。因为在汉语学习中有”认字”这个说法。中国（大陆）曾经有将汉字拼音化的计划，但因为汉字有表意的特点，单纯的拼音化并不成功。有关汉字、拼音化文字和表音文字等等的资料，在维基百科可以查到。</p>
<p>我的英语听力不怎么好，有些时候我会认得一个单词的大概样子从而知道它的意思，但不知道它的准确发音，故此我在听觉上接收到这个单词的时候就不能认知出它的意思。我想，这一方面是因为我更多机会是通过视觉方式（阅读）上接触英语，而不是听觉方式（听&#x2F;说），另外一方面也许也与使用汉语的习惯有关。</p>
<p>以英语为母语的人，他们的会更加习惯于拼音化的文字，这也许就是为什么他会采用这样的写作方式。对于他们，学习汉语首先是听&#x2F;说，然后才是读&#x2F;写？</p>
<p>另外一个问题，我们在大脑中的思考，是否必须基于语言的呢？当我们要写一篇汉语文章的时候，应该都是先在脑海中讲句子默念出来，用自己习惯的语言。例如用普通话，或者方言。我察觉不到这个思维与语言之间的转化过程。也许，这个转换是一个无意识的过程，因为我们对自己的语言已经能够熟练运用。这就是为什么说，要到能够用英语来思考的地步，才是真正学好它。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>Learning</tag>
      </tags>
  </entry>
  <entry>
    <title>家具DIY——鞋架</title>
    <url>/blog/2006/04/20/Furniture-DIY-shoe-rack/</url>
    <content><![CDATA[<p>打算在家的入户门后面放一个鞋架，收纳全家人日常穿着的鞋子，和换季暂不穿着的鞋子。为了充分利用空间，鞋架要做得比较高，最好一直到天花板。因为在门背后，架子不能影响开门。这样的要求显然不可能有任何成品可以满足，因为已经有自己做书桌的经验，这次还是打算自己动手做。</p>
<p>其实自制板式家具不是很困难，需要的工具也不特别。下面的照片记录了制作的过程。</p>
<p>[左上]：使用的板材是已经贴面的中密度板，2.4m x 1.2m，在电脑上画好图纸，设计好怎么开料，在建材超市买板的时候可以让店员给开裁。他们用的大型锯床开的板子又快又漂亮，但只能锯直线。长的锯口最好还是让他们给开，省事很多，而且木板要锯成小块才好搬运。选用贴面板，可以省了油漆或者自己贴面的步骤。</p>
<p>[右上]：在板上画线做标记</p>
<p>[左中]：用到的工具：曲线锯，吸尘机，另外还有电钻没有在照片上。</p>
<p>[右中]：小的锯口或者曲线自己用曲线锯来锯。操作电锯的时候要注意个人防护，这东西锯起来粉尘和噪音都很大，要戴上口罩塞起耳朵。前面的管子是吸尘器的管，吸尘器在做这些家居工程的时候很管用，无论是锯还是钻，将吸尘管放在工位旁边可以吸走大部分粉尘。曲线锯可以锯曲线也可以锯直线，刚开始锯不好，练熟手后顺了。</p>
<p>[左下]：锯好的板子</p>
<p>[右下]：在架身的木板上打孔，用来放置可调的搁板</p>
<img src="/blog/attachments/2006/4/131333600_ae4b3f8297_o.jpg" class="">

<p>[左上]：密度板硬度很高，如果要直接上木螺丝会非常费劲，而且容易开裂。先用小号钻头钻个螺丝孔，上起来就非常轻松了。</p>
<p>[右上]：连接件采用角码，便宜并且安装容易。商品的家具不会这样做的，太不专业了，但是他们用的连接件需要钻孔的加工精度很高，人家用钻床的，手电钻无法保证足够精度。</p>
<p>[中]：等待装配的架身，已经钻好孔，上了角码。</p>
<p>[右中]：装配，用角码连接正交的两块板。</p>
<p>[左下]：手电钻可以当作电动螺丝批用，不过力矩不好控制。</p>
<p>[右下]：装配中的架子。</p>
<img src="/blog/attachments/2006/4/131333601_5a5c3eea0e_o.jpg" class="">

<p>这是做好的成品。再去布艺市场做了一块窗帘，将架子遮起来。</p>
<img src="/blog/attachments/2006/4/131384360_07664ea8cb_o.jpg" class="">
]]></content>
      <tags>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title>每人都有带窗户的独立办公室</title>
    <url>/blog/2006/05/12/Each-have-independent-office-with-the-Windows/</url>
    <content><![CDATA[<p>我在Stockholm上班的地方叫Kista，Kista是IT企业聚集的地区，被称为瑞典的硅谷，按照我们的叫法，应该是高新技术产业开发区了:) 在这里最大的公司是Ericsson，好多building都是Ericsson的，到处可见它的标志。据说这个地区最初是因为爱立信而发展起来的，但现在有很多不同的企业进驻了，周围逛一圈，看到很多出名的IT企业，还包括中国的华为。</p>
<p>我上班的大楼占地面积挺大，是一个回字型建筑，四周一圈连起来的四层楼房，正门所在的角是大概十层左右塔楼。中间很大一片空地，种了很多樱花树，现在开满了花一片粉红的海洋。</p>
<p>第一天上班，经理到reception来接我进去，一路上跟着他沿着走廊走啊走，拐了好多个弯，穿过无数道门：有常开的，有常关的，有推的，有拉的，有旋转的，有不上锁的，有需要刷卡才能开的……，路过一个个办公室，经过好多个休息区，惊讶的发现一个休息区竟然放着一张乒乓球桌，这时他就说到了，我们的部门就在这个区域。中午出去吃饭的时候，他又带我走另外一个门出去，是穿过中心的花园的。虽然我一直都在努力的记着走过的路，但还是彻底晕菜了，不知道自己到了哪里。我跟他说，这栋大楼应该要有一张地图才行。当天下班，我自己一个人走出去，回忆着进来的路，走到大概是应该下楼的地方，却找不着楼梯了，只好找人求助。附近休息区正好有个扎辫子的酷哥在看电视，我告诉他: I get lost in this huge building, 他告诉我拐两个弯然后推开左边的门就是楼梯了。原来刚才我经过了那道门但是没有认出来，太多一模一样的门了。</p>
<p>说到门，我在现在还是经常弄不清楚某一道门应该是推还是拉，往往要试一试才知道。其实是有规律的，从建筑内部往外走，经过的门都是推的，不过在大楼里面转几圈后你就反应不过来这个方向是往内还是往外了。</p>
<p>后来熟悉了环境，知道了这建筑的结构后，我才知道我们这边的办公室跟大门（前台）差不多是在建筑的对角上，所以从大门进来的话，就要绕个大圈，经过半栋建筑。方便的走法应该是不进大门，穿过中间的空地，从这边的一个门进去。</p>
<p>在《peopleware》中提到，每个开发人员都应该有一间带有窗户的独立办公室，在这里基本做到了。由于建筑是回字形的，每条边都狭长，办公室就分布在有窗户的两侧，中间是一些公用的区域，例如会议室、休息区、洗手间、copy room等等。基本上是每人一间办公室，我也看到一些大一点的办公室是两个人共用的。办公室不算太大，但空间足够了，一张拐角的电脑桌，比国内开放式办公室中的通常大小要大些，一个书架，两个矮柜子，额外的椅子，白板。办公室都有门，平常关不关视乎自己的喜好，如果嫌吵可以关上，不过门旁边是大玻璃窗户，从走廊可以看到里面的，所以关起门来偷懒是不可能的。办公室门口除了名字的牌子外还有块小白板，我一路走过看到好多没人的办公室门口白板都留言写上自己去哪里了联系方式之类。办公室内的装饰比较自由，虽然比不上网上见到的google、microsoft的照片那么夸张，但很多都有挂画、贴海报之类。</p>
<p>这里公共的会议室似乎不多，因为如果只是两三个人讨论问题的话，在自己的办公室关上门就可以了，也有白板。还有特别的就是在这里找不到电话机，有一天我需要参加一个电话会议，办公室里没有电话，也找不到有电话的小会议室，后来才知道他们的内线电话都是转接到手机上的。</p>
<p>每隔几十米就有一个休息区，有沙发茶几之类的东西，另外配备水龙头冰箱微波炉，少不了的是巨大的自动咖啡机。咖啡是瑞典人离不开的东西，那台机器上面几排按钮，可以提供好多种不同的咖啡和热饮，瑞典文看不懂，认得出的有普通咖啡，摩卡，cappuccino，巧克力，还有加不加糖、加不加奶、咖啡浓度等等的选择按钮，刚开始觉得好复杂。某些休息区还有电视机。有些休息区旁边还会有个盘子放着巧克力、糖果等等的零食，刚开始我还以为是公司提供的，心想这么好，后来走过去仔细看看才发现上面的牌子写着goodies，5kr，要自觉投币到一个小盒子中。当然如果光拿走不给钱也不会有人管，这只是靠个人的道德了。都说北欧的社会诚信体系是挺好的，从这些小节也看得出来。</p>
<p>这里的办公环境是相当好，但可惜我过的是寄居蟹的生活——因为我是临时来的，这边找不到空余的办公室，哪个办公室当天没有人在，我就坐哪里。在Stockholm南面有另外一处公共场地，参与这个项目的人分布在两边，有些人要两边跑，就有办公室空出来了。听说迟些整个team的人都要搬过去，在一块办公，可是我上班就没有现在那么方便了。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>从卫星上看看我去过的地方</title>
    <url>/blog/2006/05/13/From-satellites-look-at-all-the-places-I-ve-been/</url>
    <content><![CDATA[<p>昨天介绍了办公室的结构，后来在google map上看看，卫星照片非常清晰的显示出了大楼的形状，如果在图上加个标记，就可以让大家有个直观的了解了。Google map自己没有提供这样的功能，不过查到了另外一个网站<a href="http://www.wayfaring.com/">Wayfaring</a>可以做到，在这个网站上可以创建自己的地图，添加waypoint，附加文字图片说明，好玩极了。  </p>
<p>这就是我的stockholm地图，我会不断将自己的行踪添加上去的:)<br><a href="http://www.wayfaring.com/maps/show/15963">http://www.wayfaring.com/maps/show/15963</a>  </p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>Geocaching in Stockholm</title>
    <url>/blog/2006/06/15/Geocaching-in-Stockholm/</url>
    <content><![CDATA[<p>在中国大陆玩geocaching（GPS寻宝）的人估计没有多少个，hide和seek cache的还大多数都是来中国的外国人。可是在欧美的发达国家就不一样了，大量的cache和玩家。在Stockholm区域的cache就有数百个，好多cache的访问次数都几十上百的，有的logbook都换了几本。 </p>
<p>Stockholm这个城市非常适合玩geocaching，这里到处都有公园，城市周边大片大片都是郊野环境，很多适合藏cache的地方。而且这里交通方便，公共地区又不会有任何进入的限制，玩家有很大的自由度。</p>
<p>放置cache的地点很多都很有选择，不是随便找个僻静的地方就放，而是一些有特别意义的地点，例如景色好的，特别的建筑，雕塑，历史事件发生地等等。因此在找cache的过程中就会发现很多有趣的地方，看到漂亮的景色，或者是了解到一段历史，cache好像导游一样带领着geocacher去发现这个城市，geocaching变得更有趣和有意义。</p>
<p>例如一个cache叫做murderer’s weapon，介绍了1986年瑞典首相被谋杀的事件，而cache就放置在有目击者声称看到murderer逃跑经过的地方。一个叫做no exit的cache放置的地方，30年前修建高速公路的时候因为预算用光了，所以一个出口修建了一半突然就没路了。The Stockholm Syndrome，就是著名的“斯德哥尔摩综合症”的发生地，1973年发生的银行劫案中，4名银行职员被匪徒劫持了五天半，在这些日子里人质对匪徒产生了特别的感情，后来心理学家就把这种心理问题称为“斯德哥尔摩综合症”。</p>
<p>隐藏cache的具体方法也花样繁多，别出心裁。根据GPS到达指定目标在大多数情况下都不难，特别是城市中没有什么复杂地形，可是要让cache藏得好，不会轻易被路人、游客或者拾荒者找到和破坏，但是又要能让有心找的人能找到，就需要花心思了。在我找到过的cache中，有用磁铁吸附在金属物体上的，有藏在树洞里面的——这个树洞是一个水平的大洞顶部有个向上的小洞，cache卡在顶上的小洞中不向下掉，还有一个是用魔术贴贴在路边垃圾箱的底部。找这些cache很有挑战性，有些不依靠提示真的非常难找。</p>
<p>在玩法上，除了这些traditional cache之外，还有很多不同花样的类型。Multi cache是找到第一个cache后依靠上面的提示信息得到下一个cache坐标，例如要先找一个雕塑，将它的创作年份加减一个数字才是下个cache坐标的尾数。Unknow cache就更加考人，并不给出坐标，完全就是猜谜。例如要解一道题啦，要从诗歌中寻找线索啦，要从图画中寻找线索等等。似乎在西方文化中比较喜欢这些推理、解题的游戏，我就没有心思去解题了，凡是见到这种类型的cache我都不去找，免得浪费时间。我还是喜欢那种能够带我到有意思的地方的cache。</p>
<p>不过，好景色的地方经常都会有人在，在寻找cache和放回cache的时候要避开旁人的注意也是比较麻烦的事情。在一个公园边上，我顺利的找到了cache，取出来到附近的长椅上去写log book，写完后要放回去的时候发现有个家伙就坐在藏cache的地方，我只好走开，心想惨了不知道要等多久他才会走。过了一会再去看，发现那个人似乎也在找些什么，看来也是同道中人啊，于是上去跟他say hello，果然也是geocacher，他是前一天找到这个cache后没有机会放回原处，就另外找个地方藏起来，现在过来是想将cache放回原地的，却找不到了。这样见到另一个玩家真是高兴。另外一次经历是傍晚的时候去找一个cache，which is on a hill with fine view，那个小山岗周围都是别墅，在别墅的院落之间找到一条很窄茂密树丛掩盖的石阶上去。上到接近山顶的地方，都是大块的岩石，阳光照着非常舒服，往远处可以眺望到附近的一个湖，我感叹果然是个好景观，没想到在僻静的地方藏着这样一个好地方。看着GPS显示离目标只有二十多米了，cache一定就是在山顶的岩石中，正在一边想一边往上走，突然惊讶的看到在山顶的岩石上，a topless lady was tanning! 看到这样的场景，连忙转身退下去，只好等太阳差不多落山的时候再去找了。</p>
<p>在murderer’s weapon，我找到了一个travel bug，终于亲眼看到了传说中的TB了。这个travel bug叫做ET，已经跟owner联系过，ET很乐意到中国开始新的旅程，哈哈，我要把它带回去。不过我也有点担心，在广州找不找得到好的cache来藏它呢？</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>照片的地理位置信息</title>
    <url>/blog/2006/06/17/Photographs-of-the-geographical-location-information/</url>
    <content><![CDATA[<p>在JPG图像的 EXIF meta data 中，有一组是与地理位置信息相关的，包括经纬度、高度、方向等，可以记录拍摄图像当时的位置信息。不过，目前内置GPS或者带有GPS接口的相机还非常少见，所以这组数据通常是空的。</p>
<p><a href="http://wwmx.org/">World-Wide Media eXchange</a> 提供了免费工具 WWMX Location Stamper，能够依照数码照片的拍摄时间将GPS记录的track的位置信息设置到照片的EXIF中。只要在拍摄的过程中同时打开GPS将track记录下来，通过这个软件处理，照片就能附加上坐标了。</p>
<p>照片添加了地理位置信息，日后的整理就会更加方便，不仅不会忘记照片是在什么地方拍的，而且以后一定会有软件能够根据坐标来管理照片，例如查找在某个区域拍摄的照片。</p>
<p>就目前而言，能够利用EXIF地理位置信息的软件还不多。<a href="http://www.opanda.com/cn/iexif/index.html">IExif</a>是一个EXIF查看工具，对于带有地理信息的照片可以在GoogleMap上面定位出拍摄地点。最新的Google Picasa Beta也增加了对geotag的支持，包括export到Google Earth，或者在Google Earth上给照片标注坐标。<a href="http://picasaweb.google.com/">Google Picasa Web Album</a> 开始公开测试了，相信Google一定会将旗下的GoogleMap，GoogleEarth，GooglePicasa集成在一起。</p>
<p>至于目前广泛使用的在线相册flickr，本身并不支持EXIF的地理信息，但是可以通过tag来记录照片的坐标，称为<a href="http://en.wikipedia.org/wiki/Geotag">geotag</a>。有大量的第三方网站和插件能够处理或使用geotag，通过geotag来聚合信息。<a href="http://www.flickr.com/groups/flickrimportr/">Flickr Importer</a> 可以在上传照片的时候根据EXIF自动创建geotag。也有少数第三方flickr服务能够直接使用EXIF地理信息，例如<a href="http://www.roblog.com/flickrfly-docs/">FlickrFly</a>。</p>
<p>我的<a href="http://www.flickr.com/photos/aleung/">flickr</a>里有一些照片已经标记上了，并且可以使用FlickrFly飞过去看看。</p>
]]></content>
      <tags>
        <tag>Software</tag>
        <tag>GPS_GIS</tag>
        <tag>ImageProcessing</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在不支持中文的网站中输入中文信息</title>
    <url>/blog/2006/06/28/How-does-not-support-Chinese-sites-in-the-input-Chinese-information/</url>
    <content><![CDATA[<p>有些网站不支持汉字，输入的中文字符显示不出来，变成了问号。geocaching.com就是这样。这通常是在文字处理的某个过程中只能处理7bit字符，将汉字过滤掉了。</p>
<p>在HTML&#x2F;XML中对于这种在字符集以外的字符的表示有一种特殊方法：字符实体(character entity)，用字符实体来代替一个字符，相当于编程语言里面的转义符。HTML字符实体都是用&amp;开头，分号结尾的，又分为两种，命名字符实体(named character entity)和数字字符实体(numeric character entity)，命名字符实体数量不多，都是些常用的符号，例如&amp;nbsp;表示空格；数字字符实体是将unicode字符编码的十进制或十六进制数字放在&amp;和;之间，例如&amp;#23383;(十进制)和&amp;#x5B57;(十六进制)。这样，所有unicode字符都变成了7bit ASCII编码，如果在不支持汉字的网站上输入这样编码后的中文，就不会在处理过程中被过滤了，只要浏览器支持，就能够把这些字符还原显示出来。</p>
<p>怎样将一段中文变成HTML实体的表示方法呢？知道相关的名词之后就好办了，用“HTML entity convert”之类的keywords到google搜索，找到了以下工具：</p>
<ul>
<li><a href="http://konieczny.be/unicode.html">Unicode (UTF-8) to HTML entities converter</a> (online)</li>
<li><a href="http://pioneer.stereo.lu/converter.html">Unicode Characters to HTML Entities Converter</a> (online)</li>
<li><a href="http://www.mikezilla.com/exp0012.html">ASCII Converter</a> (online) </li>
<li><a href="http://code.cside.com/3rdpage/jp/unicode/converter.html">10進、16進文字コードin HTMLユニコード</a> (online) </li>
<li><a href="http://www.babelstone.co.uk/Software/BabelPad.html">BabelPad</a> (Unicode Text Editor for Windows)</li>
</ul>
<p>一般的话用在线的都可以了，如果希望用本地软件的，可以用BabelPad，注意要将字体设置成宋体或者其他中文字体，否则中文显示不出来的。输入或者粘贴一段中文进去，全选，然后在菜单中选择“转换”-“统一码转换成HTML字名”。</p>
<p>不过，输入HTML实体，网站是不会将它按照一个字符来处理的，而是一串ASCII字符，故此在搜索、切分的时候就会出现问题了。</p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>人人可编辑的Geocaching中文指南</title>
    <url>/blog/2006/07/03/Everyone-can-edit-Geocaching-of-Chinese-guide/</url>
    <content><![CDATA[<p>最近一年，随着GPS使用者的增加，geocaching开始在国内媒体上有所介绍，也出现了一些相关的网站。但是因为大家都没有多少玩的经验，很多人都只是找过一两个cache，甚至还没有找过，就开始自己藏cache了，对规则的理解也出现了偏差。例如将cache埋藏在地下，找的时候居然要带铲子去挖；为了能让寻宝者知道往哪里挖，就将藏宝地点的照片贴出来。这样，寻宝过程完全变成了单纯的GPS定位，寻找的乐趣都没有了。  </p>
<p>我以前也只是找到过一个cache，对geocaching的了解都是在网上看回来的，纸上谈兵居多。在Stockholm玩了一段时间的geocaching后，经验增长了不少。在这儿寻宝很有乐趣，一方面是很多cache都放在有意思的地方，有景色或者有历史背景，找cache的过程中随之了解这个城市，发现这个城市；另一方面是cache藏匿的方法花样繁多(应该是我以前了解得少)，寻找起来很有乐趣，找到后特别有成功感。  </p>
<p>感觉有必要将学到的经验总结一下，让国内玩家多了解人家是怎么玩的，开拓思路。先是写了一篇“藏宝指南”，原本打算发到论坛上的，但是想到别人也会有自己的经验可以分享出来，如果贴论坛，就只能发新的帖子，信息就零散了。论坛不太适合用作知识的系统整理，这方面还是wiki比较合适，于是我的计划又扩大了一层：建立一个介绍geocaching知识的中文wiki。  </p>
<p>尝试、比较了几个免费的wiki服务，最后选定了使用schtuff.com，wiki的网址是 <a href="http://geocaching.schtuff.com/">http://geocaching.schtuff.com</a> 。仿照维基百科，编辑策略也是“人人可编辑”，不过schtuff.com是不允许匿名编辑的，必须先注册用户。License方面也是考虑了一阵子，在CC与GFDL之间拿不定主意，其实关键就是要不要SA(相同方式分享)，最后选定了最宽松的CC-BY。  </p>
<p>目前几个主要的条目都已经有了基本的内容，好意思拿出来说了:) 目前为止大部分条目都还是我写的，<a href="http://www.geocaching.cn/">geocaching.cn</a>的网友贡献了一些内容，期待会有越来越的参与者。不过，我也不抱多大希望，国内网友对wiki的接受程度比较低，参与度就更加低。  </p>
<p>如果对geocaching有兴趣，就来看看，了解一下吧。如果认同这个wiki的，帮忙宣传一下：人人可编辑的Geocaching中文指南，<a href="http://geocaching.schtuff.com/">http://geocaching.schtuff.com</a>   </p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>DIY交流网站</title>
    <url>/blog/2006/07/14/DIY-/</url>
    <content><![CDATA[<p>喜欢DIY的人不应该错过这个网站，<a href="http://www.instructables.com/">instructables</a> ，在这里分享DIY的创意，可以看看人家做了些什么好玩的东西，是怎么做的，也可以将自己的经验发布出来。</p>
]]></content>
      <tags>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title>还是blogline好用</title>
    <url>/blog/2006/07/14/Or-blogline-works-better/</url>
    <content><![CDATA[<p>试过了好几种RSS阅读器，换来换去都感觉总是差那么一点点不够好用。最终还是用回了<a href="http://www.bloglines.com/">blogline</a>,简单、方便，这就够了。不过前提是网络的速度够快，好像在国内访问的速度不怎么样，也许又得换了。</p>
<p>2009-5-31 Updated: 现在应该改为”还是Google Reader好用” <img src="http://public.blogbus.com/biaoqing/163/11.gif"></p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Embedded script 初接触</title>
    <url>/blog/2006/07/15/Embedded-script-/</url>
    <content><![CDATA[<p>近年来各种编程语言如雨后春笋一般涌现出来，令人眼花缭乱。有些是已经有相当历史的近来得到了广泛关注，有些则是新创的但风头不弱于前辈。它们的名字虽然我很多都听说过，大概知道是什么样的语言，但也是仅此而已了。</p>
<p>这些新兴语言大都是动态语言，运行于虚拟机之中。而我一直都是使用C++&#x2F;Java这些静态语言，这些新语言让我觉得很新鲜。在具有动态特性的语言中，我唯一熟悉的也就是PHP了，但是php给我的印象是方便灵活，但是显得零乱，缺乏OO特性，难以承担大规模应用。也因此我对这些语言就带有一点偏见，觉得“不够严谨”、有点“小儿科”。</p>
<p>由于所开发系统的业务逻辑的复杂和多变，让我们吃尽了苦头，寻找解决方案的一个思路是将业务逻辑控制分离出来，降低这部分修改的难度。如果要再进一步，就是要采用script来描述业务逻辑了，那么是设计这样一种script，还是有什么现有的架构可以重用？</p>
<p>将视野放开，可以看到动态语言在这方面得到了越来越广泛的应用，有好多新兴语言就是用来做embedded script的。在嵌入的脚本和宿主语言之间，数据可以传递，函数可以相互调用。因为我做的应用使用C++开发，因此我这几天看了<a href="http://www.lua.org/">Lua</a>和<a href="http://www.squirrel-lang.org/">Squirrel</a>这两种用于C&#x2F;C++的嵌入语言的资料，这两种语言目前主要都是在游戏开发领域使用，Lua比较出名因为魔兽争霸使用了它，Squirrel是从Lua派生出来的。先不考虑怎样应用于具体业务，单从语言本身来说，这些简单的语言给我印象不错，一些语言特征能够给编码带来很多方便，如function作为first-class value，table数据结构(关联数组)，而我特别关心的是它们对coroutine(协程)的支持。</p>
<p>使用通用的script还是自己开发引擎，自定义script格式，这就看怎么权衡了。动态语言的语言机制强大而灵活，其描述能力是自定义的script难以到达的；但是通用、灵活往往也意味着复杂，自定义script专注于要实现的业务功能，往往比较简单，学习难度要低；自己定义script虽然要开发解释器，但是针对性很强，与业务紧密相关，使用通用script还是要考虑怎样来描述业务操作，宿主程序如何提供接口来结合起来，其实要做的事情并不少。</p>
<p>不过我现在对它们的了解还只是很表面，仅仅走马观花而已，观点一定是片面的，还需要进一步的学习。就目前来说，我对使用嵌入语言存在着这些疑问：</p>
<ul>
<li>缺乏OO特性，如果是宿主程序是采用OOD的话，不容易结合起来，我现在已经很难想象一个大型系统如何能够不采用面向对象来实现了。（不过这个还是因语言而异，据介绍某些语言是具有很完善的OO特性的）。Lua支持基于原型的面向对象编程模型(prototype-based OO Modal)，我对这种对象模型是持怀疑态度的，它并不完善，好多OO设计方法都无法实现出来。不过我必须承认我并没有深入研究过，也许还需要多些了解。[见附注] </li>
<li>与宿主语言的binding太复杂。不使用class应该还是挺简单的，但使用了class之后就比较麻烦了。使用嵌入脚本，就是希望让开发更简单快捷，如果因此又引入另外一种复杂性，那么优势就被抵消了。 </li>
<li>怎样将通用的script用于针对性的业务？是不是宿主程序需要以例如API的形式提供一套接口？我现在还没有看到这部分，如果找到一些开源应用的代码来看看应该可以解答这个疑问。 </li>
<li>性能始终是一个需要关心的问题</li>
</ul>
<hr>
<p>PS. 刚才网上花了不少时间读了关于面向对象的讨论和文章，看来我对于面向对象的了解还是相当片面的，只是局限在C++&#x2F;Java语言对于OO的实现，而C++&#x2F;Java是属于<a href="http://en.wikipedia.org/wiki/Class-based_OOP">class-based OOP</a>，单纯的用class-based的思维去套用<a href="http://en.wikipedia.org/wiki/Prototype-based_programming">prototype-based OOP</a>得到的结论当然不合理。另外一个错误就是我将prototype-based和object-based混为一谈了，其实完全两码事，object-based model则一般不认为是OO。花点时间去了解一下prototype-based OOP和动态编成语言应该是值得的，起码可以开拓思路。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>一刹那到底是多久？</title>
    <url>/blog/2006/07/22/What-is-a-moment-how-long-/</url>
    <content><![CDATA[<p>我们在表达非常非常短的时间的时候，经常会用“刹那”这个词，例如：刹那间的感动。如果有人偏偏要跟你较劲，问你“刹那之间”，那到底是多长时间啊？你肯定会骂他太无聊、钻牛角尖。</p>
<p>那就来钻钻牛角尖吧：</p>
<p>“刹那”来自梵文 ksana，</p>
<ul>
<li>120 刹那 &#x3D; 1坦刹那（tatksana) </li>
<li>60 坦刹那 &#x3D; 1 腊缚(lava) </li>
<li>30 腊缚 &#x3D; 1 牟呼栗多 (murhutar) </li>
<li>5 牟呼栗多 &#x3D; 1 时 (大时，kala) </li>
<li>6 时 &#x3D; 1 昼夜 (即1日)。</li>
</ul>
<p>据此，可以推算出：1 刹那 &#x3D; 1&#x2F;75 秒 &#x3D; 13.33 毫秒</p>
<p>看来刹那间的感动确实没有感动多久啊。</p>
<p>呵呵，不是我这么无聊去研究这些东西，是在<a href="http://zh.wikipedia.org/">维基百科</a>无意中<a href="http://zh.wikipedia.org/wiki/%E5%88%B9%E9%82%A3">看到</a>的。现在维基百科已经成为我除了google以外的另外一个重要的学习工具了，遇到不了解的概念，先去维基百科看看(包括<a href="http://zh.wikipedia.org/">中文</a>、<a href="http://en.wikipedia.org/">英文</a>)，再在<a href="http://www.google.com/">google</a>搜索。还有就是每天去看看维基首页的新闻动态、特色条目，可真了解不少东西。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>Homebuilt bicycle trailer</title>
    <url>/blog/2006/07/31/Homebuilt-bicycle-trailer/</url>
    <content><![CDATA[<p>挺实用的一个东西，用来运点东西挺方便。但不知道在国内会不会被警察叔叔抓？<a href="http://www.flickr.com/photos/bikeman04/201520772/in/pool-make/"><br><img src="http://static.flickr.com/62/201520772_efc6874999.jpg"></a>  </p>
]]></content>
      <tags>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title>愤青与垮掉的一代</title>
    <url>/blog/2006/08/20/Anger-green-and-the-collapse-of-a-generation/</url>
    <content><![CDATA[<p>在MSN上见到一个久没联络的中学同学，聊天中她说到我以前是愤青。我非常奇怪，怎么我变成愤青了？她说因为我听摇滚，所以觉得我是愤青。我只好跟她解释，“愤青”这个词在当前的语境中是特指偏激的民族主义分子。如今“愤青”一词含义已经不同于“愤怒青年”了，英文里用的也是专有名词fenqing，只用于chinese。愤青们是否听摇滚我不清楚，但我猜大部分都是不听的。</p>
<p>现在又时兴将80后称为中国的“垮掉的一代”。如果硬要这样套的话，也只好增加一个流行的前缀：有中国特色的。  </p>
<p>近日在读《<a href="http://www.douban.com/subject/1051440/">在路上</a>》，很久没有读过这样的书了，好像回到了大学的年代。摘录豆瓣上的一段<a href="http://www.douban.com/review/1055467/">书评</a>：  </p>
<blockquote>
<p>垮掉的那一代人已经老去，但不知道他们的精神是否依然？跟他们的迷惘相比，我们这一代人越来越像一群被圈养的行尸走肉，没有朝气，也没有感动人的生命之光。<br>在我的想像中，那个“伟大的时代”跟那些逝去的人一样，已经远远地离开，再也不会回来了。   </p>
</blockquote>
]]></content>
      <tags>
        <tag>Misc</tag>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>‘I Love’ audio player</title>
    <url>/blog/2006/08/23/I-Love-Audio-Player/</url>
    <content><![CDATA[<p>下载的mp3越来越多之后，总想怎样才能将喜欢的与不太喜欢的区分出来呢。渐渐的有一个想法，就是在播放的时候统计自己的喜好。基本思路其实跟以前想过的”什么时候电视机可以变得聪明一些”差不多。</p>
<p>下面就设想一下这个音乐播放器应该是怎样的：如果觉得一首歌不好听&#x2F;不想听，就跳过它放下一首。如果觉得特别喜欢，可以投一票。根据用户的动作，可以统计出对歌曲的喜爱程度。歌曲全都是随机播放，越是喜欢的歌曲播放出来的机会会越大，但是其它歌曲也会偶然播放出来，不会永远埋没起来。原本喜欢的听多了后也许会有点腻，没关系，不想听就跳过好了，播放器会不断”学习”你的喜好。只要曲库里有足够多的歌曲，总能保证听到的大部分都是喜欢的歌曲。</p>
<p>假设要开发这样一个软件，就叫它”I love”吧，将它的功能用user story描述出来，应该有这些（还可能增加好多）：</p>
<table>
<thead>
<tr>
<th>title</th>
<th>description</th>
<th>priority</th>
</tr>
</thead>
<tbody><tr>
<td>播放MP3</td>
<td>能够播放mp3格式的音频文件</td>
<td>最高</td>
</tr>
<tr>
<td>播放WMV</td>
<td>能够播放wmv格式的音频文件</td>
<td>最低</td>
</tr>
<tr>
<td>Copy profile</td>
<td>将现有的profile copy成一个新的profile</td>
<td>低</td>
</tr>
<tr>
<td>Switch profile</td>
<td>在软件中可以存在很多个profile，但只能有一个profile生效。所有对喜爱值的操作都是对当前profile进行的。用户选择一个profile，将这个profile设置成为当前active的profile。切换profile时不停止当前歌曲的播放。</td>
<td>中</td>
</tr>
<tr>
<td>I like it</td>
<td>当歌曲正在播放时，用户按下”I love”按钮，将这首歌的喜爱度增加一个数值，如果同一首歌，用户再次按下，忽略这个操作</td>
<td>中</td>
</tr>
<tr>
<td>Don’t like it, next</td>
<td>当歌曲正在播放时，用户按下”I don’t like it”按钮，停止播放这首歌，并且将这首歌的喜爱度减少一个数值。然后 随机播放下一首歌</td>
<td>高</td>
</tr>
<tr>
<td>歌曲播放结束</td>
<td>如果歌曲播放到结尾，并且在这个过程中用户没有按下过”I like it”按钮，将这首歌的喜爱度增加一个数值。然后 随机播放下一首歌</td>
<td>高</td>
</tr>
<tr>
<td>随机播放一首歌(shuffle)</td>
<td>profile是保存了所有歌曲信息的一组数据，每首歌曲都有一个喜爱度的值。从profile中按照喜爱度加权来随机的挑选一首歌来播放，歌曲的喜爱度越高，被选中的概率越大。</td>
<td>最高</td>
</tr>
<tr>
<td>暂停&#x2F;继续</td>
<td>当用户按下”暂停&#x2F;播放”按钮，暂停当前歌曲的播放；再按一次，从上次暂停的地方继续播放。</td>
<td>中</td>
</tr>
<tr>
<td>Rename profile</td>
<td></td>
<td>中</td>
</tr>
<tr>
<td>程序启动</td>
<td>选择最后一次使用的profile，如果配置为”启动立即播放”，随机播放一首歌</td>
<td>低</td>
</tr>
<tr>
<td>显示歌曲信息</td>
<td>显示当前播放歌曲的信息，包括歌名、专辑、艺人等</td>
<td>中</td>
</tr>
<tr>
<td>off-line media library</td>
<td>将off-line媒体库（例如光盘）的曲目也加入profile中，同步的时候按照喜爱度加权的原则随机copy一部分曲目到硬盘中，换掉旧的一些。</td>
<td>最低</td>
</tr>
</tbody></table>
<p>只要把播放mp3、shuffle、don’t like it、播放结束这四个user story实现了，基本就能用了；再将优先级为”中”也实现了，设想的目标就基本都能达到。</p>
<p>整个播放器的界面将会非常简洁：三个按钮：喜欢&#x2F;不喜欢&#x2F;暂停或继续，不喜欢（下一首）的按钮应该是最大的；音量控制；正在播放的歌曲显示。切换profile放在菜单里面。这些按钮都必须能够用键盘快捷键控制。</p>
<p>不过，我只是想想而已，真的去写这样一个软件的可能性微乎其微。媒体播放、用户界面这些都是我不熟悉的东西。不知道是不是已经有类似功能的软件？如果有就太好了。</p>
<p>这样的播放器其实更适合用硬件实现，上面这些user story可以完完全全在随身听上实现。不过，软件还有可能自己写，要自己做硬件的门槛就高多了。现在市面的mp3品种多得眼花缭乱，大部分功能都是一个样，有创意的厂商非常少。写下自己的想法后，上网查了一下，发现apple ipod shuffle和sony的walkman A系列有类似的功能，但从介绍来看都没有完全满足我的要求，不知道用起来怎样。在我看来，以下两点是最重要的：</p>
<p>第一是歌曲的喜爱度必须是在播放过程中日积月累的更新，而不是通过什么操作界面来评级。对于用户，只有最简单直接的操作：喜欢，按一下（可别要进什么菜单）；不喜欢，跳下一首。我认为甚至不应该提供任何机会给用户直接更改喜爱度。</p>
<p>第二是需要有profile切换，在不同环境、不同心情下喜欢的音乐是不一样的，有了profile功能就可以独立累计喜爱度。Profile也可以用来区分不同的使用者。</p>
<p>也许过不了多久就会有这样的产品出现了，到时是不是要考虑买一个呢？ :)</p>
<p><strong>Update 2012-7-5:</strong> 这样的产品真的有了，不过不是本地播放器，而是在线播放，就是<a href="http://douban.fm/">豆瓣电台</a>。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>读书摘录 - 城市</title>
    <url>/blog/2006/08/27/Read-excerpts-city/</url>
    <content><![CDATA[<p>读书摘录：<a href="http://www.douban.com/subject/1861730/">Stockholm Horizons</a></p>
<p>Introduction</p>
<p>What makes a city? … A city is principally a forum for mankind’s countless activities. We live, think, work, buy, sell, study, love, enjoy and suffer in the city.(P9)</p>
<p>读书摘录：<a href="http://www.douban.com/subject/1451694/">城市的形成</a></p>
<p>“有机”模式</p>
<p>许多城市在初始时是很粗陋的；它们的形成是在含蓄和渐进中形成的。…住宅在扩展的过程中将会变得稠密，并且编辑出肌理。建筑物将尽其所能爬上山坡，占领河湾。到了某个阶段，这种自然的布局将会获得一种自我意识。…画境式郊区的出现是因为城市回过头来欣赏它自己那自然的初始时期，同时，也是对过去曾经拥有的美德的一种眷恋。(P64)</p>
<p>只要将散步者的足迹描摹出来便可以获得画境式的效果。我们可以在乡间发现这些优雅的弧线，而模仿这些弧线是“一种荣誉的事”。(P82)</p>
<p>我们经历了可怕的20世纪二三十年代，当时的老城一方面被法西斯所破坏，另一方面又饱尝了现代主义的狂热；我们也经历了20世纪五六十年代，当时剧烈的城市更新风暴毁坏了无数城市中心，而今天我们已经开始学习如何去接纳城市的完整性。(P90)</p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>很久很久没有更新了</title>
    <url>/blog/2007/01/27/No-update-for-a-long-long-time/</url>
    <content><![CDATA[<p>好像没有什么好写的，贴张照片吧<br><img src="http://farm1.static.flickr.com/136/369778069_a78a5ac873.jpg">  </p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>‘I Love’ audio player - basic design</title>
    <url>/blog/2006/08/29/I-Love-Audio-Player-Basic-Design/</url>
    <content><![CDATA[<p>对于”I Love” audio player的想法, flyisland的批阅建议是请jobs同志执行。我也很希望jobs同志能够欣赏这个想法，更希望的是我也能有flyisland同志同样的运气，能得到一个赠送的iPod。在此之前，还是继续自我陶醉一下，下面是想到的初步设计：</p>
<img src="/blog/attachments/2006/8/227012217_2b9c0d6ecd.jpg" class="">

<p>UI负责用户界面；Control接受UI的命令，进行播放控制；作品的选择、喜爱度的累积是profile的任务；媒体文件的播放是委托给player进行的。</p>
<img src="/blog/attachments/2006/8/227012224_56936e3643.jpg" class="">

<p>JavaZoom.com的<a href="http://www.javazoom.net/jlgui/developerguide.html">jlGui</a>是一个opensource的music player，它提供了一个很简洁实用的BasicPlayer API，用在这里正合适。</p>
<img src="/blog/attachments/2006/8/227012248_2ce4e0e4e8.jpg" class="">

<p>UI，应该就是GUI了吧，有人会需要command line吗？甚至是外接LED显示屏？</p>
<img src="/blog/attachments/2006/8/227012242_fa610759ef.jpg" class="">

<p>Profile部分将是最重要也是最复杂的了，现在考虑得还不成熟，只有个大概。</p>
<img src="/blog/attachments/2006/8/227012232_3c57a934d1.jpg" class="">]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Web 2.0 渐入佳境</title>
    <url>/blog/2007/02/03/Web-2-0-/</url>
    <content><![CDATA[<p>刚刚上豆瓣去找书的时候，发现豆瓣新增了一个叫做”九点”的栏目，还是与”我看””我读””我听”并列的。好奇的打开来看看，原来是blog的聚合，将原来”我上”的功能扩展了，通过RSS将各个blog的内容直接聚合过来。<br>试了一下，相当喜欢，虽然这个功能上线才几天，但做到很不错了。可以看到大众推荐的blog文章，也可以看自己订阅的bolg。结合了豆瓣原有的自动推荐，不时会发现到一些符合自己口味的blog&#x2F;文章。<br>它还稀奇古怪的弄出了”二套””三套”等等的分类，还没有搞清楚什么意思，大概是什么算法计算出来的自动分类。我开始还以为是中央台的第几套节目呢。</p>
<p>前段时间尝试的音乐网站”友播”和last.fm，也是给我不少惊喜，两个都是音乐推荐和在线播放网站。相比起前者的基于音乐特征分析的自动推荐，我更看好的是后者的根据相似口味的用户的喜好而给出的推荐。</p>
<p>Web 2.0 发展到现在，已经不再是刚开始玩那些什么n度人际关系的东东了，而是切入到人们生活、娱乐、工作当中，实实在在的带来方便和新的体验。社会化、个性化的网络正在改变着信息传播的方式，也许到了某一天，传统的报纸、广播和电视都会被按个人喜好定制的新媒体取代。</p>
<p>BTW，豆瓣是目前国内的web 2.0网站当中，我最看好的一个。</p>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>了解JVM的内存管理与垃圾回收</title>
    <url>/blog/2007/03/08/Understand-the-JVM-memory-management-and-garbage-collection/</url>
    <content><![CDATA[<p>v2 - 2022-8-16<br>v1 - 2007-3-8</p>
<p>Java语言具备GC(垃圾回收)的能力，内存管理不需要应用程序去过问，这很方便。但是，GC是怎么进行的，JVM的内存参数应该怎么调整，如何优化，往往我们不是太清楚。看过一些资料后，对Sun JVM的内存管理以及垃圾回收的机制大概有了一个概念，这里将这些资料归纳和翻译出来。本文初稿内容主要基于Sun JVM 1.3.1，在后续版本中有不少优化措施，但是这些基本概念还是不变的。</p>
<h2 id="GC"><a href="#GC" class="headerlink" title="GC"></a>GC</h2><p>当JVM进行GC的时候，是要消耗CPU资源和需要一定时间的，这会影响到程序的正常运行，因此需要尽可能减少GC消耗的时间。Java程序运行过程中，对象的生命周期有长有短，其中相当大部分是都是比较短命的，例如局部的对象一用完就可以回收了。在大多数情况下，只要能够及时回收这些短命对象的内存，就能够确保JVM有足够内存来分配给新的对象。因此JVM采用一种分代回收(<em>generational collection</em>) 的策略，用较高的频率对年轻的对象(young generation)进行扫描和回收，这种叫做minor collection，而对老对象(old generation)的检查回收频率要低很多，称为major collection。这样就不需要每次GC都将内存中所有对象都检查一遍。</p>
<p>内存收集方式的最基础方式是以下几种：</p>
<p>一种称为copying或scavenge，将所有仍然生存的对象搬到另外一块内存后，整块内存就可回收。这种方法有效率，但需要有一定的空闲内存，拷贝也有开销。这种方法用于minor collection。</p>
<p>另外一种称为mark-sweep，从GC root开始根据引用遍历对象，将活着的对象标记出来，扫描一遍后，没有被标记的内存就可以回收了。这种方法不需要占用额外的空间，但会形成内存碎片。这种方法用于major collection.</p>
<p>在mark-sweep基础上发展出来一种方法称为mark-compact，将活着的对象标记出来后，搬迁到一起连成大块的内存，然后回收其他内存。这种方法不需要占用额外的空间，但迁移带来额外开销，速度相对慢一些，用于major collection.</p>
<p>在以上几种基础的内存收集方法之上，有各种改进，例如：增量式回收，每次只处理一小部分；多线程平行执行；通过各种方法缩短stop the world（普通GC在执行过程中要暂停应用的执行）时间。</p>
<p>目前版本 JVM 支持多种GC实现方式，通过 <code>-XX:+UseXyzGC</code> （Xyz为GC方式名字，具体查看文档）来指定：</p>
<ul>
<li>Serial GC - 串行使用单核CPU的mark-compact</li>
<li>Parallel GC - 使用多线程进行，也称为 Throughput Collector</li>
<li>CMS（已经被G1替代） - Concurrent Mark Sweep，分阶段并行的进行mark和sweep，目标是缩短GC停顿时间，只在某些阶段需要暂停应用执行</li>
<li>G1 - Garbage First，并行的mark-compact，可以增量进行</li>
<li>ZGC（在Java 15起提供）- 使用颜色指针标记，并行处理所有高开销操作，暂停应用短于10ms</li>
</ul>
<h2 id="Heap-Memory"><a href="#Heap-Memory" class="headerlink" title="Heap Memory"></a>Heap Memory</h2><p>JVM管理的内存，通常叫做堆(heap)，可以用下面的图来描述。</p>
<p>JVM启动后，保留一段地址空间，这个空间的大小由-Xmx指定。这块空间的大小就是heap可能的最大值，但一开始不一定全都分配了物理内存，初始分配的heap大小由-Xms指定，如果-Xms小于-Xmx，剩余部分是virtual的，当需要的时候，再向OS申请。</p>
<p>Young generation 内存由一块Eden(伊甸园，有意思)和两块Survivor Space构成。新创建的对象的内存都分配自eden。两块Survivor Space总有会一块是空闲的，用作copying collection的目标空间。Minor collection的过程就是将eden和在用survivor space中的活对象copy到空闲survivor space中。所谓survivor，也就是大部分对象在伊甸园出生后，根本活不过一次GC。对象在young generation里经历了一定次数的minor collection后，年纪大了，就会被移到old generation中，称为tenuring。</p>
<p>剩余内存空间不足会触发GC，如eden空间不够了就要进行minor collection，old generation空间不够要进行major collection。</p>
<p>很多参数会影响里面各部分空间的分配。-XX:MinHeapFreeRatio与-XX:MaxHeapFreeRatio设定空闲内存占总内存的比例范围，这两个参数会影响GC的频率和单次GC的耗时。-XX:NewRatio决定young与old generation的比例。Young generation空间越大，minor collection频率越低，但是old generation空间小了，又可能导致major collection频率增加。-XX:NewSize和-XX:MaxNewSize直接指定了young generation的缺省大小和最大大小。</p>
<img src="/blog/attachments/2007/3/java_memory.jpg" class="">

<p>-Xmx<br>set maximum Java heap size</p>
<p>-Xms<br>set initial Java heap size</p>
<p>-XX:NewRatio&#x3D;2<br>Ratio of old&#x2F;young generation sizes.</p>
<p>-XX:NewSize&#x3D;2.125m<br>Default size of new generation (in bytes)</p>
<p>-XX:MaxNewSize&#x3D;<br>Maximum size of new generation (in bytes). Since 1.4, MaxNewSize is computed as a function of NewRatio.</p>
<p>-XX:SurvivorRatio&#x3D;<br>Ratio of eden&#x2F;survivor space size. For example, when SurvivorRatio&#x3D;2, one survivor space size is 1&#x2F;4 of young generation.</p>
<p>(上面给出的缺省值不一定准确，不同JVM版本和不同OS环境下会有不同)</p>
<h2 id="Non-Heap-Memory"><a href="#Non-Heap-Memory" class="headerlink" title="Non-Heap Memory"></a>Non-Heap Memory</h2><p>除了heap，JVM还有多种内存使用，下面列出主要的：</p>
<h3 id="Metapace"><a href="#Metapace" class="headerlink" title="Metapace"></a>Metapace</h3><p>Java 8 之前的版本有permanent generation，属于heap space的一个特殊部分，是JVM用来保存class object和meta data，大小由-XX:PermSize和-XX:MaxPermSize指定。大量动态生成(编译)和加载class会增加这部分内存的耗用。但从Java 8起，不再有permanent generation，而是改成了放在native memory中的 metaspace，大小会自动增长，也可以由 <code>MetaspaceSize</code> and <code>MaxMetaspaceSize</code> 限制。</p>
<h3 id="Code-cache"><a href="#Code-cache" class="headerlink" title="Code cache"></a>Code cache</h3><p>用于存放JIT编译的代码和native代码</p>
<h3 id="Thread"><a href="#Thread" class="headerlink" title="Thread"></a>Thread</h3><p>每个线程都有一个栈，栈的大小由 <code>-Xss</code> 控制。</p>
<h3 id="Direct-Buffer-Memory"><a href="#Direct-Buffer-Memory" class="headerlink" title="Direct Buffer Memory"></a>Direct Buffer Memory</h3><p>可以在Java应用中申请使用的堆外内存，经常用于NIO，也可以在JVM之间共享。大小缺省与heap相同，也可以由 <code>-XX:MaxDirectMemorySize</code> 限制。</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>以上给出的只是基本的介绍，下面reference中的文章都很不错，对进一步了解或者查找性能优化参数都有帮助。</p>
<ol>
<li><a href="https://www.baeldung.com/jvm-parameters">Guide to the Most Important JVM Parameters</a></li>
<li><a href="https://www.youtube.com/watch?v=c755fFv1Rnk">Memory footprint of a Java process (Youtube)</a></li>
<li><a href="http://java.sun.com/javase/technologies/hotspot/vmoptions.jsp">http://java.sun.com/javase/technologies/hotspot/vmoptions.jsp</a></li>
</ol>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows的symbolic link支持</title>
    <url>/blog/2007/03/15/Windows-symbolic-link-/</url>
    <content><![CDATA[<p>UNIX类的操作系统支持symbolic link [2]，可以通过”ln -s”命令来创建。但是在Windows操作系统中，却没有提供这样的功能，文件管理就不如UNIX方便。</p>
<p>虽然Windows的shortcut在功能上有点类似于symbolic link，但还不是一个层面的东西，因为OS并没有管理它，要靠应用程序来处理。在DOS窗口里面dir看看一个shortcut是什么样子的，就知道有什么不同了。</p>
<p>其实，windows在NTFS 3.0开始支持一种叫做 junction point 的特性[3]，可以看作为目录的symbolic link。可是微软总是喜欢把一些东西藏起来，比如这种junction point，你就无法直接通过windows自带工具来建立、管理。我是使用<a href="http://www.zabkat.com/">xplorer2</a>这个explorer替代工具的时候，才发现有”Folder Junction”的功能(Edit - Paste Special - Folder junction)。在[1]中介绍了很多可以管理junction point的工具。不过，使用时还是要小心，它跟UNIX的symbolic link还是不完全相同，特别是删除的时候，junction point的行为有点怪异的[1][3]。据说Vista会提供与UNIX兼容的symbolic link支持。</p>
<p>利用junction point，可以在D盘建立一个目录，link到C盘来使用；也可以将分布在不同地方的多个子目录link到同一个目录底下，方便备份。</p>
<p>另外，Windows NTFS也支持hard link的[5]，但实际使用中symbolic link的作用更大。</p>
<p>Reference:</p>
<ol>
<li>Windows Symbolic and Hard Links: <a href="http://www.shell-shocked.org/article.php?id=284">http://www.shell-shocked.org/article.php?id=284</a></li>
<li>Symbolic Link in Unix: <a href="http://kb.iu.edu/data/aibc.html">http://kb.iu.edu/data/aibc.html</a></li>
<li>NTFS Junction Point: <a href="http://en.wikipedia.org/wiki/NTFS_junction_point">http://en.wikipedia.org/wiki/NTFS_junction_point</a></li>
<li>Hard Link in Unix: <a href="http://kb.iu.edu/data/aibc.html">http://kb.iu.edu/data/aibc.html</a></li>
<li>Hard Link in Windows: <a href="http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/fsutil_hardlink.mspx?mfr=true">http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/fsutil_hardlink.mspx?mfr&#x3D;true</a></li>
</ol>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Excel进行分组统计及生成直方图</title>
    <url>/blog/2007/03/17/Use-of-Excel-grouping-statistics-and-generate-histogram/</url>
    <content><![CDATA[<p>统计分析时经常需要统计一组数据处于各个区间的数量分别有多少，也称为数据的频率分布。例如考试成绩出来了，老师要统计不及格(&lt;60)、及格(60<del>80)、良好(80</del>90)、优(90~100)的人数有多少。</p>
<p>使用Excel的FREQUENCY函数，可以很简单的实现这个目标：</p>
<p>先把要处理的目标数据准备好：一列是输入数据A3:A66（在例子中为了清晰，已经排序，实际没有必要），另外一列是分组间隔D3:D21，在这里每个区间的大小是10。</p>
<p>对于每个区间的频率，我希望输出在E3:E21区域。用鼠标将这个区域框起来，然后输入公式 &#x3D;FREQUENCY(A3:A66,D3:D21)。FREQUENCY函数有两个参数，第一个是要分析的目标数据，第二个是分组间隔值，都需要是数组。输出也是一个数组，因此需要按 Ctrl-Shift-Enter 来结束公式的输入，表明这是数组公式。(数组公式会显示为有个花括号括起来)</p>
<p>公式输入后，马上就能看到计算的结果了，如果希望更清晰些，可以做一张图。依然是选中E3:E21区域，菜单中选中插入图表，照着向导操作。在第二步选择DataSource中，需要在”Serials”中指定X轴区域为C3:C21(或D3:D21)，否则X轴数据会变成1、2、3…</p>
<p><img src="http://farm1.static.flickr.com/162/422940441_9279aaa292_o.jpg"></p>
<p>从图中，可以明显看出大部分数据范围在50-120之间，峰值为90-100。</p>
<p><a href="http://soft.yesky.com/office/283/2639283.shtml">这个网页</a>介绍了另外一种方法，通过Excel数据分析功能来实现上面做的事情，更加简单。但是Excel缺省安装中没有数据分析功能。</p>
<p>Reference：<a href="http://www0.ccidnet.com/school/office//2001/06/26/70_4531.html">Excel统计函数</a></p>
]]></content>
      <tags>
        <tag>Excel</tag>
        <tag>Statistics</tag>
      </tags>
  </entry>
  <entry>
    <title>ClearCaseWeb</title>
    <url>/blog/2007/03/31/ClearCaseWeb/</url>
    <content><![CDATA[<p>ClearCaseWeb is a simple web-based utility for browsing files stored in ClearCase. With it you can get the list of recent changed files and find out who is the last modifier of each line in a file in a very handy maner. The original idea to develop ClearCaseWeb is to overcome the lack of GUI for cleartool annotation. It’s inspired by <a href="http://www.freebsd.org/projects/cvsweb.html">CVSWeb</a>, which is widely used in open source community.</p>
<p>Screenshots: </p>
<p>Annotation View</p>
<p><img src="http://farm1.static.flickr.com/186/439704788_26969d28be.jpg"></p>
<p>Browse View</p>
<p><img src="http://farm1.static.flickr.com/168/439704790_204c0d2c98.jpg"></p>
<p>Recent Changes View</p>
<p><img src="http://farm1.static.flickr.com/175/439704792_3da1066a9b.jpg"></p>
<p>ClearCaseWeb is developed in php. Currently it only works on Windows with ClearCase dynamic view successfully configurated.</p>
<p>Download:</p>
<ul>
<li>2007-3-30: <a href="http://aleung.blogbus.com/files/11752618700.zip">ClearCaseWeb_0.2</a><br>First functional release.</li>
</ul>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Who will attack the system?</title>
    <url>/blog/2007/05/28/Who-will-attack-the-system-/</url>
    <content><![CDATA[<p>在一份关于某产品的安全考虑的presentation中看到这么一段话：</p>
<p>Who will attack the system?</p>
<ul>
<li>Script Kiddies<br>Focus on DoS and simple attacks (“just for fun”) </li>
<li>Sophisticated&#x2F;Dedicated outside attacker<br>Well educated and spend much time in learning the system. Economical motives. DoS, Fraud etc. </li>
<li>Internal Attacker<br>Knowledge about how the system is built. Dishonest or dissatisfied employees </li>
<li>Competitors and <strong>Governments</strong><br>Possible to get good knowledge of the system. Large funding. Main motive to get over secret info.</li>
</ul>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>终于找到了最合适的文件同步/备份工具</title>
    <url>/blog/2007/05/28/Finally-find-the-most-appropriate-file-synchronization-backup-tools/</url>
    <content><![CDATA[<p>很长时间以来，都为怎么在多台电脑之间同步文件而头痛。使用过不少的同步软件，都有或多或少的不足之处。因为两边的文件都可能被编辑，同步软件必须要足够自动化，能够自动判断同步的方向，只进行增量同步，并且要能够识别出文件的删除，别删了之后一同步又回来了。 </p>
<p>现在终于找到了一个满足要求的软件：<a href="http://www.cis.upenn.edu/~bcpierce/unison/">Unison</a>，经过差不多三个月的使用，感觉相当满意，可以介绍出来了。 </p>
<p>在我看来，Unison的优点有这些： </p>
<ul>
<li>除了本机磁盘同步外，还支持网络同步，可以通过socket通讯方式，而不是靠windows文件共享。我的laptop通过共享copy文件时，偶然会出现出错。Unison还支持ssh，在unix上可以用安全程度较高的ssh。 </li>
<li>有命令行模式，可以通过脚本自动运行。其实Unison本来就是命令行程序，只是提供了GTK的GUI。GTK的界面虽然不太漂亮，但还是很好用的，在GUI模式下，会先把各个文件的同步方向显出出来，可以修改，点击go才执行。 </li>
<li>自动化程度比较高，每次同步完成后会将文件状态记录下来，下次同步的时候就能自动进行增量同步了。只要不是两边同时发生了修改，基本不需要人工干预。 </li>
<li>配置比较灵活，可以按照通配符来忽略某些文件&#x2F;目录。因为Unison原来是unix平台的软件，所以配置也是文件方式的，只习惯于Windows图形界面的人也许会不喜欢。 </li>
<li>支持跨平台同步，包括windows，各种unix，OS-X。这点我用不着，但对于同时使用不同操作系统的人会很有用。 </li>
<li>免费，开源(GPL)。</li>
</ul>
<p>我的工作环境有一台desktop和一台laptop，desktop的性能好些，所以一般都会在desktop上干活，但不在座位上时就只能用laptop，故此两台电脑都要有相同的文件，并且保持同步。现在保持同步的方法是：在desktop上以socket server模式运行unison，一直保持运行；laptop上通过cron在后台定时调用命令行的Unison，一天可以运行多次；如果我需要立即进行同步，就手工运行Unison GUI。 </p>
<p>一些tips： </p>
<ul>
<li>第一次同步会耗很多时间，因为unison要先对所有文件内容进行一次比较。以后的同步，如果在fastcheck模式下就会很快了。一定要记得在配置文件中加上配置：fastcheck &#x3D; yes，否则每次都还是会做全文比较。非windows平台就没有这样的问题，具体看软件文档。 </li>
<li>作为socket server运行：unison -socket <port></li>
<li>命令行模式自动运行(无需人工干预，如果文件有冲突就skip)：unison -batch <profile_name></li>
</ul>
<p>顺便推荐一下这个Windows平台下的<a href="http://aleung.blogbus.com/files/11892516220.zip">cron</a>，一个几十k的小程序，使用起来跟unix的几乎一模一样，很好用。（2007-9-8 补充: 网上cron的页面已经没有了，我已将链接改为本地下载） </p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>第一次打110</title>
    <url>/blog/2007/06/05/The-first-call-110/</url>
    <content><![CDATA[<p>早上9点多钟，经过华景新城天桥看到一伙人在设赌局骗人，几个做势的人拿着一百块钱的票子踊跃下注。有个刚从市场买菜回来的阿婆似乎已经被吸引住了。</p>
<p>以往见到类似情况，最多是心里骂两句骗子，今天我想到了报警。我也想看看110的反应速度到底是怎样的。拿出手机拨打110，一拨就通了，但只是反反复复的播放录音：我们将尽快接通你的电话。一直等了70秒钟左右，听到”接警员忙，请稍后再拨”。失望。再拨打一次，依然是反复的播放录音。等了一分钟，我快要放弃的时候，终于接通了座席，询问了一些基本情况后，告诉我将通知民警。</p>
<p>我倒是很想看看是否真的会派警察过来，出警要等多久的，可是还要上班，不能浪费时间了。</p>
<p>几点感想：</p>
<ul>
<li>电话应答太慢，如果真是危急情况，事情就被耽误了。 </li>
<li>对于这种小case，不需要留下什么个人信息，她只问了我的姓，当然手机号码那边是能看到的。反正就是打个电话，遇到类似情况不妨都打打110。 </li>
<li>最终，接警员只是说会通知民警，没有说是否会马上有警察到现场处理，所以我对于后续的处理还是存疑的。 </li>
<li>接警员连一句谢谢之类的客套话也没有说。也许是觉得我麻烦了他们，应该是我说谢谢才对？我不是说觉得报个警有什么了不起，而是政府部门是否希望公民参与到公共事务之中，培养公民责任感，从这些小细节可见一斑。</li>
</ul>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>Flickr! I wanna Flickr</title>
    <url>/blog/2007/06/24/Flickr-I-wanna-Flickr/</url>
    <content><![CDATA[<p>党和政府出于对广大网民的深切爱护, 于前段时间将大家喜爱的全球影响力最大的在线相册网站 flickr.com 列入了功夫网(ＧＦＷ). 等待了半月有余, 未见有变化, 看来是被功夫网永久性收录了.</p>
<p>我等良民一向坚决支持拥护中央的英明决策，可是无奈我网上的所有照片、配文图表都存放在flickr中. 经过深刻的自我反省和严格的自我审查, 我确认我存放在flickr中的图片并没有反对宪法所确定的基本原则, 危害国家安全，泄露国家秘密，颠覆国家政权，破坏国家统一, 损害国家荣誉和利益, 煽动民族仇恨、民族歧视，破坏民族团结, 破坏国家宗教政策，宣扬邪教和封建迷信, 散布谣言，扰乱社会秩序，破坏社会稳定, 散布淫秽、色情、赌博、暴力、凶杀、恐怖或者教唆犯罪, 侮辱或者诽谤他人，侵害他人合法权益. </p>
<p>为了让各位朋友可以正常浏览我的blog, 提供以下信息: 利用<a href="https://addons.mozilla.org/en-US/firefox/addon/4286/">Access Flickr</a>插件, 可以在<a href="http://www.mozilla.org/firefox/">FireFox</a>浏览器中正常浏览flickr中的图片. 请勿使用此方法浏览其他flickr图片, 看者自负!</p>
<p>另外, 大家请认真学习<a href="http://www.gov.cn/ziliao/flfg/2005-06/14/content_6310.htm">中华人民共和国宪法</a>, 做个知法, 懂法, 守法, 用法的好公民.</p>
]]></content>
      <tags>
        <tag>Software</tag>
        <tag>Anti-GFW</tag>
      </tags>
  </entry>
  <entry>
    <title>实现了我的 I Love Player 了</title>
    <url>/blog/2007/06/28/I-realized-I-Love-Player/</url>
    <content><![CDATA[<p>去年写下关于 <a href="/2006/08/23/I-Love-Audio-Player/">“I Love” audio player</a>的想法，曾想过自己开发的，但我没有开发这方面软件的经验，要学习的东西太多了，也没有时间精力来做。前段时间xlla朋友给我留言，介绍iPod的智能播放列表，我一下子兴趣又上来了，上网再次搜索一番，这次真给我找到了好几款支持智能播放列表的播放器软件，有些功能跟我期望的已经差不多了。我以前就想，不可能没有人想到的:)</p>
<p>第一个是KDE环境下的Amarok，特点是支持智能评分，能根据收听的行为，例如skip到下首歌曲时已播放的百分比，来给歌曲评定分数，而且评分方式是脚本定制的。这跟我期望的功能1（歌曲的喜爱度必须是在播放过程中日积月累的更新）一样了。可是我没有Linux环境，无法试用这个软件。Amarok下个版本计划支持Windows，只能等待了。</p>
<p>第二个是<a href="http://www.musikcube.com/">musikCube</a>，特点是使用嵌入式数据库SQLite来保存歌曲library，包括播放的统计数据，并且通过自定义的SQL查询where子句来生产动态列表，例如最近加入library的50首歌，听得最多的100首，最近一个月没有听过的歌等等，非常灵活。当然，完全不懂SQL语言的人就体会不到它的好处了。</p>
<p>musikCube是Visual C++开发的，open source。我把它的源代码下载来看，觉得代码挺好理解(比foobar2000好很多)，做点小修改不难。于是我写了一个<a href="http://aleung.blogbus.com/files/11829395480.zip">patch</a> (基于musikCube 1.0 final)，实现了智能评分的功能。musikCube的歌曲数据库没有score字段，我不想修改数据库结构，就利用了它的times played字段当成score。每当播放下一首歌的时候，检查前一首歌播放了多少，如果播放了90%以上，score +5，如果少于10%，score -2，少于30%，score -1。总是被skip的歌得分就会很低，利用动态列表挑选出分数高的歌曲，就是我喜欢的歌了。</p>
<p>虽然musikCube不支持profile，但是支持多个library，可以建立多个library，里面是同样的歌曲，但播放统计却是独立的，这样也能满足我的需求2 (在不同环境、不同心情下喜欢的音乐是不一样的，有了profile功能就可以独立累计喜爱度)了。</p>
<p>虽然用起来还是没有我设想中那样简单，但已经大致符合我的期望了。等我使用一段时间再告诉大家效果如何 :)  </p>
<p><a href="http://aleung.blogbus.com/files/11829395480.zip">Patch下载</a>(包括binary和source) </p>
<p><a href="http://www.musikcube.com/page/main/download">musikCube下载</a></p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>How to customize Eclipse</title>
    <url>/blog/2007/07/03/How-to-customize-Eclipse/</url>
    <content><![CDATA[<p>要定制一个Eclipse特别版本非常简单，由于它是完全”绿色”安装的，只需要解开原始发布包，修改里面的配置，重新打包即可。重新打包前，要将configuration目录中的子目录都删除，只保留config.ini文件。</p>
<p>添加plugin，通过菜单的Help - Software Updates - Find and Install进行。</p>
<p>对于eclipse网站下载的Eclipse SDK, 客户化配置应该修改plugins&#x2F;org.eclipse.sdk目录里面的东西.</p>
<ul>
<li>About窗口的内容对应于plugin.properties文件中的设置。(删除configuration目录内容后才能看到变化)</li>
<li>Splash screen 的图片所在目录是在configuration&#x2F;config.ini的osgi.splashPath中指定的。应该是 plugins&#x2F;org.eclipse.platform 目录中的splash.bmp。</li>
<li>Perference选项缺省值的定制在plugin_customization.ini文件中指定。在Eclipse的perference 对话框中将需要改变的值改好，然后在File:Export将perference export到一个efp文件。这个文件是properties文件格式的，用文本编辑器打开它，找出需要定制的项目，去掉前面的&#x2F;instance&#x2F;， copy到plugin_customization.ini文件中。</li>
</ul>
<p>Reference:</p>
<ul>
<li>Eclipse help : Platform Plug-in Developer Guide : Programmer’s Guide : Packaging and delivering Eclipse based product</li>
</ul>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>有关时间管理的东西</title>
    <url>/blog/2007/09/09/What-about-time-management/</url>
    <content><![CDATA[<p>Google calendar 在中国大陆开通了短信提醒的功能，当安排的日程的时间达到时，能够发送提醒短信到手机上，而且还是免费的。但我是使用outlook来管理日程的，以前也试过将outlook日程同步到手机，但SonyEricsson的同步软件真是太烂了，总是出问题，而且同步的准备工作还是嫌麻烦：要么要连上USB线，要么要建立蓝牙连接。我现在的方法是在outlook上安装<a href="http://www.syncmycal.com/">SyncMyCal</a>，配置成与google calendar同步。在outlook上安排好日程后，点击一下outlook toolbar的按钮就可完成同步，时间到了google就会发短信到我手机上，相当方便。SyncMyCal有收费也有免费版本，按我现在的用法，免费版本完全能满足。</p>
<p><em>Update 2008-12-10: Google自己提供了sync工具与outlook同步，用起来很简便。我以前是因为用Windows 2000操作系统，不能安装，所以才用SyncMyCal。Google的sync工具在Google Calendar Help Center可以找到。</em></p>
<p>最近发现了一个有关时间管理、GTD的好blog：<a href="http://www.mifengtd.cn/">褪墨</a>，他现在在号召”<a href="http://www.mifengtd.cn/articles/culture_a_habit_in_month_at_mifengtd.html">一个月养成一个好习惯</a>“。信誓旦旦要改变某个习惯，但过不了多久就放弃，这样的经历相信大家都有过不少，他提出的号召挺有意义的，介绍的如何帮助习惯的养成的一些方法也不错。我也计划了几个要养成的习惯，从八月开始实施。 </p>
<p>最近的工作非常之忙，事情总是忙不过来，时间总是不够用，脑子里充斥着各种要处理的东西，一片混乱。事情越多越是显现出时间规划的重要性，所以最近又重新重视起<a href="http://zh.wikipedia.org/wiki/GTD">GTD</a>来了。虽然一直都有使用todo list，但只有完全将所有待办事情都从脑子里清空，交给一个管理系统，并且完全信赖和依靠这个系统，才可有效起到作用。根据褪墨的介绍，安装了<a href="http://www.thinkingrock.com.au/">ThingingRock</a>这个软件，使用了一段时间下来感觉很不错，这是完全依据GTD的方法论来设计的待办事项管理软件，从操作方式上就在指导你依据GTD的步骤来做了。用起来也相当简单，这符合时间管理工具的基本要求：收集、管理、安排都不能带来太多的额外负担。依靠电脑来记录todo，缺点就是你必须大部分时间都能查看这台电脑才行。安装在手提电脑上，基本还能满足要求，另外我还是与记事本和PocketMod(其实就是每天一张的日程安排小卡片)配合使用。 </p>
<p>Review，我使用了<a href="http://timesnapper.com/">TimeSnapper</a>，因为我的工作大部分都是在电脑上做的，通过回放截屏图像，就能回忆起当时在做些什么了。完成一天工作后，回顾一下时间都花在什么地方，可以帮助更好的规划时间的使用。为了限制上网浏览浪费太多时间，还安装了firefox插件<a href="http://pageaddict.com/">PageAddict</a>，用来统计上网的时间。不过我最近一段时间几乎都没空上网浏览，根本谈不上浪费了。 </p>
]]></content>
      <tags>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>公交查询网站</title>
    <url>/blog/2007/10/01/Bus-inquires-the-website/</url>
    <content><![CDATA[<p>我觉得比较好用的公交查询网站，共享一下。这些网站支持好多城市的，我在广州，因此我选择的依据当然也是根据广州的查询结果了。</p>
<p>共同的功能特点： </p>
<ul>
<li>只要输入地点名称，不需要输入具体的车站名称</li>
<li>有换乘方案，换乘站不一定是同一站，可能需要近距离步行；给出的路线综合多种交通工具，起码有公交车和地铁</li>
<li>查询结果通过短信发送到手机</li>
</ul>
<p>图吧 <a href="http://www.mapbar.com/">MapBar.com </a></p>
<ul>
<li>地名数据丰富，一定程度上支持模糊匹配</li>
<li>相当详细的地图，带有路线、上下车地点标注 （MapBar本来就是电子地图网站）</li>
<li>在查询结果中可以直接跳转到线路查询</li>
</ul>
<p>坐车网 <a href="http://www.zuoche.com/">ZuoChe.com</a></p>
<ul>
<li>查询结果显示步行距离</li>
<li>查询结果包含多种公共交通方案，包括出租车、夜班车，距离近的还能告诉你直接步行（别笑，有的网站的搜索结果可是让你先游车河的），出租车方案会给出大概距离和价钱</li>
<li>地图功能不能用</li>
<li>线路查询只有会员才能使用</li>
</ul>
<p>顺便再说一下，我用过最好用的公交查询网站是斯德哥尔摩的<a href="http://www.sl.se/templates/Page.aspx?id=4645">www.sl.se</a>，出发地、目的地可以精确到门牌号码，查询结果给出能够给出相当准确的步行距离、正常速度所需步行时间，车辆到站时间，行车时间。那儿无论地铁还是巴士都有行车时刻表，算准时间到车站就行。网站查询时，输入不同出发时间会有不同的换乘方案，保证总耗时最短。</p>
]]></content>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Maps 越来越好玩了</title>
    <url>/blog/2007/10/24/Google-Maps-/</url>
    <content><![CDATA[<p>近来<a href="http://maps.google.com/">GoogleMaps</a>（注意，不是中国版的谷歌地图）增加了不少好玩的功能，让用户可以参与其中。</p>
<p>在My Maps里面，创建自己的地图（可以有点、线、面），保存为public，别人就可以搜索到了。你可以试试先搜索广州，将地图定位到广州区域，再搜索”康陵”，在community maps中就能够找到我创建的一个地图了。要切换到satellite模式，否则没啥好看的。目前my maps的功能还是比较简单，如果做完善了也许<a href="http://www.eemap.org/">EEMap</a>之类网站就没有那么好生意了。</p>
<p>Google Maps 现在也可以搜索到网上的kml文件内保存的waypoint信息。例如在广州区域搜索geocaching。</p>
<p>更好玩的东西是在My Maps里面，browse the directory，添加别人做好的mapplet到自己的地图里。各式各样的mapplet，自己去试试吧。</p>
<p>顺便再推荐一个网站：<a href="http://www.mapmyrun.com/">MapMyRun</a>，可以记录并且show你的跑步、骑车、游泳、散步、hiking等等运动的路线，也能够以日历的形式记录下累计运动量是多少，体重变化了多少。它还有一系列的sister网站，包括 MapMyRide, MapMyTri, MapMyHike, MapMyFitness等等，不过可能仅仅是域名区别，帐号是共用的，似乎数据也是共享的。 </p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>“杜东劲诉上海电信”案</title>
    <url>/blog/2007/10/30/-DuDong-lawsuit-with-Shanghai-telecom-case/</url>
    <content><![CDATA[<p>一审判决败诉，判决书见<a href="http://picasaweb.google.com/yetaai/ChinaInternetCensorshipLawsuitAgainstChinaTelecomByYetaai">这里</a></p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>一点严谨的科学态度都没有，算什么科学家</title>
    <url>/blog/2007/12/08/A-strict-scientific-attitude-all-have-no-calculate-what-scientists/</url>
    <content><![CDATA[<p>摘自网易新闻《<a href="http://news.163.com/07/1207/06/3V3C3V5G0001124J.html">欧阳自远强调月照真实 称拼接误差不值一谈</a>》：</p>
<blockquote>
<p><strong>南都</strong>：最近网上对嫦娥月照有一些争论，特别是嫦娥月照比美国拍的”多”了一个陨石坑的问题很多人都关心，有网友说是拼接错误造成的……  </p>
</blockquote>
<blockquote>
<p><strong>欧阳自远</strong>：这个问题分两个层次来讲：第一，中国的照片是真是假，这是原则问题，这是丝毫不容许乱说的，_这是对我们国家的侮辱_，这是对1.7万人工作成果的否定，这是原则问题，我希望你们能够理解这一点。  </p>
</blockquote>
<blockquote>
<p>第二个问题，美国的图是1994年拍到，2005年才校核了，多少年？10年啊，我们这个图才3天啊，对不对？___这技术拼接上有一些具体……因为牵涉到很多很多因素，我认为没什么关系的___，我们还没有最后定型啊，所以我的意思啊，不能以此认为是假的，而且那个事情也没有多大争论的意义。  </p>
</blockquote>
<blockquote>
<p>我认为不要去纠缠这些问题，为什么呢？这个是真假的问题，真假是不允许有任何怀疑的，难道我们会去做假吗？那么多人，这是侮辱啊，所以我要说清楚。  </p>
</blockquote>
<blockquote>
<p><strong>南都</strong>：那就是说，我们在3天内，采用技术拼接出来的图片，可能在拼接过程中有一定瑕疵，但美国人是用10年时间才拼接出来的图片，不一定能说明他……  </p>
</blockquote>
<blockquote>
<p><strong>欧阳自远</strong>：他也有很多问题啊，_我跟你说啊，不要在这个问题上面，我建议你就讲真假问题，不要讲后面的，那个没有多大意思_。  </p>
</blockquote>
<blockquote>
<p><strong>南都</strong>：问题是，在网络上，那个多了的陨石坑大家议论很多……  </p>
</blockquote>
<blockquote>
<p><strong>欧阳</strong>：我告诉你一个问题，阿波罗还是假的呢，你知道现在还在争论这个问题。美国航空航天局对这个问题什么态度？  </p>
</blockquote>
<blockquote>
<p><strong>南都</strong>：回避，不争论。  </p>
</blockquote>
<blockquote>
<p><strong>欧阳自远</strong>：不是回避，是不值得一驳。现在这个问题，我也觉得，不值得一谈，置之不理，为什么？___这种小儿科的问题，不要谈___。另一个问题就是争论，你让网友去争论吧，媒体不必去掺和了，好不好？  </p>
</blockquote>
<blockquote>
<p>___我们就谈真假，不去谈细节了。细节，坦白讲你们搞不懂的___，你知道有多少繁琐的细节啊，你去扯这个扯不清楚啊。 </p>
</blockquote>
<p>图像拼接的细节没有关系？那么花这么多钱发射个嫦娥就是为了开个新闻发布会的？</p>
<p>技术细节别人不懂，就你们专家才懂？只有你们才懂，所以就可以随便糊弄了？看看天文爱好者是怎么分析的：<a href="http://www.astron.sh.cn/cgi-bin/topic.cgi?forum=52&topic=92">疑问：欧阳自远说的嫦娥月照上的新撞击坑</a></p>
<p>首席科学家也就是这么一个德行，中国科学界能搞出什么名堂来？ </p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux的cut命令</title>
    <url>/blog/2008/04/15/Linux-cut-/</url>
    <content><![CDATA[<p>原来有个这么好用的命令：cut</p>
<p>经常都需要分析一个字符串或者文本文件，根据一些规则提取出其中某部分的内容。以前都是用awk来做，但awk太复杂了，每次都要拿手册查半天。今天才知道原来GNU有个叫cut的命令，就可以做这个事情。</p>
<p>例如，获取当前机器的IP地址：</p>
<pre><code>/sbin/ifconfig | grep &#39;inet addr&#39; | grep -v &#39;127.0.0.1&#39; | cut -d: -f2 | cut -d&#39; &#39; -f1
</code></pre>
<p>这个命令在linux和windows的unixutils里都有。</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
      </tags>
  </entry>
  <entry>
    <title>How does Google Map My Location work?</title>
    <url>/blog/2008/05/11/How-does-Google-Map-My-Location-work-/</url>
    <content><![CDATA[<p>在今年初推出的<a href="http://www.google.com/mobile/gmm/index.html">Google Map for Mobile</a>新版本中提供了称为My Location的功能，不需要GPS的支持，也能在地图上显示出当前手机所在的位置。这个功能着实让人眼前一亮。虽然移动网络本身就可以提供定位的能力，但是Google的My Location并不依赖于移动网络定位能力，完全绕开了运营商的控制。</p>
<p>My Location是怎样实现的呢？Google网站上介绍了大致的<a href="http://www.google.com/mobile/gmm/mylocation/index.html">原理</a>：手机接收到移动基站的信号，根据基站的信息可以知道当前处于哪个基站的信号覆盖范围，如果基站的位置是已知的，就可以确定当前的大概位置了。</p>
<p>具体点说，这是一种叫做Cell-Id Positioning Method的技术。GSM网络（3G网络也一样）覆盖由Location Area组成，（Location Area是指mobile terminal可以任意移动而不需要进行location update的区域）。Location Area由LAI（Location Area Id）来标识，LAI由MCC，MNC，LAC组成。其中MCC是3位的Mobile Country Code，中国为460；MNC是2位Mobile Network Code，在国家内分配，中国移动为00；LAC为Location Area Code，在network内分配；可见LAI是全世界唯一的。在一个location area中设置一个或多个基站，基站天线的信号覆盖一定的区域，称为cell（小区）；根据天线的不同，每个基站可能包含1个或多个cell，定向天线的信号覆盖一个扇形范围，多个天线的扇区为不同的cell。每个cell有自己的Cell-Id，结合LAI和Cell-Id，就可以在全球范围内唯一确定一个cell。要进行定位，需要有一个cell坐标数据库，根据cell-id来查找位置信息。</p>
<p>Google的My Location表示格式为myl:MCC:MNC:LAC:CI。在Google Map for Mobile的about信息末尾可以看到。如果显示为myl:n&#x2F;a，那就是手机不能提供cell-id信息。很不幸，我正在用的SonyEricsson w810c就不支持:(</p>
<p>下一个问题就是cell坐标数据是怎么来的？移动网络运营商提供，不是太现实。Google不可能与全球所有的运营商达成协议。特别是在中国，凡是涉及精确地理坐标的数据都属于机密范畴，然而我们发现My Location在广州是可用的，估计其他城市也可以。于是我猜Google是自己采集这些信息的，例如开辆车周围转，记录各处的cell-id。但有点奇怪的是，在广州我们发现在天河软件园得到的位置比较准确，但是在其他地方的就误差很大，并且表示精确度范围的圆圈半径非常大，将半个天河区都包含在内。难道Google只在天河软件园采集了数据，而其他地方没有？</p>
<p>最近，一个同事开发了一个程序，利用手机自带的GPS定位，将cell-id与坐标记录下来。我们讨论的时候才恍然大悟，Google很可能就是这样做的！有些Google Map for Mobile用户的手机是支持GPS的，当这些用户运行Google Map时打开了GPS，坐标数据以及cell-id就会发送到Google的服务器，等于有许多用户在替Google采集数据。在天河软件园的定位准确，就因为我们（当然也可能有其他人）在这里试验Google Map时打开过GPS。在我们这里，支持GPS的手机的拥有率不高，同时又使用Google Map的更少，因此Google掌握到的数据很有限。在没有采集到数据的地方，定位就不准确了。</p>
<p>为了求证，到Google网站上查看，在GoogleMobile的Privacy Policy中找到这样一段话：<em>If you use location-based products and services, such as Google Maps for mobile, you may be sending us location information. This information may reveal your actual location, such as GPS data, or it may not, such as when you submit a partial address to look at a map of the area</em>. 在help中又找到一段话：<em>Google takes geo-contextual information [from anonymous GPS-readings, etc] and associates this information with the cell at that location to develop a database of cell locations</em>. 看来我们的猜想是成立的。其实还可以通过做实验来证明：找一台支持GPS的手机，到一个定位有非常大误差的地方，在Google Map中enable GPS。过一段时间后，例如几天，因为Google处理数据可能有延迟，在关闭GPS的状态下看My Location，如果定位变得准确了就是Google使用了用户手机GPS采集的数据。不过我没有GPS手机，无法做这个实验。</p>
<p>在网上查找资料的过程中发现，其实Cell-id定位并不是一项新技术，不过它与Google Map的海量高清晰度地图结合起来，给业界带来了震撼。在Treo智能手机上，2006年就有国内的爱好者开发了<a href="http://www.palm119.net/blogview.asp?logID=42">手机定位软件</a>，根据cell-id查询到当前位置，不过位置信息是地名，而不是经纬度坐标；Cell-Id对照地名信息的数据库是由用户补充完善的。在网上搜索一下，也可以找到好几个开放的cell-id坐标数据库，例如<a href="http://www.opencellid.org/">OpenCellID</a>，只不过几乎都没有中国大陆的数据。Flickr为了配合ZoneTag（用手机拍照时记录下cell-id，从而可以知道照片拍摄的位置），还提供了<a href="http://developer.yahoo.com/yrb/zonetag/locatecell.html">Cell Location API</a>。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>四川汶川县发生M7.8级地震</title>
    <url>/blog/2008/05/13/Wenchuan-county-sichuan-M7-8-earthquake-happened/</url>
    <content><![CDATA[<p>四川汶川县境内今天14:28发生7.8级地震，震中距离成都市区约90km，距离彭州市区约66km。14:54发生的5.7级余震距离彭州市区约22km。</p>
<p><img src="http://photo1.bababian.com/upload11/20080512/02D8796E47266104909DE6C9CD15F921.jpg"></p>
<p>上图数据来自USGS（US Geological Survey，美国地质勘探局），<a href="http://earthquake.usgs.gov/eqcenter/recenteqsww/Maps/10/105_30.php">这里</a>可以看到此次地震以及余震的信息(一周内有效)。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>关注汶川地震——给民间救援力量一些支持</title>
    <url>/blog/2008/05/16/Attention-to-wenchuan-earthquake-relief-forces-folk-some-support/</url>
    <content><![CDATA[<p>地震发生后，我所在的公司组织捐款。公司承诺员工总共捐出多少钱，公司会再捐出一个同样的数额。员工捐款非常的踊跃，到目前为止，已经募集到很大一笔数额（具体数字就不说了，现在捐款数量的多少在网上变成了道德评判的对象）。</p>
<p>不过我没有选择通过公司的途径来捐款。同事问我为什么呢，通过公司捐，公司会再多出一份钱，灾民能得到更多的帮助啊。我想过这个问题。公司募集到的款项会转交给中国红十字会或者中华慈善总会，这两个机构都基本上是官方性质的，现在社会各界的捐款大部分也是会转交给他们，他们收到的捐款将会非常多。而我选择了<a href="http://www.bullog.cn/blogs/liuyanban/">牛博</a>发起的捐款，我希望能够给民间的救援力量一些微薄的支持。</p>
<p>有时候民间的救援力量可以帮助到一些官方渠道关注不到的地方和人，对于他们，这种帮助不是多一点或者少一点的区别，而是有和没有的区别。</p>
<p>牛博这次捐款的组织者包括了罗永浩（老罗）、<a href="http://www.lianyue.net/blogs/rosu/">连岳</a>、<a href="http://wenyc1230.blog.163.com/">北风</a>、<a href="http://blog.sina.com.cn/twocold">韩寒</a>等等，这些人我虽然不认识，但是可以说熟悉他们。在网络上我知道他们曾经说过什么做过什么，知道他们的想法和他们的做事风格。比起红十字会或者政府部门的那些我不知道的官老爷们，我觉得牛博这帮人更靠谱。而且，他们有人亲临灾区前线去了解信息，组织协调，发放物资，并且不断从前线发回消息，让大家知道情况的进展。</p>
<p>从国际上救援成熟国家的经验看，民间救援力量是很重要的一环，可以补充官方力量的不足，优势互补。而在我们这里连基础都没有。这次牛博的人估计也没有太多的救援经验，因此不一定能在第一线发挥很大作用，但是这可以积累经验推动民间救援的发展。民间救援的发展另一方面会给官方机构带来压力，促进他们的进步。观念的转变总需要一个过程。</p>
<p>牛博捐款的具体信息请看<a href="http://www.bullog.cn/blogs/liuyanban/">牛博公告板</a>，我就不转载过来了，大家需要自行核实信息。</p>
<p>前方发回的信息请关注这几个blog：<a href="http://siyi123123123.spaces.live.com/">创造社新任社长宋石男</a>， <a href="http://blog.sina.com.cn/twocold">韩寒</a>  </p>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>How to allow remote application setting display to the SUSE linux desktop</title>
    <url>/blog/2008/06/17/How-to-allow-remote-application-setting-display-to-the-SUSE-linux-desktop/</url>
    <content><![CDATA[<ol>
<li>Allow remote TCP connection to the X server. You need root privilege to config it.</li>
</ol>
<p>Just run gdmsetup. This will open a window with multiple tabs. In the Security tab, disabled the line that says “Deny TCP connections to the X server”. Close the window and then log out of your current X session. You need to restart gdm for this to work.  The easiest way to do that is to go to a console login, login as root, change to run level 3 (just type “init 3”) and then return to run level 5 (“init 5”) to restart gdm.<br>Ref: <a href="http://www.graphics-muse.org/wp/?p=69">http://www.graphics-muse.org/wp/?p=69</a></p>
<ol start="2">
<li>Add remote host into X server access control</li>
</ol>
<p>Run xhost <em>remote_host_ip</em></p>
<ol start="3">
<li>Set DISPLAY environment variable in remote host before execute the application</li>
</ol>
<p>setenv DISPLAY <em>display_host_ip</em>:0.0</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>Line break in MANIFEST class-path</title>
    <url>/blog/2008/06/18/Line-break-in-MANIFEST-class-path/</url>
    <content><![CDATA[<ol>
<li><p>NO space (at all) after the last jar name of each line; and  </p>
</li>
<li><p>TWO spaces on the next line.<br>This will work:</p>
</li>
</ol>
<p>Class-path: lib&#x2F;1.jar<br>lib&#x2F;2.jar</p>
<p>Anything different from that will cause an exception or some of your jars will not be found on the classpath. </p>
<p>From: <a href="http://www.jroller.com/sgm/entry/manifest_class_path_too_long">http://www.jroller.com/sgm/entry/manifest_class_path_too_long</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>北京奥运开幕式感受</title>
    <url>/blog/2008/08/13/The-opening-ceremony-of-the-Beijing-Olympic-Games-feel/</url>
    <content><![CDATA[<p>看北京奥运开幕式的感觉就像第一次看好莱坞大片 True Lie 时的感觉一样，新奇，刺激。高科技的声光器械加上集权国家一向擅长的大型团体操，确实非常吸引眼球。<br>也许过两届后回头再看，这些声光手段都是司空见惯，就会觉得平淡无奇了，但至少在现在看来，张艺谋是做得很好的。上次雅典奥运开幕式，我觉得是一个难以逾越的高度，很为张艺谋担心，现在看来他还是很好的完成了任务。<br>这开幕式就相当于一部商业大片，看得观众很爽。至于说到艺术性和内涵，我还是喜欢雅典的。</p>
<p>技术方面，这次开幕式LED与大型投影的大量应用到了无处不在的地步。相信相关的应用在将来会越来越普遍，屏幕会越来越大，出现在各种想像不到的地方，随时随地都是绚丽的视频。如果以后街上每个人的衣服上都是不停变幻的图案，也许我们会怀念只有素色的那个年代。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>在线备份</title>
    <url>/blog/2008/09/15/Online-backup/</url>
    <content><![CDATA[<p>以前介绍过文件同步&#x2F;备份工具<a href="http://aleung.blogbus.com/logs/5545100.html">Unison</a>，那是一个在两台电脑之间进行文件双向同步的好工具。不过，Unison同步时需要两台电脑同时开机，并且可以通过网络直接通信。我以前用于办公室内两台电脑的同步，非常方便，不过想将办公室和家里的电脑进行同步(备份)，就做不到了。</p>
<p>尝试了网上的在线文件同步&#x2F;备份&#x2F;分析工具，这样的网站有好多，我并没有仔细研究比较过，现在用的是<a href="http://syncplicity.com/">Syncplicity</a>，感觉功能不错，速度也可以。</p>
<p>使用相当简便，在要同步的电脑上安装一个client，指定哪些目录需要同步，它就会自动将文件上传服务器，或者从服务器下载，就看哪边的版本更新一点。只要连上网，它就在后台运行，不用费心。如果是要手工执行备份的话，往往会忘记的，自动就没有这个问题。一个帐号可以连接多个client(免费账号限制2个)，相当于星形连接，由服务器分发改变了的文件。备份在服务器上的文件可以通过web界面访问。它的FAQ介绍了它有处理冲突的能力：保留所有不同的版本，让用户自己选择。不过，我没有试过，目前我只是用它来做单向备份。Syncplicity能够与GoogleDoc同步，我没有使用GoogleDoc的需要，也懒得试了。</p>
<p>Syncplicity对免费用户提供2GB空间，允许两台电脑进行同步，当然收费版本的限制会放宽了。免费的服务基本上都够用的，需要备份的是些比较重要又经常变化的文件，如果是备份旧东西，不变的，用刻光盘的方式更合适。</p>
<p>给Syncplicity做了这么多广告，是因为：如果我邀请新用户注册，我可以增加100M空间。所以各位记得填写我的邀请信中的号码啊，呵呵。</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>将无线标签用在图书馆中</title>
    <url>/blog/2008/10/24/Will-the-wireless-tags-used-in-the-library/</url>
    <content><![CDATA[<p>看豆瓣的图书馆小组，有人抱怨乱架率太高，找书不容易。我去图书馆的时候也有这样的烦恼，当时就想过，图书馆的乱架问题和找书问题，能不能用科技手段来帮助解决呢？  </p>
<p>目前国内的图书馆藏书都是用条形码标识，如果改用RFID之类的无线标签，除了可以满足外借系统借书还书只用，还可以用来做书架管理，防盗。</p>
<p><strong>防盗</strong> ：在书库出口设置感应器，就像现有的磁条感应一样，假如未办借阅手续的书籍经过，引发告警。不过我不知道RFID的感应距离怎样，还有不知道是否很容易屏蔽，所以可行性不确定。</p>
<p><strong>借书还书</strong>：现在都是需要工作人员手工进行的，用条形码阅读器扫描书籍的条形码以及借书证条形码，完成借书或还书的登记。采用RFID后，会更加简单，只需要将书经过感应区域就可以了。假如书和借书证都带有RFID，甚至可以做到无需工作人员。我想到的有两个方案。</p>
<p>一个是离开书库时将要借的书和书证放上传送带，传送带自动将书送进感应区完成登记，然后送出书库后，读者出库后在外面就可以取回，好像超市收银台一样。如果登记过程出错，例如书证过期或已经借满，机器可以将书推送到一旁，进行人工处理。还书就更简单了，把书往传送带一放就行了。如果过期，自然会记录在书证上，下次借书时交罚款。</p>
<p>另外一种方案是结合防盗系统（假如防盗是可行的），由读者自助操作。读者出书库前，自己将要借的书籍拿到自助借书机前感应一下，完成借书操作，然后直接带出库。如果没办借书手续的书带出库，防盗系统会报警。不过，从成本、安全等方面考虑，书籍上用的应该是只读标签，外借记录不直接保存在标签上，那就要求防盗系统要即时查询一次数据库才能确定这本书是否已经办理了借书手续，查询时间要够快才行。</p>
<p><strong>帮忙找书</strong>：目前找书都是根据图书分类号，到相应的书架寻找。但是同一分类号的书还是很多，往往占了多个书架，看得眼花缭乱都很难找到。图书馆可提供一些手持的寻书器，读者将要找的书的书号输入到寻书器中（或者由电脑查询系统自动输入），读者拿着寻书器到相应书架前，在每排书旁边都扫一遍，当要找的书进入感应范围时，寻书器可通过灯光显示来告之，这样需要肉眼寻找的范围就大大缩小。这个方案的可行的前提是标签的有效感应距离比较短，或者寻书器的感应区域有定向性。</p>
<p><strong>书架整理</strong>：与寻书器类似，图书馆工作人员需要整理书架，找出乱架图书时，将分类号输入扫描器，对书架的每排书扫一遍。当发现不符合分类号的书籍时，扫描器进行提醒， 工作人员就能将这些书挑出来，重新正确归架。</p>
<p>甚至可能在书架上安装感应器，变成智能书架。不过还是有感应距离的问题，距离太大定位不准确，距离太小，需要很多感应器，成本也太高。这个想法似乎不大可行。</p>
<p>我对无线标签并没有什么了解，不知道上面的想法到底有多少是技术上可行的，只不过想到了就记下来。也许早已经有这样的研究甚至应用了，反正我又不是干图书馆这行，我就不去了解了，呵呵。 </p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>将笔记本电脑竖起来</title>
    <url>/blog/2008/11/06/Will-laptops-to-stand-up/</url>
    <content><![CDATA[<p>办公室桌面不够大，总是感觉不够空间。看到instructable网站上的一个<a href="http://www.instructables.com/id/Ergonomic_Laptop_Stand_Made_From_a_Coat_Hanger/">作品</a>，将laptop竖起来摆放，受到启发，琢磨着怎么把自己的笔记本电脑也竖起来。不过，我是通过dock来外接显示器、键盘、鼠标的，这样才不需要经常拔插那一大堆电缆，因此dock要跟laptop一块竖起来才行。</p>
<p>前两天把这个架子做好了，虽然很简单，但已经完全满足要求。主要的材料都是在无意中找到的：夹板是在公司楼下捡的，泡沫是公司新到机器的包装箱里的，恰好合用。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4896788613/"><img src="http://farm5.static.flickr.com/4075/4896788613_aae357206f_z.jpg" alt="laptop_stand"></a></p>
<p>竖起来后，laptop的显示屏恰好与外接显示器一样高，视线在屏幕间切换时比较连贯，看起来更加舒服。</p>
<p>制作过程和更多图片放到<a href="http://www.instructables.com/id/Simple_Laptop_Stand_2/">instructables网站</a>上了。</p>
]]></content>
      <tags>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title>路面显示</title>
    <url>/blog/2008/11/30/Road-show/</url>
    <content><![CDATA[<p>在看过北京奥运开幕式之后，我就想<a href="/blog/2008/08/13/The-opening-ceremony-of-the-Beijing-Olympic-Games-feel/" title="北京奥运开幕式感受">各种各样的视频显示将会无处不在</a>。前几天晚上在天河公园跑步时，突然发现天空中有个闪烁着不同颜色亮光的物体在缓缓移动，咋一看还以为看见了UFO，原来是一个飞艇，但与以往看到的飞艇不同之处在于气囊侧面是一块巨大的显示屏，正在播放视频广告。</p>
<p>继续跑步，看着前方漆黑的路面，我就想，是不是以后整块路面也可以做成显示屏？通过感应人的位置，始终将画面显示在前方一两米的地面上。可以用来做什么？我没有想好，不要用来显示广告就好了：如果是广告，你想不看都不行了，一直在你眼前晃着，恶心死你，除非你不看路。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Java的volatile关键字的作用</title>
    <url>/blog/2012/09/17/Java-volatile-/</url>
    <content><![CDATA[<ul>
<li>Initial: 2008-12-04</li>
<li>Updated: 2012-9-17</li>
</ul>
<p>Java内存模型中，有主内存和每个线程各自的工作内存，虚拟机和硬件可能会让线程工作内存优先存储于寄存器和高速缓存中，以提高性能。</p>
<p>所有变量都存储在主内存中，线程工作内存中保存了此线程使用到的变量的副本。工作内存在线程之间是隔离的，对其他线程不可见。线程对变量的所有操作都必须在工作内存中进行，修改后的变量副本要写回主内存。这样就会出现同一个变量在某个瞬间，在一个线程的工作内存中的值可能与另外一个线程工作内存中的值，或者主内存中的值不一致的情况。</p>
<p>一个变量声明为volatile，就意味着这个变量被修改时其他所有使用到此变量的线程都立即能见到变化（称之为可见性）。具体是在每次使用前都要先刷新，以保证别的线程中的修改已经反映到本线程工作内存中，因此可以保证执行时的一致性。以下例子展现了volatile的作用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StoppableTask</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;  </span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="type">boolean</span> pleaseStop;  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;  </span><br><span class="line">    <span class="keyword">while</span> (!pleaseStop) &#123;  </span><br><span class="line">      <span class="comment">// do some stuff...  </span></span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">tellMeToStop</span><span class="params">()</span> &#123;  </span><br><span class="line">    pleaseStop = <span class="literal">true</span>;  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>假如pleaseStop没有被声明为volatile，线程执行run的时候检查的是自己的副本，就不能及时得知其他线程已经调用tellMeToStop()修改了pleaseStop的值。</p>
<p>Volatile一般情况下并不能代替sychronized，因为volatile不能保证操作的原子性，即使只是i++，实际上也是由多个原子操作组成：read i; inc; write i，假如多个线程同时执行i++，依然可能由于不同线程交替执行而出现写入脏数据的情况。也就是说，如果对变量值的修改需要依赖于变量之前的值，那么volatile不能保证一致性，需要用sychronized，或者使用atomic类型(java.util.concurrent.atomic.*)；而上面的代码例子是可以使用volatile的典型场景。</p>
<p>Volatile的另外一个作用是禁止指令的重排序优化。在一般情况下，Java执行语句的顺序可能会因为自动优化而修改，例如下面的例子，initialized的赋值有可能在doInitialize()之前就执行了，线程B就有可能不会正确的等待初始化完成。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">initialized</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// run in one thread</span></span><br><span class="line">doInitialize();</span><br><span class="line">initialized = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// run in another thread</span></span><br><span class="line"><span class="keyword">while</span> (!initialized) &#123;</span><br><span class="line">  sleep();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>如果将initialized声明为volatile，就能保证它的执行顺序不会被改变（但JavaSE 5之前的版本依然会有问题）。</p>
<p>以前在讲述Java与C++区别的时候，有个著名的例子是double-checked locking在Java中不能使用，就是执行顺序优化造成的问题。但自JavaSE 5起，配合volatile的使用是可以实现double-checked locking的。</p>
<p>Reference：</p>
<ul>
<li><a href="http://www.javamex.com/tutorials/synchronization_volatile.shtml">http://www.javamex.com/tutorials/synchronization_volatile.shtml</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/java/j-jtp06197.html">http://www.ibm.com/developerworks/cn/java/j-jtp06197.html</a></li>
<li><a href="http://book.douban.com/subject/6522893/">深入理解Java虚拟机</a></li>
</ul>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows Vista无法登录招商银行网上银行的问题</title>
    <url>/blog/2009/01/04/Windows-Vista-/</url>
    <content><![CDATA[<p>手提电脑升级到Vista操作系统后，在家里通过ADSL上网，招商银行网上银行无法登录，报告通信出错。运行自带测试程序，发现是与服务器无法进行SSL通信。但是在办公室上网时登录招行网银又很正常。打招行的服务热线，客服让我设置了IE的一些SSL相关选项，没有用。因为办公室网络可用，根据中国电信一贯的不佳记录，我第一时间就是怀疑电信封了ADSL的某些端口，造成ADSL无法使用招行网银。向中国电信投诉，接case的小伙子检查来检查去，都没有发现问题，他说帮我把局端可以换的东西都换过了，设置也全重设过，但都没有用。</p>
<p>跟同事说起，有人告诉我是IE7新增的一个安全选项的影响，将Advance Settings - Security - Check for server certificate revocation选项disable就可以正常使用招行网银了。回家一试，果然就正常了。可是，为什么呢？上网查了一下certificate revocation check的作用，大概的意思就是，SSL通信建立时，服务器需要有有效的安全证书，这个证书是由认证中心(CA)签发的，但是由于某种原因CA会撤销某些已经签发的证书，当IE的这个选项打开时，浏览器就会去CA检查一下服务器的证书是否已经被撤销。那么，看来还是招商银行的问题了，<strong>为什么招行网银服务器的证书会在已撤销列表中？这应该是个很大的安全问题啊</strong>。</p>
<p>至于为什么同样打开Check for server certificate revocation选项，在办公室网络可以正常访问招行网银，我估计那是由于办公室上网要经过proxy，很可能是公司内部的proxy屏蔽了CA的访问，造成浏览器无法得知证书已被撤销。</p>
<p>用Wireshark抓网银登录时的网络流，发现当选项打开时，确实出现了一个HTTP GET <a href="http://crl.verisign.com/Class3InternationalServer.crl">http://crl.verisign.com/Class3InternationalServer.crl</a>请求，请求者是Microsoft-CryptoAPI&#x2F;6.0</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>打造统一的网络信息阅读入口</title>
    <url>/blog/2009/01/16/Make-unified-network-information-reading-entrance/</url>
    <content><![CDATA[<p>自从<a href="http://9.douban.com/">豆瓣9点</a>推出以来，一直都使用9点来阅读blog，都算是忠实用户了。喜欢用9点是因为它具有一定的社会化功能，我可以推荐喜欢的文章，可以看到友邻的推荐，也可以看到9点分类汇总的热点文章，不会错过网络的热点话题。</p>
<p>可是，最近9点的改版确让我不得不放弃它。放弃的原因一方面是我不喜欢新版本中个人订阅的阅读界面的用户体验，另一方面更重要的原因是新版本在移动设备上无非正常阅读，包括手机上的UCWEB，OperaMini和PDA上的Opera for Windows Mobile。阅读blog是我利用上下班以及其他在外的零碎时间的重要手段，因此9点不能在移动设备阅读对我来说是不可接受的。</p>
<p>向豆瓣反馈了意见，但是没有得到回应。不得不另外寻找阅读器了。很多人都喜欢使用<a href="https://www.google.com/reader/">Google Reader</a>，我以前也稍微尝试过，但当时觉得不是很习惯，没有真正使用。这次认真的用了一下，感觉熟悉了之后还是不错的，包括手机上的访问效果也还行。从9点上将订阅列表导入到Google Reader中，打算用一段时间试试效果如何，如果好以后就用它了。</p>
<p>不用9点，就不能在豆瓣上推荐文章了，不过我豆瓣上的友邻也没有几个看9点的，关系不大。Google Reader现在也有了share，但我除了<a href="http://flyisland.blogbus.com/">flyisland</a>外好像也没有别的友邻。另外就是Google Reader没有做热点推荐，这个要看还是可以回去9点看吧。</p>
<p>今天还花了一些时间整理了订阅的feed的tag。我以前为大部分feed都加了tag，是按类别分的，例如”软件开发”、”时评”、”科学”之类，但实际上这些tag的用处不大，因为基本上不会根据分类来阅读。为了在有限时间里面让阅读更有效，这次我为所有订阅的feed都加上了优先级标签，目前分为：Priority High, Priority Middle, Priority Low, PC only Priority High, PC only Priority Middle, PC only Priority Low。PC only的类别是不适合在移动设备上阅读的feed，例如包含很多摄影、图片的，或者是带有很多链接，又或者是需要静下心来阅读的。Google Reader似乎有一定的阅读行为分析功能，使用一段时间之后也许可以根据分析数据调整不同feed的优先级。</p>
<p>Blog是我目前获取信息的很重要的一个途径。我不上门户网站看新闻，那些网站太乱七八糟了；专业门户也看到很少；有些论坛会看一下，也不算太多。基本上，上网看的信息来源除了搜索引擎就是blog了。RSS阅读器可以将blog的内容聚合在一起，阅读的效率和方便程度都提高了很多。现在提供RSS的专业门户网站也越来越多了，虽然一般都只提供摘要信息，但这样也已经可以将RSS阅读器作为一个统一的入口来阅读这些散落在不同网站上的文章。有些论坛也开始提供帖子RSS，这样的论坛还不多，不知道能否成为趋势。我很希望能够将RSS阅读器作为网络上各种信息来源的统一阅读入口，结合优先级设定，可以节省时间也不容易遗漏重要的信息。</p>
<p>目前试用过程中感觉Google Reader的抓取速度好像比9点要快一些，这边看到的新文章9点上还没有。Google应该也不会象豆瓣一样把一些文章给和谐掉，但是，Google Reader本身很可能被整体和谐，这是用Google服务的最大风险。要尽量用HTTPS来访问，降低风险。</p>
<p>另外，推荐一个Firefox插件<a href="https://addons.mozilla.org/en-US/firefox/addon/3362">Update Scanner</a>，它可以监视你指定的网页是否发生了变化，利用它就不需要经常去打开bookmark看关心的网页是否有更新了。</p>
]]></content>
      <tags>
        <tag>Software</tag>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>专利</title>
    <url>/blog/2009/01/18/patent/</url>
    <content><![CDATA[<p>从去年开始，我们作为一个R&amp;D部门—-虽然不是research，只是development而已—-也被摊派了申请专利的任务。当时很多人都觉得，我们的工作都是按照业界成熟的方式去做的，没有太多创新，很难找到什么东西申请专利。可是年底公布我们这年申请到的几个专利时（其实还没有最终批准，但可能性很大，对于我们已经是完成任务了），很多人都惊讶了—-居然这样都能算专利？因为其中的一些，是我们早已熟知的方案，之前已经有使用的了。有一种解释是：专利不一定是非常创新性的东西，别人没有申请过的，都有可能申请，至少是某些国家的专利法是这样规定的。</p>
<p>我有个感觉，目前的专利制度在很大程度上已经不再起到保护创新的作用了，反而更多是大公司竞争与保护的商业手段。例如这个<a href="http://it.solidot.org/article.pl?sid=09/01/17/053236">关于IBM的trim()专利的评论</a>就讽刺得很妙：”我们有数万项专利，你们真的想让我们去翻出7项你们侵犯了专利？或者简单点，给我们2千万美元？”</p>
<p>申请一个专利的手续相当复杂，”养”一个专利更是花费不少，一般人和小企业即使有什么好点子都不容易通过申请专利来保护，更不用说通过申请大量专利来对整个方案进行全面覆盖了。香港就有大学研究人员对媒体说期望政府能够帮助（资助）他们去申请专利。整个专利制度倒是养活了一大批专利工程师和律师吧。</p>
<p>说回来，我今年倒是应该琢磨一下有什么东西可以申请个专利了，一方面赚点奖金，另一方面也可以糊弄下人。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>摄像头做自动监控</title>
    <url>/blog/2009/01/19/Cameras-do-automatic-monitoring/</url>
    <content><![CDATA[<p>我有个摄像头，但我从不视频聊天，没有什么用。今天琢磨着可以用它来搞些什么玩玩，例如做视频监视器。试了几个软件，都可以控制摄像头定时拍摄，或者在检测到画面中有东西中移动的时候启动拍摄，并且可以启动web服务。</p>
<ul>
<li><a href="http://www.supervisioncam.com/">SupervisionCam</a> —- 是共享软件，不注册也可以永久使用，但保存的画面下方叠加了大大的软件名称，还算可以用吧。功能比较全面。 </li>
<li><a href="http://dorgem.sourceforge.net/">Dorgem</a> —- Open source，作者停止开发了，但最后的版本功能也很实用了。 </li>
<li><a href="http://www.yawcam.com/">YAWCAM</a>—- 免费软件。在我的系统中运行出错。</li>
</ul>
<p>Motion detect比较好玩，把摄像头架在阳台，开启软件，然后出门。回来发现拍下了几张照片，邻居出阳台晾衣服被拍摄下来了。其实也就是玩玩，没有什么真正用途。我们普通人也没有什么需要监控的，而且要连着电脑，使用很受限。</p>
<p>定时拍摄，如果画质好的话倒是可以拍些有意思的摄影作品出来，例如环境光线的变化、开花之类，只是摄像头的拍摄效果太差了。想起我的数码相机，查了一下Nikon D70s是支持用电脑通过USB来控制拍摄的，迟些可以试试。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>应对压力</title>
    <url>/blog/2009/01/29/Deal-with-the-stress/</url>
    <content><![CDATA[<p>在应对压力的能力方面，我一直都不大好。一旦工作压力大了，同时要处理的事情多了，就会手忙脚乱，心情烦躁，工作效率也降低，忙乎一天却似乎什么都没有干成。另外睡觉也会一些怪梦，例如要跑步但脚像灌了铅一样，骑车怎么蹬也骑不动。</p>
<p>要应对压力，首先要知道压力是怎么来的，因此我尝试做一些分析。这里并没有给出应对压力的方法，我自己还不知道到底怎么做才对。实际上也不会有一套万能的方法，关键是要学会怎么会分析面临的每个具体问题。</p>
<p>压力，作用在人身上时，体现为焦虑感：还有好多事情没有完成啊，不知道怎么处理啊，所以很担忧，浑身不舒服。但它其实与面临的事情的工作量和难度并没有直接的关系。压力来源于要求和实际（如果已经发生）或者评估（如果还没有发生）的差距。例如要考试了，考试会有成绩的要求，自己心里会有个自我评估，估计自己能够拿到的分数。优等生不怕考试，因为他们自我评估可以拿到高分；如果一个同学的态度是及格万岁，而以他的能力及格没啥问题，他也不会感到考试给他带来压力；面临考试寝食不安的是那些想拿到理想成绩，但又感觉把握不大的人。</p>
<p>要求有来自于外界的，也有来源于自身的。外界的要求来自于社会、家庭、工作等等，自身的要求来自于个人目标。其实最根本的要求都是来自于自身的，也就是自己的人生愿景。例如，社会普遍认为有钱有权是人生成功的唯一标志，但若一个人并不接受这套社会准则，他就不会因为没有成为富豪没有做大官而烦恼。</p>
<p>实际情况或评估又分为自我意识和真实两种，压力来源于要求与自我意识到的情况的差距，而这个自我意识与真实之间又是会有差距的。有些时候我们会低估自己的能力，明明是可以应付到要求的，但自己以为做不到。由于压力和焦虑之下人的应变能力和工作效率是会降低的，有可能因为自我低估而真的导致无法完成要求了。高估开始看起来是好的，它会降低压力，但是到了后期自己意识到真的无法完成要求后，带来的压力更大；失败之后也许会影响自信，造成今后的自我低估。无论是低估还是高估，都需要更加了解自己，对自己有更准确的认识。</p>
<p>有差距，就需要采取行动来应对差距，这些行动基本可以分为两大类：采取行动填补差距，或者放弃。怎么采取行动，是个很大的话题，也是很多情况下唯一的选择，在这里先略过。在合适的时候放弃，应该是应对压力的一个关键，毕竟人的能力是有限的，不可能所有差距都可以填补。放弃就要面临后果，需要将这个后果与自己的人生愿景（这也是个大话题）进行比对，看看这个后果自己是否可以承受，假如不可承受，那还是只能选择行动来填补差距。如果后果是可承受的，也不违背自己的人生基本准则，那就果断放弃吧。决定放弃了，就一定要在内心中说服自己，否则还是会继续焦虑。</p>
<p>另外一种减少压力的途径，就是不接受他人的要求，这与接受了要求再选择放弃是不一样的。例如项目经理说，某某同事病了，他手头上的工作今天一定要完成的，你帮他做了吧。如果能够说服他，我手头上还有一二三四项工作没有完成，你还是让别人干吧。不接受要求，那你就不用靠加班之类的方法来填补这个差距了。假如工作推不掉，项目经理说这工作是你非接不可了，还有一个选择就是放弃：今天就不加班，明天再说，反正项目经理也管不了我的工资。（呵呵，只是打个比方，其实后果还是有的，关键还是看是否可承受，是否违背自己的准则）</p>
<p>草草将自己的想法记录下来，还画了一张mind map。欢迎大家留言探讨，完善想法。</p>
<iframe id='xmindshare_embedviewer' src='http://www.xmind.net/share/_embed/aleung/pressure/' width='900px' height='300px' frameborder='0' scrolling='no'></iframe>
]]></content>
      <tags>
        <tag>PersonalDevelopment</tag>
      </tags>
  </entry>
  <entry>
    <title>建筑的生与灭</title>
    <url>/blog/2009/02/01/The-life-of-the-building-and-destroyed/</url>
    <content><![CDATA[<p>不知道从什么时候开始，喜欢上阅读关于建筑、城市规划之类的书。</p>
<p>但市面上的建筑类的普及性读物基本上都是从美学方面进行介绍的，例如建筑的历史、流派，著名建筑的形态、立面的特色等等。至于建筑的结构、工程、材料、工艺方面的知识就说得甚少。也许是著书者觉得这些知识太过于专业了，外行人不感兴趣，又或者是没有办法将专业知识讲得让外行人也能够明白。</p>
<p>其实，这些工程方面的知识，普通人也会感兴趣的。例如从建筑欣赏方面，结构、材料对建筑美学的影响，为什么有些建筑的形态可以做得那么夸张；地震灾害的时候什么位置是比较安全的，为什么有些房子会倒塌有些没事；甚至具体到自家房子的装修，那些是结构性的不能改动，那些可以做改动而不影响安全，这些有了了解都是很有好处的。在电视上，也看过BBC、Discovery的一些很好的科学节目关于建筑工程的，例如摩天大楼，超级桥梁怎么建造的。</p>
<p>最近终于发现关于建筑技术方面的非常好的普及书籍：《建筑的生与灭》。在图书馆找到的时候发现是一套两册厚厚的书，有点害怕是否能够读得下去。当我翻开第一章开始阅读时，就发现这担心完全是多余的。作者将概念讲得清晰易懂，没有用任何晦涩的专业语汇，对基本概念都作了专门解释，贯穿以大量的经典建筑例子、插图，读起来非常轻松。虽然行文通俗，但是对知识的表达还是非常准确和严谨。能够写出这样的水平的科普文章的作者可是很难得。</p>
<p>书分为两册，分别是《<a href="http://www.douban.com/subject/2066550/">建筑物怎么站起来</a>》和《<a href="http://www.douban.com/subject/2066529/">建筑物怎么倒下去</a>》，我刚刚看完第一册，书从金字塔，大教堂到摩天大楼，大桥，介绍了建筑的结构（通俗的说就是建筑的骨架）的基本知识以及常见的结构类型，兼有对建筑材料（结构用的）和建造方法的介绍。接下来准备看的第二册要讲的就是建筑史上轰动的事故背后的原因。</p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>Robocopy</title>
    <url>/blog/2009/02/03/Robocopy/</url>
    <content><![CDATA[<p>自从使用Windows Vista之后，通过共享网络copy大文件时就经常会出现错误。以前的错误信息是什么没有留意，今天出错后上网搜索了一下错误代码0x800705aa，看到有人说用xcopy的&#x2F;Z参数可以解决。</p>
<p>在Vista中，xcopy被robocopy代替了，两者都是命令行工具。看了一下robocopy的功能挺强，参数很多，不过太不好记了。再找一下，有<a href="http://www.softpedia.com/get/System/OS-Enhancements/RoboCopy-GUI.shtml">Robocopy GUI</a>，将参数按功能归类了，鼠标指上去还有简要说明，这就方便多了。</p>
<p>使用robocopy来copy原来出错那些文件，果然就没有问题了。</p>
]]></content>
      <tags>
        <tag>Software</tag>
      </tags>
  </entry>
  <entry>
    <title>有没有更无聊的？</title>
    <url>/blog/2009/02/05/Do-you-have-a-boring-/</url>
    <content><![CDATA[<p>在<a href="http://aleung.blogbus.com/logs/34064067.html">摄像头做自动监控</a>一文中，我提到了”我从来不用摄像头来視頻窷兲”，发布出来的那几天还是正常的，今天flyisland问我”从来不×××”是什么意思，一看原来是”視頻窷兲”这四个字被屏蔽了。</p>
<p>真是无语，有比这更无聊的吗？我说的又不是琺耣功，又不是㈥④亊件这些有专门含义的敏感词，video chatting只是一种网络通信应用，咱们中国所谓有自主知识产权的3G标准，TD-SCDMA，就可以实现video chatting啊，干嘛不把它禁掉？只能说，在低俗的人眼中什么都是低俗的。</p>
<p>类似的事情比比皆是：在淘宝网收藏了洗车用的水管和喷头，给的tag名字是”水枪”，结果显示出来就变成了”水×××”；在一些论坛里，”靠近”、”依靠”、”操作”、”体操”等单词是显示不出来的，看到的只是”x近”，”依x”，”x作”，”体x”。还有，最近广州发生的手机爆炸致死事件，查出真正原因不是手机爆炸，而是”不锈钢击发装置__”造成的。</p>
<p>文化就是这样被摧残的。台湾打算将正体（我们称为繁体）汉字申请世界遗产，大陆这边不乐意，有专家说要申请也应该是所有汉字作为整体来申请。确实，简体汉字更应该申请做遗产，照这样的趋势下去，汉字都要被消灭了，大家都用<a href="http://www.qccu.cn/">火星文</a>吧。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>防身自卫术</title>
    <url>/blog/2009/02/11/Self-defense-self-defense-was/</url>
    <content><![CDATA[<p>无意中在CCTV看到女子防身自卫术的介绍，没太多技巧，不需要太强体力，不难记，不只是对女子，对文弱书生也有用吧，记录下关键，以备不时之需。</p>
<ul>
<li>头部弱点在眼睛，用两指插眼睛。</li>
<li>躯干弱点在裆部，招式可以用抓&#x2F;顶&#x2F;踢。（应该是只针对男性吧，不过需要对付的应该都是男性）</li>
<li>被对方用手抓&#x2F;捂住时，向外掰其尾指。松手后用上面两招攻击。</li>
<li>出招要快、狠；可声东击西，引开注意力时出击；趁对方短暂失去攻击能力时抓紧时间逃走。</li>
</ul>
]]></content>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>日程管理适合做在哪里: 记事本? PC? PDA? 手机? 手表!</title>
    <url>/blog/2009/02/19/Schedule-management-for-where-notepad-PC-PDA-Mobile-phone-Watch-/</url>
    <content><![CDATA[<p>做日常管理，传统用纸质记事本，电脑化之后是PC，便携设备出现后是PDA和现在流行的智能手机。但其实还有一个很好的途径一直被忽略了，那就是：</p>
<p><a href="http://www.mrjoneswatches.com/average-day/"><img src="/attachments/2009/2/watch.jpg"></a></p>
<p>这是一个很有创意的设计，相信戴起来也很cool，但恐怕实用价值不大：表盘上标的是”a breakdown of what average people do on an average day”，但每个人都有自己的行事方式，没有多少人是一个average的人吧？</p>
<p>除非—-表盘是可以个性化定制的。但是，一个人的时间安排还是会变化的啊。好，扩展一下思路，引入高科技吧：想象一下，上图的表盘并不是印制出来的，而是高分辨率的电子显示屏，将一天的日程安排显示出来；日程安排是通过无线网络与服务器同步的（例如Google Calendar）。</p>
<p>再想象一下使用的场景：你正在休息室喝咖啡，同事冲进去说：”啊，你躲在这里啊，我有个新idea想跟你讨论一下，有空吗？”，你抬起手一看表，”现在九点二十五分，我喝完这杯咖啡九点半要开会，下午也已经有安排了，呃，十一点到十二点是有空的，可以吗？”</p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>地铁安全知多D</title>
    <url>/blog/2009/03/07/The-subway-security-know-more-D/</url>
    <content><![CDATA[<p>今天发现广州地铁在站内广告牌上宣传地铁安全知识，介绍了在危急情况下如何撤离。广州地铁通车这么多年了，我还是第一次看到这方面的信息。重视安全知识的宣传，是件好事。</p>
<p>在地铁列车在隧道内发生事故，特别是火灾之类的，乘客如何快速撤离，是件非常重要的事情，因为火势很容易顺着隧道蔓延，高温和有毒气体无法向四周扩散，更是很快就会包围整个隧道。</p>
<p>地铁一、二号线都是在列车两头司机室前端可以打开一个逃生门，乘客需要走到列车尽头通过司机室再由逃生门离开列车下到隧道地面。需要从两头下车，是因为车厢门打开后就是面向着隧道壁，并没有足够空间供乘客行走。列车车厢地板距离轨道有大概半个人的高差，因此一号线列车打开逃生门后会伸出一块板搭到地面上，形成一个斜坡，并且有扶手（如果我没有看错照片）。正常人应该可以跑下去，行动不便的人也应该还是勉强能够走下去。可是二号线列车的设计就有很大问题了，斜坡变成了一个梯子，从照片上看人还要反过身来面向梯子才能下去。在危急情况下时间就是一切，按照这样爬梯子一车乘客需要多少时间才能疏散完？一列车才两个逃生口啊，事故发生时往往只有一个能用（一头发生事故，当然只能从另外一头离开）。而且，行动不便的人很可能就无法自己下去了，正常的乘客也有可能在忙乱之间摔倒，那将是人踩人的惨剧。一号线列车是西门子的，二号线列车是长春客车厂与庞巴迪合作，都不知道是否国产化设计搞出来的问题。</p>
<p>相比之下，三、四号线就好多了，隧道左侧设置了与车厢地板同高的疏散平台，打开侧面车门就可以沿平台行走。不过平台还是很窄的，一大车的人要沿着这窄窄的平台走到附近的地铁站，要保持好秩序也不容易。要注意的是，特别是四号线，不能跳下轨道。其他的几条已使用地铁线都是架空线供电，但四号线是<a href="http://zh.wikipedia.org/w/index.php?title=%E7%AC%AC%E4%B8%89%E8%BD%A8%E4%BE%9B%E7%94%B5">第三轨供电</a>，在轮轨的外侧有一条供电轨，可是1500V的电压。</p>
<p>从<a href="http://news.dayoo.com/gov/200902/26/36198_5370659.htm">新闻</a>上看，即将开通的五号线也会安装疏散平台。一、二号线估计是因为隧道没有预留宽度，所以无法安装。</p>
<p>顺便show几张照片，是前段时间去参观海瑞克隧道设备公司时拍的，广州地铁的大部分隧道盾构工程所用的盾构机都是由海瑞克提供的。</p>
<p>盾构机前部盾体的结构图：  </p>
<img src="/blog/attachments/2009/3/Herrenknecht1.jpg" class="">

<p>整个盾构机像火车一样很长，一节节台车组成。车间里这台盾构机才刚开始组装，提供给云南的一个水利工程用的，工程师介绍说共有三十多节：</p>
<img src="/blog/attachments/2009/3/Herrenknecht2.jpg" class="">

<p>准备组装的刀盘驱动部分：</p>
<img src="/blog/attachments/2009/3/Herrenknecht3.jpg" class="">

<p>左面是回收回来的旧滚刀，右面是展台上的滚刀，和适合不同地质条件的刀体。岩石就是靠这些滚刀压碎的：</p>
<img src="/blog/attachments/2009/3/Herrenknecht4.jpg" class="">

<p>我参观的时候厂房里没有组装好的机器，从网上找来两张照片。上图看到的是盾构机的前部，红色的刀盘，上面镶嵌的黑色的就是刀具。从照片看似乎就是在我参观的那个车间。下图是一台硬岩掘进机的侧面。</p>
<img src="/blog/attachments/2009/3/Herrenknecht5.jpg" class="">
<img src="/blog/attachments/2009/3/Herrenknecht6.jpg" class="">
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>如何解决冲突</title>
    <url>/blog/2009/03/17/How-to-solve-the-conflict/</url>
    <content><![CDATA[<p>今天参加了一个名为《有效率的会议管理》的培训课程，其中关于如何解决冲突的问题，比较有意义，记录下来。</p>
<p>面临冲突时，一般人有以下几种行为反应的模式：</p>
<ul>
<li>回避型：回避问题，避免与对方发生冲突。但是这并不能解决问题，因为并不接受对方的观点，只是将问题拖延。</li>
<li>竞争型：竭力坚持自己的立场和观点，力图说服对方。</li>
<li>迁就型：放弃自己的立场，迁就对方的意见。与回避的区别在于，迁就是接受对方的观点。</li>
<li>妥协型：求同存异，力求寻找双方观点中一致之处，得到折中的解决方案，而对于不一致的地方双方共同让步。</li>
<li>协作型：开诚布公的阐述自己的观点和担忧的同时，也用心聆听对方的观点，同时考虑自己和对方关切的全部事情；力图通过共同探讨来解决双方的差异，通过合作得到满足各方意愿的解决方法。</li>
</ul>
<p>行为模式没有绝对的好坏之分，但在不同场合下选择不同的行为模式会更合适。将事情的重要性与冲突双方人际关系的重要性作为坐标轴，可以将这5种行为模式的适合情形放在不同的区域。例如，对于工作上的事情，往往重要性比较高，应该采取协作，妥协，竞争几种行为模式；对于家庭的问题，人际关系的保持更加重要，应该采取协作，妥协，迁就几种行为模式。从图中可以看出，协作是最理想的行为模式，如果能够通过协作而解决问题，结果往往可以达到双赢；而回避这种行为模式通常都是需要避免的，因为事情不重要人际关系也不重要的情况实际上不多。(我想到网上交流时，也许可以选择回避型的行为模式，看网上的骂架有多少是有意义的？)</p>
<p><a href="http://www.flickr.com/photos/leoliang/4897373666/"><img src="http://farm5.static.flickr.com/4140/4897373666_2c531317eb_z.jpg" alt="conflict"></a></p>
<p>每个人通常会同时具备多种行为模式，但以其中的一种或几种占优势。例如有人遇到冲突总是很强势，一般会表现出竞争型模式，有些人面临冲突会倾向于妥协或迁就。虽然有上面的适合情形的分析，但冲突发生时，人们往往会以固有的优势模式来做出反应。</p>
<p>对于领导人才，最理想的模式是”协作-妥协-竞争”，最长于通过协作方式来解决问题，如果协作不能生效，转而寻找妥协的解决方案，依然未果则采取竞争性行为模式，强势压倒对方。</p>
<p>要以协作的方式解决冲突，在冲突发生时就需要停下来问问自己：</p>
<ul>
<li>Why is he&#x2F;she acting like this way?</li>
<li>What are our common interests?</li>
<li>What would be the consequences if we come to an agreement?</li>
</ul>
<p>其实关键就在于尽可能寻找一个满足双方interest的双赢的方案。</p>
<p>另外，协作型的人在冲突发生时往往会充当一个有耐心的教育者。</p>
<p>根据测试的结果，我最强的模式是竞争型，然后表现出一定的协作型和回避型，而迁就和妥协就很弱。有些同事对我是竞争型的感到有点奇怪，确实，我很多时候表现得都不强势。自己分析了一下，我如果在对自己的观点十分有把握的时候，我会非常的坚持自己的观点，丝毫都不让步。但是，我对自己的观点的把握不够大的时候，就不是这样了，我希望自己坚持的东西是100%正确的。特别是在我不熟悉的领域，会没有什么观点。采取竞争型的行为模式，虽然过去的经验中大多数最终都证明我是正确的，但这样会对人际关系带来一定的影响。</p>
<p>分析下来，自己需要在这些方面做出改进：</p>
<ol>
<li>多尝试使用协作的方式解决问题，提高这方面的能力。主要是要倾听对方的观点，了解对方观点背后所关切的东西，通过换位思考来寻找对双方都有利的解决方案。</li>
<li>在事情的重要性不是那么高的时候，可以妥协，得到折中的解决方法，而不一定非要对方完全接受自己的观点。</li>
<li>即使在没有十足把握的情况下，也应该积极的表达出自己的观点。自己不一定完全正确，但这时候对方往往也不见得就正确。这样才有助于共同找到最优的解决方案。</li>
</ol>
]]></content>
      <tags>
        <tag>PersonalDevelopment</tag>
      </tags>
  </entry>
  <entry>
    <title>为什么不能合在一起</title>
    <url>/blog/2009/03/17/Why-can-t-together/</url>
    <content><![CDATA[<p>白鸦在他的<a href="http://uicom.net/blog/?p=818">blog</a>上说，日历(calendar)和任务(task, todo)这两样东西为什么要分成两个独立功能，而不能合到一起？ 对此，我是有同感的。</p>
<p>在我的日常事务管理流程中，会将所有要做的事情都记录在todo list中，然后每天会做时间规划，根据todo list里面任务的优先级、due date决定当天需要做的事情，并且在日历中计划出处理这些事情的时间。当然，如果是会议请求，outlook就已经自动把它放在日历里面了。事情完成后，到todo list中将相应任务设置为completed。实际的执行过程中，时间安排可能会做出改变，我把日历里的项目调整为实际耗用的时间。这样，事务的管理、时间安排、时间耗用的跟踪都在todo list和日历这两个系统中完成了。</p>
<p>但是，分为两个系统，还是有麻烦之处：我必须同时查看todo list和日历，才能进行时间的安排；需要将todo list里面已经存在的任务手工填写到日历中。实际上，可以认为任务和日历中的事件(event)本质上是相同的东西：都是需要完成的一些事情。任务安排了具体时间之后就变成了日历中的事件。如果要将两者合并，属性上可以做这样一些设计：</p>
<table>
<thead>
<tr>
<th>统一后的属性</th>
<th>原Todo中的属性</th>
<th>原Calendar中的属性</th>
</tr>
</thead>
<tbody><tr>
<td>Subject &#x2F; Description</td>
<td>Subject &#x2F; Description</td>
<td>Subject &#x2F; Description</td>
</tr>
<tr>
<td>Due date</td>
<td>Due date</td>
<td></td>
</tr>
<tr>
<td>Start date</td>
<td>Start date</td>
<td></td>
</tr>
<tr>
<td>Complete status</td>
<td>Complete status</td>
<td></td>
</tr>
<tr>
<td>Estimation</td>
<td>Estimation</td>
<td>作为缺省的duration</td>
</tr>
<tr>
<td>Repeat</td>
<td>Repeat</td>
<td>Repeat</td>
</tr>
<tr>
<td>Start time &#x2F; End time</td>
<td>Start time &#x2F; End time</td>
<td></td>
</tr>
<tr>
<td>Where</td>
<td>Where (不是所有todo软件都有此属性)</td>
<td>Where</td>
</tr>
<tr>
<td>Priority</td>
<td>Priority</td>
<td></td>
</tr>
</tbody></table>
<p>还有其他的一些属性就不一一列出了，但已经可见两者其实大部分都是重叠的。</p>
<p>两者合并后，在展现上，能够将一天里已经安排好具体时间的事件，和没有安排具体时间，但是需要在这天内做（根据Start date和Due date）的任务显示在同一界面上，什么时候该做什么就一目了然了。在操作上，将一个任务拖放到日历中，或者输入开始结束时间，就能为任务安排计划的执行时间，并且显示在日历中。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>Android手机G1入手感受</title>
    <url>/blog/2009/04/05/Android-G1-/</url>
    <content><![CDATA[<p>一直关注Google Android系统的手机，自从去年10月底首款机型HTC G1正式发售，就有购买的意欲。今年春节后开始学习Android软件的开发，本来打算坚持到首个程序开发完成后再买手机的，可最后还是没有忍住，提前买了回来。</p>
<p>淘宝网购，包邮包解锁价2770，美版黑色。虽然很多人说G1这款机的硬件不太好，例如外形不够漂亮、做工不够精致、性能不够好、电池不耐用，但我觉得这个价位还算是可以接受的。</p>
<p>这台G1已经玩了三天，同时也借了一个iPhone 3G回来做对比，现在大致有些了解，可以说说感受了。</p>
<p><em>Update 2009-6-14：</em> G1 手机已经用了差不多三个月，期间系统升了一次级，软件应用也不断更新，现在是时候对当初写的入手感受做些补充了。</p>
<h2 id="G1满足我的需求"><a href="#G1满足我的需求" class="headerlink" title="G1满足我的需求"></a>G1满足我的需求</h2><p>先从我自己关注的几个方面说起。</p>
<h3 id="上网浏览："><a href="#上网浏览：" class="headerlink" title="上网浏览："></a>上网浏览：</h3><p>Android的browser完全支持HTML和JavaScript，对于网页的浏览效果与PC的浏览器基本相同，体验相当好。我一般要用手机上网站都是要查资料，浏览器的兼容性好就意味着减少了要看某个网站却不能正常显示的问题。</p>
<p>另一方面，我用手机上网用得最多的就是看GoogleReader，GoogleReader在Android浏览器中的使用体验跟PC上差不了太多，不过我嫌它字体太小了，另外装了一个软件NewsRob。NewsRob是专门用于阅读GoogleReader的工具，我喜欢它可以缩放字体，另外感觉它打开feed的速度也比浏览器中快一些。</p>
<p><em>Update：</em> NewsRob会耗用大量的网络流量，作者说是Google Reader API的限制造成的。所以只好忍受Google Reader的小字体了，给Google提了意见，但也没有得到反馈。  </p>
<p>但我对Android的浏览器不满意的地方是切换窗口麻烦了一点，需要先按menu键，再从弹出的菜单中选择Window，不如iPhone直接显示在屏幕最底的工具条方便。</p>
<p><em>Update：</em> <a href="http://www.kolbysoft.com/">Steel</a>是第三方开发的浏览器，据说用的是相同的内核，但提供了不同的用户操作界面，使用起来方便一些。我已经用它代替了自带的浏览器。  </p>
<h3 id="定位："><a href="#定位：" class="headerlink" title="定位："></a>定位：</h3><p>在Google Map中，支持通过GPS定位和通过移动网络定位。G1的GPS定位精度一般般，大概差一两栋楼左右吧，对于城市中的导航是足够了。我说的一般般是与用惯的Garmin GPS来对比的，手持机的效果当然要比手机内置的要好得多了。我很喜欢的倒是它的移动网络定位功能（包括手机网络和wifi，但在广州，wifi热点太少，用不上），在城市中什么地方都能得到一个大概靠谱的位置，例如室内、地下、四周全是高楼的地方，这些靠GPS卫星是无法定位的。所谓靠谱，就是你可以至少知道现在是在广州图书馆附近，或者东山口附近。这对于自己熟悉的地方意义不大，但对于一个外地人来说就会很有用了。</p>
<p><em>Update：</em> 升级1.5（Cupcake）之后，A-GPS的效果大大改善，在只能看到狭窄天空的环境下，都能在几秒钟内定位，如果是使用普通GPS等几分钟都不一定能锁定位置。当然，这种环境下的定位准确度不高，但对于城市应用来说，一般能确定到在哪条街道上都足够了，而能够定位和快速定位才是更重要的。（什么是A-GPS，可看<a href="http://aleung.blogbus.com/logs/40220815.html">这篇文章</a>）</p>
<p>不过，无论是GPS定位还是网络定位，都一定要用卫星图模式，不要用地图模式，因为地图加入了人为的位置误差，那个误差大到足以使定位功能变得毫无意义。网上很多人埋怨G1定位不准，Google和HTC也真冤枉，给你一张地图，但是不能让你知道自己在地图上的准确位置，这样的规定也只有中国sb政府做得出来。</p>
<p><em>Update：</em> 为了解决这个问题，我专门写了一个应用软件<a href="https://sites.google.com/site/hereimapp">HereIm!</a></p>
<h3 id="应用软件："><a href="#应用软件：" class="headerlink" title="应用软件："></a>应用软件：</h3><p>Android是基于Linux的操作系统，软件开发使用的是Java语言，不过运行平台不是JVM而是Google自己搞的Dalvik。Java语言加上差不多全套JDK API，使得Android软件开发的门槛很低。从硬件上看，一台手机基本上就是一台小电脑了，运算能力、输入、显示、网络，都不缺。再加上market的商业模式，应用软件方面应该不成问题，能有的软件都会有的，最多是时间问题。</p>
<p>我关心的PIM应用中，Android内置的联系人、邮件、日历，分别与Google Contact、Gmail、Google Calendar完全同步，对于Google用户方便得不得了。Task(todo)管理我原来用的是RememberTheMilk(RTM)，在Android上我选择了Astrid，能够与RTM同步，初步感觉效果还行。Notes方面的软件还没有装，暂时还没有需要，我始终担心在手机上输入的便利性还是不够，可能还是要靠纸和笔。</p>
<p><em>Update：</em> 我觉得任务管理用手机还是不够方便，所以大部分时候还是在PC上用RememberTheMilk（RTM），反正我基本是PC不离身，RTM通过Google Gear支持离线使用，用起来跟本地软件差不多了。手机上通常还是查看任务为主，Astrid用了一阵子，老是在半夜(0:00)作任务提醒很恼火，又无法disable，于是放弃了。现在用RTM Tasks，需要在线才能用的，无所谓了，手机随时可以上网，用了G1之后深刻感受到移动之中永远在线是多么的方便。  </p>
<p>另外一个很有用的软件就是字典了，装了WordMate，支持StarDict的词库格式。还有个超级强大的计算器handyCalc，从单位换算、四则运算、科学计算到解方程都无所不能。</p>
<p>到目前为止，我安装的所有软件都是从Market上直接下载的free软件。我觉得这种方式非常方便，如果日后Android能够进入中国市场，开放收费软件的下载，如果价钱不贵，我想合适的我也会买。</p>
<p><em>Update：</em> 不时查看Market，看着各种类型的软件不断增加，装上的软件也在不断更新，功能完善。我对现在Android的应用已经很满意，基本上想要的软件都有了。</p>
<h2 id="与iPhone的对比"><a href="#与iPhone的对比" class="headerlink" title="与iPhone的对比"></a>与iPhone的对比</h2><p>作为两个有比较高相似度的产品，iPhone往往会用来与G1作对比。两款机我都只是玩了两三天，我能说的只是一个初步印象。</p>
<h3 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h3><p>两者的像素都是480*320，G1的面积稍小一点，本来应该画面更加精细才对，但是跟iPhone一对比，iPhone的就是抢眼很多。我也说不出来是因为硬件差别造成的色彩更艳丽？还是因为图标的设计更cool？总之，Apple产品的cool是骨子里散发出来的，不服不行。G1的显示效果大概就是中规中矩吧。</p>
<h3 id="触摸屏"><a href="#触摸屏" class="headerlink" title="触摸屏"></a>触摸屏</h3><p>两者都是电容式的触摸屏，不是压力感应的，因此笔或者指甲是感应不到的，需要用手指肚来触摸。G1的触摸灵敏度和准确性不怎么理想，对于小的按钮很容易会按不准，而iPhone的触摸位置感应得比较精确。再加上G1的屏幕比iPhone小，如果同样的界面布局，G1的按钮就会显示得小一些，因此而这方面iPhone的使用体验比G1好很多。</p>
<p><em>Update：</em> 升级1.5（Cupcake）之后，触控的敏感度和准确度大为改善。1.5也提供了屏幕键盘，使用的效果很好，我感觉差不多赶上iPhone的水平了。</p>
<p>另一方面就是iPhone的招牌本领多点触摸，在某些场景中控制起来很方便，例如缩放用两个指头就能搞掂。这是Apple的专利，Android没法增加这项功能，虽然有些非官方发布的包已经的带有多点触摸的支持。</p>
<h3 id="重力感应"><a href="#重力感应" class="headerlink" title="重力感应"></a>重力感应</h3><p>这个估计以后会变成手机的必备功能了。G1也支持重力感应，就看程序怎么用。现在G1的大部分软件都不会根据重力感应来切换横竖屏的，那是因为G1有侧滑打开的键盘，它是当打开键盘时横屏显示。</p>
<p><em>Update：</em> 1.5（Cupcake）增加了重力感应切换横竖屏的功能，不过我不喜欢用，把它disable了。打开键盘横屏，关上键盘竖屏，很符合使用习惯。（我不在手机上看video，所以没必要横屏）</p>
<h3 id="控制界面以及风格"><a href="#控制界面以及风格" class="headerlink" title="控制界面以及风格"></a>控制界面以及风格</h3><p>iPhone的面板非常简洁，物理按钮只有一个，大部分情况是作为home键，软件的功能都要靠屏幕显示的按钮来触摸控制。这应该是Apple一贯简洁的设计哲学了，当年Mac的单键鼠标我就根本不会用。相比之下Android的控制方式要丰富好多：物理按键有home、back、可按压的滚轮、menu，屏幕上有通过menu按键打开的菜单、通过长按屏幕触发的菜单。使用物理按键还是屏幕按钮只是设计风格问题，各有长短，iPhone的屏幕大，触控精确，在界面上多显示一点按钮也问题不大。不过我觉得长按屏幕触发菜单是很方便的控制手段，不知道为什么iPhone没有提供。</p>
<p>我不太喜欢的其实还是在于iPhone软件的可控制性不足，我知道这也是受它简洁的设计哲学所指导的，有些不常用的功能、大部分人不需要更改的设置，就不提供出来。但我觉得这简洁得有点太过分了，Google做的东西界面也是比较简洁的，但需要的东西还是能找到。</p>
<p>具些例子：iPhone的呼叫转移只能设置无条件转移，无法设置遇忙转移、未应答转移。如果想设，就只能通过**61…之类的服务代码来设，谁能记得？iPhone 3G跟G1一样支持GPS定位、移动网络定位，但用户无法选择采用哪种方式，似乎也不能知道目前的位置是通过哪种方式取得的。iPhone的浏览器中对于链接，没有新窗口打开、保存之类的功能。</p>
<h3 id="应用及游戏"><a href="#应用及游戏" class="headerlink" title="应用及游戏"></a>应用及游戏</h3><p>For iPhone的应用软件和游戏非常非常多，而且很多都很有创意。目前for Android的软件数量比起iPhone来说少很多，游戏更是没有多少特别出彩的。不过Android正式发布的时间还不算长，目前也已经见到一些很有创意的for Android应用了，相信以后会越来越多。</p>
<h2 id="目前发现的缺点"><a href="#目前发现的缺点" class="headerlink" title="目前发现的缺点"></a>目前发现的缺点</h2><p>目前使用下来，G1主要的问题有下面几个。</p>
<h3 id="网络流量消耗大"><a href="#网络流量消耗大" class="headerlink" title="网络流量消耗大"></a>网络流量消耗大</h3><p>如果套餐是无限数据流量的就不用考虑这个问题了，但运营商可没有这么大方。网上很多人都说使用G1几天下来就用掉了几百元的GPRS流量，我今早也发现昨天一天的流量居然已经超过80M。因为Android内置的mail、contact、calendar会自动网络同步数据，系统会自动检查更新，自己安装的一些软件也会与网络同步，因此除了正常使用产生的流量外，还会有好多莫名其妙的流量。需要安装NetMeter、NetCounter软件来监控流量大小，不过现在好像也还没有办法能够确定具体哪个程序消耗了多少流量，所以也还是只能猜。例如我通过NetMeter的流量曲线发现每个小时就有一次一个尖峰，后来发现我把GoogleReader阅读工具NewsRob设置为每小时自动同步了，把这个取消之后似乎就没有耗那么多流量了。</p>
<p>我现在的经验就是不需要自动同步的就不要设置自动同步，例如阅读器、任务管理之类的，用的时候手工同步一下也很快，我一般不需要用手机收邮件，也无需自动同步了。如果还是找不出什么软件”偷走”了流量，就用APNdroid或者DroidSans Tweak Lite软件，在不需要用网络时将APN取消掉，这样数据网络就不通了。</p>
<p><em>Update：</em> 后来确认耗流量的罪魁祸首就是NewsRob。我一般上下班坐车看GoogleReader一个多小时，打开各种同步，偶然用maps，软件也是手机直接下载，大概每天流量4～8M，这样一个月下来200M左右，还可以接受。毕竟移动在线所带来的方便是巨大的。</p>
<h3 id="电量不耐用"><a href="#电量不耐用" class="headerlink" title="电量不耐用"></a>电量不耐用</h3><p>据说充一次电一般情况下只能用一天，我没有测试过最长可用时间，反正看到电量显示下降得很快。我都是一有机会就充电，反正USB线也方便。</p>
<h3 id="没有系统级中文输入法"><a href="#没有系统级中文输入法" class="headerlink" title="没有系统级中文输入法"></a>没有系统级中文输入法</h3><p>Android的输入法框架还没有正式发布（测试版本已经有了，估计不用等太久），因此无法输入中文。目前的解决方法是另外安装一个内置中文输入法的发短信的软件，例如aPowerSms。其他软件的中文输入也可以通过从aPowerSms中copy-paste过来。</p>
<p><em>Update：</em> 1.5（Cupcake）提供输入法框架了，也有了Google拼音输入和其他一些中文输入法，中文输入不再是问题。另外，屏幕键盘也很好用，输入的东西不多时都不需要推开物理键盘了。因此，G2不带物理键盘用起来应该也没有什么问题。</p>
<p><em>Update：</em> 新发现问题：</p>
<h3 id="内存不够大"><a href="#内存不够大" class="headerlink" title="内存不够大"></a>内存不够大</h3><p>装了系统后剩下的可用内存70～80M左右，装了各种软件后现在就只剩10M了。软件狂人就不能无限制的安装软件。有hack可以将软件装到sd卡，但需要刷机。而且卡也必须是高速卡，我用的是买机附带的普通卡，就没有搞app2sd。</p>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>从目前的使用来看，我相当满意这台手机。对于一个G粉，兼网络依赖者，这是一台值得拥有的手机。但若用户本身并没有使用Google的服务的习惯，或者很少使用网络应用，那Android手机就没有太多优势了。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>写了个软件，期望可解决Android中地图偏移的问题</title>
    <url>/blog/2009/04/07/To-write-software-expected-to-solve-the-problem-of-migration-in-Android-map/</url>
    <content><![CDATA[<p>这两天用着G1的my location功能，发现真是很爽，即使不开GPS，单独依靠移动网络来定位在很多地方都已经相当准确，往往已经到了一个住宅小区的精度。但是地图模式的人为偏移就令人非常懊恼，在广州区域内偏差600多米，明明在天河公园东面它显示到西门那边。</p>
<p>Google地图加入的人为偏移是由于中国测绘法规的限制而加入的，这样造成my location定出来的位置在地图上偏差太远，已经失去使用价值了。而卫星图是没有偏差的，这就是为什么大家发现地图(map)模式误差大，卫星模式误差小的原因。  </p>
<p>在电脑上打开Google Map，对于一个标志性地方，在地图与卫星图上各标一个waypoint，比较两个坐标，就可以知道地图的偏差有多大。经过试验，发现在一个区域内（例如整个广州市），偏差基本上是固定的，而不同城市的偏差就不同了。  </p>
<p>利用这个特性，对一个区域的偏差进行测量校准后，整个区域的定位都能够根据这个校准值来校准。如果能够将各人在不同地方测得的校准值共享在网络上，这个手机的定位功能就会有实用价值了。  </p>
<img src="/blog/attachments/2009/4/HereIm.jpg" class="right">

<p>今天先写了个程序实现了my location的校准显示，将广州市的校准值（初步测试发现对广东省范围都适用）内置在程序里了。后面我会继续改进这个程序，让校准值可以设置，期望最后能做到在网络上同步。</p>
<p>程序的功能很简单，就是显示地图，并且将校准后的my location蓝点显示在地图上，也可以打开系统Map软件，打开后校准后的my location在屏幕正中心。</p>
<p>Update 2009-4-20：</p>
<p>软件改名为Here I’m!，并已建立专门的网站。下载和更新请到 <a href="http://sites.google.com/site/hereimapp/">http://sites.google.com/site/hereimapp/</a></p>
<p>Update 2012-7:</p>
<p>后来版本的 Google Maps 已内置纠正偏移（好像是只对中国大陆手机用户生效），HereI’m! 软件已下架很久了。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Android</tag>
        <tag>MyWork</tag>
      </tags>
  </entry>
  <entry>
    <title>Better My Location, 准确定位当前位置</title>
    <url>/blog/2009/04/19/Better-My-Location-/</url>
    <content><![CDATA[<img src="/blog/attachments/2009/4/HereIm.jpg" class="right">

<p><strong>Better My Location</strong> （现已改名为HereIm!）是适用于 Google Android 手机的工具软件，利用它可以方便准确的得知自己目前所处的位置，并在地图上标志出来。它可以解决Google中国地图偏移的问题，比系统自带的地图定位更加准确和方便。</p>
<h2 id="下载-x2F-版本更新记录"><a href="#下载-x2F-版本更新记录" class="headerlink" title="下载 &#x2F; 版本更新记录"></a>下载 &#x2F; 版本更新记录</h2><p>安装：在Android Market搜索 “HereIm”</p>
<p>软件网站：<a href="http://sites.google.com/site/hereimapp/">http://sites.google.com/site/hereimapp/</a> （需要翻墙）</p>
<h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="地图校准"><a href="#地图校准" class="headerlink" title="地图校准"></a>地图校准</h3><p>地图有多种校准模式：Manually Calibrate为手工校准模式，需要用户先自行校准地图再使用。其他为中国几大城市的预设校准数据，在它们附近的地域也大致适用，可以选择最接近的一个。<br>手 工校准，在菜单中选Calibrate，然后现在卫星图上找到一个你知道的标志性地点（路口是一个好的选择），拖动地图使这个地点位于十字光标正中下，接 下来切到地图模式，同样也找到这个地点，拖到光标中心。最好开始先将地图缩小一点来校准，初步找到位置后再放大地图微调位置，可能需要反复几次才能准确校 准。最后点Done。<br>目前软件只会保存最后一次校准的参数。<br>注意：模式切换或手工校准后，需要手机收到位置更新之后，新校准才会生效。如果打开了GPS，位置会更新得很快，但若没有打开GPS，也许要移动相当一段距离后才能看出效果。  </p>
<h3 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h3><p>菜单中选择 My Location，就会在地图中标记出当前所处位置，并且显示街道地址（不一定很准确，可作为参考）。<br>如 果定位不成功，请检查你是否已经打开了手机的定位功能。方法是：home按钮 - menu按钮 - settings - security &amp; location，将use wireless networks选上，enable GPS satellites按你自己需要决定选不选。<br>wirelessnetworks在任何地方只有有手机信号基本都能立即定位，但不够准确，有可能 差一两条街；GPS定位很准，能到几十米，但要在天空开阔的地方才能收到足够数量的卫星，而且也要等比较久才能锁定卫星信号，屏幕顶上的绿色卫星天线图标 长亮不闪烁时才表示GPS定位成功。  </p>
<h3 id="用手机自带地图显示当前位置"><a href="#用手机自带地图显示当前位置" class="headerlink" title="用手机自带地图显示当前位置"></a>用手机自带地图显示当前位置</h3><p>菜单选择”open in map app”，会切换到手机自带的地图软件，这时屏幕正中间就是当前位置。要注意，它的蓝点位置还是偏的。校准仅仅在 Better My Location 中有效。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Android</tag>
        <tag>MyWork</tag>
      </tags>
  </entry>
  <entry>
    <title>无意插柳</title>
    <url>/blog/2009/04/20/Inserted-liu-had-no-intention-of/</url>
    <content><![CDATA[<p>春节后开始学习Android软件开发，断断续续搞了差不多两个月的一个程序在完成了一半之后暂停了下来，反而是因为<a href="http://aleung.blogbus.com/logs/37558170.html">用得不爽一时兴起而写</a>的校正中国地图偏移的软件不断添加新功能发布新版本。</p>
<p>今天把软件改了个名字，由 Better My Location 改为 Here I’m!，应该会更顺口和好记一些。不过，这个名字不好的地方就是太常用了，肯定无法出现在搜索引擎的开头几页。另外也把软件介绍的文案更新了一部分，目的是要把软件的功能更清晰的表达出来（不知道是否达到效果了，欢迎提意见）。还花了几个小时弄了个漂亮一些的logo，不是搞设计的，真是赶鸭子上架啊。</p>
<p>考虑到blog的形式不是太合适做软件的发布，到Google Sites上为它做个了site：<a href="http://sites.google.com/site/hereimapp/">http://sites.google.com/site/hereimapp/</a>。HereIm这个名字不能注册，只好用HereImApp。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Android</tag>
        <tag>MyWork</tag>
      </tags>
  </entry>
  <entry>
    <title>楼宇废水再用系统</title>
    <url>/blog/2009/04/24/Building-wastewater-with-system-again/</url>
    <content><![CDATA[<p>我一直都觉得用干净的水冲厕所很耗费水资源，但用过的水又很难收集起来，即使想重用也没办法或者很不方便。</p>
<p>有些城市是专门铺设了另一套水网，用海水来冲厕所。但这受地理条件限制，另外管网铺设、加压等等的建设维护成本都不低。</p>
<p>网上看到一个<a href="http://sites.google.com/site/simonspagesproject/Home/grey-water-system">Home Made Grey Water System</a>方案，将住宅内的废水收集再用。但它需要用水泵将废水抽上屋顶水箱，需要额外的能源。受到这个方案的启发，我想到了用于高层（多层）楼宇的废水再用方案。</p>
<p>在高层楼宇中，每层在天花板位置都设置一个废水收集箱，可重用的废水进入专门的排水管道，这些水会注入下一层的收集箱，当下一层的收集箱满了之后，注入再下一层的收集箱，直到最底层的收集箱都满了之后，才会排入市政排污管道。楼宇顶层的收集箱可以收集天台的雨水。有了这套系统后，每个楼层的洗手间都使用本层的收集箱的水来冲马桶，如果收集箱中没有水了，才会使用自来水。由于是楼上的水流到楼下，无需水泵等额外耗能的设备。</p>
<p>比起现有的废水重用方案，这套系统的建造和维护成本都不高，相当于增设一套下水系统。出于卫生的考虑，系统只收集洗衣机的排水和雨水。除了楼宇最顶的几层不能保证有足够的废水供应，下面的楼层应该在大部分情况下都有足够的废水而无需使用自来水来冲马桶。因此，楼层越多，节水效果越显著。现今水资源越来越珍贵，这套系统可以带来很大的经济效益和社会效益。</p>
<p>（写完后没有立即发出来，回头再想了一下，最大的问题应该是卫生安全，因为这些废水会流入每家的马桶，如何保证进入再用系统的水没有受到生物污染？是否要先消毒过滤？）</p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>EnvironmentalProtection</tag>
      </tags>
  </entry>
  <entry>
    <title>5km, 29:17</title>
    <url>/blog/2009/05/18/5km-29-17/</url>
    <content><![CDATA[<p>(注：下面的今天是指5.18，当时blogbus正被河蟹强暴中，无法发出来)</p>
<p>今天临下班前又有想跑步的冲动，问了平常一块跑的同事，他们怕下雨都不去，我就自己一个人跑。如果每天都能保持这样的运动欲望，能形成习惯就好了，可惜总是做不到，一天打鱼n天晒网。</p>
<p>其实今天确实不适合跑步，雾气太大了，树林茂密的地方特别是低洼处明显一层雾气。这样的环境下运动对呼吸系统可能不是太好。跑到第二圈真的开始下雨了，还好只是中雨，眼镜还不至于蒙上。一个人跑，自己感觉速度比往日跟同事一起跑快了一点，气也喘得大一点，但最后看时间也就是29分钟多。状态始终与去年底时差远了，那时跟Stico一起跑，跑两圈也是大概30分钟左右，但基本上可以一边跑一边聊天。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>6km 38:50</title>
    <url>/blog/2009/05/18/6km-38-50/</url>
    <content><![CDATA[<p>我也学学<a href="http://bazaar.blogbus.com/">hary</a>用这样的标题 :)</p>
<p>周末在家有点闷，于是傍晚出去跑步。没想到刚到楼下，就开始下雨。难得有跑步的好心情，还是继续吧，幸好雨不是太大，一路上的榕树树荫浓密，其实也没淋多少雨。只是糟蹋了那双跑鞋，第一次穿居然就是在雨中跑。其实雨中跑步也没什么问题，上一次在天河公园突然下起了倾盆大雨，跑起来感觉还特别爽，状态也不错，但是眼镜被雨水蒙住看不清路面，因为怕危险就还是提前结束了。近视就是麻烦，下次打算在雨中跑步就要戴上鸭舌帽。</p>
<p>沿珠江边跑，过海珠桥到河南，过江湾桥回到河北，再跑到海珠桥后折返回江湾酒店结束。回来在<a href="http://www.mapmyrun.com/route/cn/Guangzhou/671124256051427319">地图</a>上量一下，才6km，比我预期要短。速度不快，而且因为要过马路经常要停下来，感觉比较舒适。沿珠江跑视野开阔，比在公园跑更舒畅些，但石板路面就不如沥青路面适合跑步了。要是政府将珠江两岸都铺成沥青的健身径就好了。</p>
<p>拿着G1来跑，运行着BuddyRunner软件，每隔0.5km就会震动提示一下。如果能找到合适的材料将它绑在手臂上就方便了。本来这个软件还可以把GPS track同步到网站上去的，但今天才发现<a href="http://www.buddyrunner.com/leoliang">buddyrunner.com</a>也被封了，可恶的GFW！</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>关于GPS精度的“科普”</title>
    <url>/blog/2009/05/31/About-GPS-precision-of-the-science-/</url>
    <content><![CDATA[<p>对于GPS精度好多人有误解，我要在这里”科普”一下。  </p>
<p><strong>说法</strong>：<em>GPS有两级精度权限，民用和军用。</em><br><strong>评论</strong>：正确。简单的说，GPS有多种信号频率和不同编码，可以提供不同的精度。民用的L1载波的C&#x2F;A码是低精度的。军用的精度是米级以内，民用的精度是10米级别。  </p>
<p><strong>说法</strong>：<em>现在民用GPS的精度只能到100米。</em><br><strong>评论</strong>：错误。早期GPS民用信号加入了SA（Selective Availability）干扰，精度只能到100米。但自从2000年5月开始，SA就被取消了，所以现在民用GPS精度是能达到10米级别的。  </p>
<p><strong>说法</strong>：<em>手机的A-GPS功能是为了提高精度。</em><br><strong>评论</strong>：不完全正确。A-GPS主要的效果是提高定位速度，而不是精度。<br>普通GPS启动时需要搜索卫星信号，接收星历，才能定位与跟踪。卫星导航电文以30秒周期重复，GPS需要收齐4颗卫星的数据才能定位，因此在信号不好（断续）的情况下，就需要很长时间才能得到首次定位，甚至无法定位。<br>A-GPS（Assisted GPS）是指利用移动网络来辅助GPS定位，具体技术又分为几种，常用的方案是通过移动网络发送GPS星历等辅助数据，GPS无需从卫星下载数据，使手机GPS在弱卫星信号的情况下都能快速定位。</p>
<p><strong>说法</strong>：<em>Google地图的My Location显示我的位置偏移了几百米，那是因为民用GPS精度限制造成的。</em><br><strong>评论</strong>：错误。这种大尺度（几百米）的位置偏移目前只发现在中国大陆地区地图出现，这不是GPS定位的误差，而是地图本身就是偏移，不准确的。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>噤声</title>
    <url>/blog/2009/06/04/Know-the-sound/</url>
    <content><![CDATA[<p>如果一件事情发生后，有人千方百计不想让别人知道，不允许别人谈论，那很可能是因为他在里面是个不光彩的角色，做了不见得人的事。</p>
<p>这段时间内，到众多国外网站的访问被切断，<a href="http://bit.ly/hvbm3">大批国内网站被迫停止服务</a>，为的就是不让大家谈论廿年前今日发生的事情。</p>
<p>但是，我们依然记得。</p>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>HereIm 1.4.2 beta</title>
    <url>/blog/2009/06/07/HereIm-1-4-2-beta/</url>
    <content><![CDATA[<p>在为共享校准数据做准备: </p>
<p>这个版本会将手工校准的数据上传到google app engine, 不过还仅仅是上传。我现在还没有决定是做成在线获取校准参数还是将新校准参数固化到新版本中。</p>
<p>也不需要在菜单中选择采用那个地方的预设校准数据了，会自动选择距离最近的一个。</p>
<p><a href="https://sites.google.com/site/hereimapp/">https://sites.google.com/site/hereimapp/</a></p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>8.27km 48&#39;57&amp;quot;</title>
    <url>/blog/2009/06/14/8-27km-48-57-quot-/</url>
    <content><![CDATA[<p>今天傍晚沿珠江边跑，德政南-江湾酒店-解放桥（过江）-洲头嘴，然后原路返回。已经跑到白鹅潭了，感觉很远的样子，实际上往返距离也才8公里，才比天河公园3圈远一点点，老城区的距离概念就是不一样。</p>
<p>Pace 5’55”&#x2F;km，上星期在天河公园跑10km时是6’02”&#x2F;km，差不多。但今天的状态就不好，后半程很难积极抬腿。最近几次跑距离长了都是结束后感觉左膝盖左下方有点痛，不知道有什么办法解决。</p>
<p>纪念日过后，<a href="http://www.buddyrunner.com/leoliang">BuddyRunner网站</a>可以访问了，手机GPS采集的轨迹直接就上传到网站，有地图、速度变化图，距离时间记录等，方便。  </p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>抗议有关部门封锁Google网络服务</title>
    <url>/blog/2009/06/25/Protests-against-the-relevant-departments-blockade-Google-network-services/</url>
    <content><![CDATA[<p>封锁Google网络服务（包括邮件服务、地图服务、手机服务、搜索服务等）侵犯了公民获取信息的权利，侵犯了公民的通信自由。</p>
]]></content>
      <tags>
        <tag>Anti-GFW</tag>
      </tags>
  </entry>
  <entry>
    <title>擦镜子不是简单的任务</title>
    <url>/blog/2009/08/03/To-clean-the-mirror-is-not-a-simple-task/</url>
    <content><![CDATA[<p>镜子使用一段时间后，就会蒙上一层雾气，还有手指印或者水痕（浴室里的镜子），不像刚买回来那样明亮。怎么擦干净它呢？这可不是一件简单的任务，至少对我而言。</p>
<p>最初，我是用最常规的方法，用水浸湿抹布来擦，这样擦完之后手指印依然还在，因为手指印是油脂，并且留下一道道水痕，比擦之前更难看。后来，我看到公共场所的清洁工人擦玻璃是用洗涤剂抹湿玻璃，然后用橡皮刮把水刮干净，一点水痕都不会留，于是我也买了一个橡皮刮回来，但发现效果并不是那么理想，还是有水痕残留的，不知道是我技术不够还是刮子质量不好，反正我把它退掉了—-宜家的东西可以退货，不错。我又试了用玻璃水，使用说明上说：喷射到表面上，用干布轻轻擦净即可，不留水痕，不挂尘。但实践证明广告都是骗人的。喷上去，一擦，哇，真的很干净，可是过一会再看，抹过之处全是整片的抹痕，特别是从反光的角度上看，镜子变成花面猫一样。而且，抹布还会在镜面上留下很多细小的纤维。</p>
<p>后来，请钟点工来搞卫生的时候，才学到艺，她是用报纸来擦的。她擦过的镜子真是跟刚买回来的差不多的干净明亮，上面没有一点痕迹。不过，别看人家干得利索，自己试的时候就不是那么回事了。经过反复尝试，总算总结出一点经验：</p>
<ol>
<li>玻璃水不能喷太多，如果太湿了就会留下痕迹。</li>
<li>报纸是效果最好的，我试过布、纸巾、洗手间用的擦手纸，都不如报纸。一方面是报纸即使湿了也不会留下纤维，另外去痕的效果很好，不知道什么原因。</li>
<li>使劲擦。</li>
</ol>
<p>另外，如果有些东西粘在玻璃表面上面擦不掉，可以用刀片慢慢平推将其刮起，我是安装衣柜的时候看到师傅这样把贴在上面的不干胶清除掉的，完全不留痕迹。一般刀片（如美工刀）的钢硬度不够玻璃高，因此玻璃是不会被刮花的。</p>
]]></content>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>Outlook2007日历的改进</title>
    <url>/blog/2009/08/04/Outlook2007-/</url>
    <content><![CDATA[<p><a href="http://www.flickr.com/photos/leoliang/4727145208/"><img src="http://farm2.static.flickr.com/1415/4727145208_1fd6c492de.jpg" alt="outlook2007"></a></p>
<p>之前在<a href="http://good-good-study.appspot.com/blog/posts/3184">《为什么不能合在一起》</a>一文中，我提到期望的时间管理系统是这样的：</p>
<blockquote>
<p>在展现上，能够将一天里已经安排好具体时间的事件，和没有安排具体时间，但是需要在这天内做（根据Start date和Due date）的任务显示在同一界面上，什么时候该做什么就一目了然了。在操作上，将一个任务拖放到日历中，或者输入开始结束时间，就能为任务安排计划的执行时间，并且显示在日历中。</p>
</blockquote>
<p>最近升级到Outlook 2007，发现它的日历界面基本上就是跟我想的差不多了。任务、事件的都可以通过鼠标拖放来建立：把邮件或者任务拖到具体的日期时间上，就创建了事件；把邮件或事件拖到任务窗格，就创建了任务。下面的任务窗格，会按天显示当天开始或到期的任务，这样一天该做什么事情，无论是否安排了具体时间，都在一个纵列上显示出来了。如果要推迟一个任务，非常简单，把它拖到另外一天就可以了。</p>
<p>Outlook 2007还有一个改进，就是可以分类的个数不再是有限的几个，可以任意创建，一个项目也不再限于一个分类，而是可以标注多个分类，因此这个分类其实就是tag了。每个分类设成不同的颜色，很醒目。</p>
<p>Outlook 2007给了我不少惊喜的，其实我想的Microsoft早就做到了。</p>
]]></content>
      <tags>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>为了支持推动社会公平正义，我给公盟捐款</title>
    <url>/blog/2009/08/10/In-order-to-support-to-promote-social-fairness-and-justice-and-I-give-male-au-donations/</url>
    <content><![CDATA[<h2 id="公盟是什么"><a href="#公盟是什么" class="headerlink" title="公盟是什么"></a>公盟是什么</h2><p>首先，这是在一些资料中对公盟的介绍：_公盟是一家以个案援助和法律研究为依托致力于推动国家的民主法治进程和实现社会公平正义的公益性民间组织，坚持”法治、理性、建设和非暴力”的原则对具有制度变革意义的典型个案进行法律援助、实证调察和法律研究，倡导公民行动，维护公平正义，推动社会进步_。它的口号是”<strong>为了公共利益</strong>“。</p>
<p>自2003年以来，公盟做了很多的工作，包括参与代理维权官司，撰写研究报告，举办研讨会等。为了让大家直观的知道公盟是一个怎么的组织，我在这里仅列出公盟参与的众所周知的案件，其余的可见参考资料：</p>
<ul>
<li>在<strong>孙志刚案</strong>发生后，推动废除收容遣送制度； </li>
<li>为”<strong>黑砖窑</strong>“受害人提供法律援助； </li>
<li>为<strong>三聚氰胺毒奶粉事件</strong>受害者提供法律援助； </li>
<li>为<strong>邓玉娇</strong>提供法律援助；</li>
</ul>
<p>其实”公盟”是以下两个机构的简称：</p>
<ol>
<li>北京公盟咨询有限责任公司 </li>
<li>公盟法律研究中心</li>
</ol>
<p>公盟法律研究中心是北京公盟咨询有限责任公司内部的一个机构。其实，就是一套班子两个牌子。为什么要这样？因为中国对于民间组织(NGO)的严格限制，使得民间机构的注册几乎是不可能的，要合法运作，只能作为企业在工商部门注册。但实际上公盟是一个非盈利组织，主要靠捐款资助来支持运作。</p>
<p>许志永，北京大学法学博士，是公盟的创立者之一。</p>
<h2 id="公盟发生了什么事情"><a href="#公盟发生了什么事情" class="headerlink" title="公盟发生了什么事情"></a>公盟发生了什么事情</h2><ul>
<li>7月14日，北京市地方税务局、国家税务局以”偷税24.8万”(数字未核实)为由，将对公盟进行行政处罚，合共149万元。 </li>
<li>7月17日，北京市民政局以”未经登记擅自开展活动”为由，宣布取缔”公盟法律研究”中心。 </li>
<li>7月29日，公盟负责人许志永及财务负责人庄璐被警方以”涉嫌偷税”名义刑事拘留。</li>
</ul>
<p>尽管公盟否认偷税并正通过法规规定途径进行申辩，但另一方面公盟接受社会捐款以缴交罚款。见公盟的<a href="https://docs.google.com/View?id=dgrg4q87_34cfrdmxct">公告</a>。</p>
<h2 id="我为什么捐款"><a href="#我为什么捐款" class="headerlink" title="我为什么捐款"></a>我为什么捐款</h2><p>我给公盟捐了50元。 </p>
<p>别的不说，就看公盟帮助毒奶粉受害者（结石宝宝）打官司，就应该支持。由于监管的失效甚至是包庇，这样丧尽天良残害儿童的事情发生了，并且影响如此严重，但是受害者依从法律途径来维护权益却被压制。类似毒奶粉这样的事件，以后依然很可能发生，而且受害者很可能就是我们。如果我们现在不支持公盟这样的维护公民大众利益的公益组织，如何期待在我们受害的时候有人能够帮助我们维护自己的权益？</p>
<p>我对未来是相当悲观的，看不到公平与正义。但还是有公盟以及类似的一些人以理性的方式做着些实实在在的事情，眼前总算不是一片漆黑。公盟所坚持的法治、理性、建设和非暴力的原则也是我们的社会所需要的。</p>
<p>至于捐款交付款是否有用，是否应该将捐款用来交罚款，我不知道。就像很多人觉得的那样，”偷税”很可能只是一个台面上的讲法。但既然公盟一直以来都是期望在规则内推动社会的进步，那它遇到的问题也得在规则内解决，现在这是一个解决的尝试。就我个人来说，捐的钱不多，即使白白被政府吞了，也不会很失落。</p>
<p>最后，无非就是一句：捐了钱，让我觉得良心过得去。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="https://docs.google.com/View?id=dgrg4q87_34cfrdmxct">公盟受捐公告</a></li>
<li>维基百科：<a href="http://zh.wikipedia.org/wiki/%E5%85%AC%E7%9B%9F">公盟</a></li>
</ul>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>当体检结果为阳性</title>
    <url>/blog/2009/08/17/When-a-medical-results-for-positive/</url>
    <content><![CDATA[<p>假设你在体检后，发现体检报告里面有一个项目的检验结果为阳性，你去问医生：这是什么意思？医生一面阴沉的告诉你：这个检查项目结果为阳性，说明你有可能患上了XXX病，虽然这个病不算常见，根据统计数据，患病率约为十万分之一，但是，患上的后果非常严重，基本上是不治之症。啊？！你抱着侥幸的心理再问医生：没理由啊？我身体好好的，有没有可能是检查出错了啊？医生一面严肃的说：不排除这样的可能性，但是，这个检查的可靠性是相当高的，达到99.9%。</p>
<p><em>思考时间：根据这个检查结果，真正患上此病的可能性是多大？</em></p>
<p>你犹如五雷轰顶一般：99.9%？！那意味着我有99.9%的可能性得了这个病！天哪，怎么六合彩就轮不到我啊，我居然成为了那十万分之一。该怎么办呢？等等，先别丧气，问清楚医生那检查99.9%的可靠性是什么回事。医生告诉你，那就是说，1000个患者进行这项检查，999个为阳性，1000个正常人进行这项检查，只有一个为阳性（误检）。嗯，这是相当准确的检查。</p>
<p><em>思考时间：医生解释之后，是否改变了你的结论？真正患上此病的可能性是多大？</em></p>
<p>假如上面的对话真的发生了，估计有不少人立马就感觉浑身不对劲了—-没病都吓出病了。其实并不需要恐慌，根据上面给出的数据，检验出现阳性后真正患病的几率其实只有1%。问题出在这个”准确性99.9%”的定义上，这并不是说1000个检出阳性的人有999个可以确诊患病，而是确诊患病的1000个人里面有999个可以检出阳性。咋一看，这两者好像一样，只是表述不同而已，其实差别大了。</p>
<p>用这个表格看就清晰了：</p>
<p>&amp;nbsp;|健康|患者</p>
<table>
<thead>
<tr>
<th>&amp;nbsp;</th>
<th>99.999%</th>
<th>0.001%</th>
</tr>
</thead>
<tbody><tr>
<td>阳性(+)</td>
<td>0.1% × <strong>99.999%</strong> &#x3D; 0.00099999</td>
<td>99.9% × <strong>0.001%</strong> &#x3D; 0.00000999</td>
</tr>
<tr>
<td>阴性(-)</td>
<td>99.9% × <strong>99.999%</strong> &#x3D; 0.99899001</td>
<td>0.1% × <strong>0.001%</strong> &#x3D; 0.00000001</td>
</tr>
</tbody></table>
<p>表中列出健康但结果为阳性（误检），健康并且结果阴性，患病并且结果为阳性，患病结果为阴性（漏检）这四种情况发生的概率。现在检查结果为阳性这一条件已经确定下来，就看阳性那行，健康与患病的概率之比为0.0099999:0.00000999，也就是大约100:1，真正得病的可能性比1%还小一点点。</p>
<p>上面的东西其实是根据《环球科学》杂志2009-8的文章《被误读的患病率和死亡率》中的一个例子改写的，我觉得类似的与统计、概率相关的误区在日常生活中见得不少，很有必要学习一下。最后总结一下：</p>
<ul>
<li>体检很重要，但是也不要自己吓自己 </li>
<li>概率的知识很有用，实际结果往往与直觉不一致 </li>
<li>统计调查的结果不一定靠谱，即使数据是真实的，也要看解释是否合理，是否符合逻辑。那种数字很有迷惑性。至于误导的原因，有些是因为说的人自己也没搞清楚，有些是故意忽悠人</li>
</ul>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>How to setup hg (Mercurial) web access</title>
    <url>/blog/2009/09/17/How-to-setup-hg-Mercurial-web-access/</url>
    <content><![CDATA[<p>(Platform: Windows Vista)</p>
<ol>
<li>Mercurial is already installed. </li>
<li>Install Apache. </li>
<li>Download mercurial source package to get the file hgwebdir.cgi. This file isn’t included in the Windows binary package. </li>
<li>Copy hgwebdir.cgi into Apache’s cgi-bin folder and rename to hgwebdir.py </li>
<li>Create a file named hgweb.config in the same folder. Config the name and the path of therepositories in this file. </li>
<li>Install python 2.5 and make sure to check the option to registerit as the default handler of .py file.<br>The hgwebdir.cgi from Mercurial 1.xrequires python 2.5. Error “Invalid Magic Number” will be got when running on other version python. </li>
<li>Extract the file library.zip in Mercurial installation folder into a directory. Use 7zip to unzip, other zip tools might fail. </li>
<li>In Mercurial installation directory there is a foldernamed Templates.Moveit into thelibrary folder. </li>
<li>Edit hgwebdir.py, add followinglines to add the library folderinto python library path:<br>import sys<br>sys.path.insert(0, “C:\Program Files\Mercurial\library”)</li>
<li>Start apache, try to access in browser<br><a href="http://localhost/cgi-bin/hgwebdir.py">http://localhost/cgi-bin/hgwebdir.py</a></li>
<li>If the repositories index page can shown, that’s fine. If got 500 internal error, check apache error log.<br>If the error information is like this:<br><em>The system cannot find the path specified. : couldn’t create child process: 720003: hgwebdir.py</em><br>it means Apache can’t locate the python executer.<br>1. Edit Apache’s config file httpd.conf,uncomment theline:<br>ScriptInterpreterSource registry<br>This will enable Apache to skip the script’s shebang line and use default registered handler.</li>
<li>When the index is successfully shown in browser, edit the .hg\hgrc file in each repositories to add following lines. It will enable push to repository by web access (default is read only) and enable push by http (default is requiring ssl).<br>[web]<br>allow_push &#x3D; *<br>push_ssl &#x3D; false</li>
<li>Try to clone a repository by web access and modify something then push back. It should be ok. </li>
<li>Add a line in Apache http.conf to make the URL more friendly:<br>ScriptAliasMatch ^&#x2F;hg(.*) “C:&#x2F;Program Files&#x2F;Apache2.2&#x2F;cgi-bin&#x2F;hgwebdir.py$1”<br>Now the url will be:<br><a href="http://localhost/hg">http://localhost/hg</a></li>
</ol>
<p>Just record the installation steps in case I need to do it againsome time in the furture. Hope thatIhaven’t missed any step :)</p>
<p>Reference:</p>
<ul>
<li><a href="http://mercurial.selenic.com/wiki/PublishingRepositories">http://mercurial.selenic.com/wiki/PublishingRepositories</a></li>
<li><a href="http://mercurial.selenic.com/wiki/HgWebDirStepByStep">http://mercurial.selenic.com/wiki/HgWebDirStepByStep</a></li>
<li><a href="http://www.imladris.com/Scripts/PythonForWindows.html">http://www.imladris.com/Scripts/PythonForWindows.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>准备10km跑</title>
    <url>/blog/2009/09/25/Prepare-10-km-run/</url>
    <content><![CDATA[<p>一直都想体验一下正式的长跑活动，也可以给自己跑步一个动力。得知10月24日在广州大学城<a href="https://www.nike.com.cn/humanrace2009/index.html">Nike举办10公里跑</a>活动，就报名参加了。</p>
<p>上个月感觉腰椎的问题有一点点要复发的迹象，就停止了跑步。接下来9月份都在北京出差，跑鞋也没有带过来。算下来一个月没有跑步了。离活动只剩1个月了，怎么也得训练一下，于是今天去迪卡侬把T-shirt、短裤、袜子、跑鞋买了一套回来，去附近的公园跑步。</p>
<p>开始从住处到公园的500多米没有记录时间，从公园里跑了4.5km平均步速6’03”&#x2F;km，看来这样的状态10km一小时都进不了 :( 不过速度慢点就慢点，这次我没有速度目标，只是体验一下。我至今还只是跑过两次十公里，平常都是跑5公里距离。但最担心的还是膝痛的问题，最近几个月来每次跑完步左膝外侧都有疼痛的现象。</p>
<p>Updated 2009-10-26:</p>
<p>58:30，完成了自己跑进1小时的目标，状态还好，跑完也不觉得辛苦。之前一段时间训练时一直受膝盖痛和小腿肌肉酸硬的困扰，但正式跑时一点问题都没有。第一次参加这样的活动，算比较满意了。</p>
<p>看了成绩，发现5km计时是29:48，前半程比后半程还要慢。主要是刚起跑那两公里太慢了，起跑时才发现手机GPS不知为什么不工作了，一边跑一边弄，后来重启了一次才正常。随着人潮慢腾腾往前挪，很多人都不是跑的，像逛花市。后来觉得这个速度受不了，才开始钻人缝。</p>
<p>以后有经验，起跑位置要尽量靠前才行。下次的目标定在55:00吧。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>WebLogic的classloading</title>
    <url>/blog/2009/09/27/WebLogic-classloading/</url>
    <content><![CDATA[<p>一直对classloading的了解不是很清晰，每次遇到涉及WebLogic的classpath设置、classloading问题debug时都要去网上搜索资料。现在把资料整理下来。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4379354938/"><img src="http://farm3.static.flickr.com/2682/4379354938_dc7cd5f47e_o.png" alt="wls_classloading"></a></p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="各层级classloader加载的类的范围"><a href="#各层级classloader加载的类的范围" class="headerlink" title="各层级classloader加载的类的范围"></a>各层级classloader加载的类的范围</h3><ul>
<li><p>Bootstrap classloader</p>
<ul>
<li>Core Java libraries (<jre>&#x2F;lib)</li>
</ul>
</li>
<li><p>Extension classloader</p>
<ul>
<li>JRE extensions directory (<jre>&#x2F;lib&#x2F;ext)</li>
</ul>
</li>
<li><p>WebLogic Server system classloader</p>
<ul>
<li>Classpath</li>
<li><domain>&#x2F;lib</li>
</ul>
</li>
<li><p>Filtering classloader</p>
<ul>
<li>nothing</li>
</ul>
</li>
<li><p>Application classloader</p>
<ul>
<li>EJB JARs</li>
<li>APP-INF&#x2F;lib</li>
<li>APP-INF&#x2F;classes</li>
<li>Manifest Class-Path in EJB JARs</li>
</ul>
</li>
<li><p>Web application classloader</p>
<ul>
<li>WAR</li>
<li>Manifest Class-Path in WAR</li>
</ul>
</li>
</ul>
<h3 id="类加载的优先级"><a href="#类加载的优先级" class="headerlink" title="类加载的优先级"></a>类加载的优先级</h3><p>每个classloader在要加载一个class之前都会先请求它的上层classloader，如此逐级传递。因此效果就是越上层的classloader优先级越高，一个class如果在上层classloader能加载到，就不会让下面的classloader加载。</p>
<p>但是web application classloader是个特例，通过在weblogic.xml中配置<prefer-web-inf-classes>，可以让web application classloader优先在自己war范围内加载类，找不到的类才会请求上层classloader。</p>
<p>Filtering classloader是个特殊的classloader，它并不会加载任何类，而是起到控制类加载优先级的作用。在weblogic-application.xml中配置<prefer-application-packages>，可以限制对于指定的类不再向上层classloader请求，也就是限制在EAR的范围之内加载。</p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>以上仅仅描述了缺省情况下classloading的行为。WebLogic对于一个application (EAR)内的classloader的层次结构是可以自定义的。Shared library和optional package，也会影响到classloading。另外，resource adapter (RAR)也有独立的classloader。还有其他的一些细节，需要查阅<a href="http://download.oracle.com/docs/cd/E13222_01/wls/docs100/programming/classloading.html">Understanding WebLogic Server Application Classloading</a>。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>WebLogic</tag>
        <tag>AppServer</tag>
      </tags>
  </entry>
  <entry>
    <title>Android软件：Wallpaper Label</title>
    <url>/blog/2009/10/31/Android-Wallpaper-Label/</url>
    <content><![CDATA[<img src="/blog/attachments/2009/10/wallpaperlabel1.jpg" class="right">

<p>Android与IPhone类似，都是有多个桌面屏幕，用手指划一下就可以左右切换屏幕。Android缺省设置只有3屏，但一些mod可以修改屏幕个数，例如设置为5屏。</p>
<p>在IPhone上，屏幕的数量以及当前处于第几个屏幕是通过界面中下方的小圆点来指示的。但在Android上就没有类似的指示，有时候用户不知道现在正显示的是哪一屏，应该往左还是往右翻屏。</p>
<img src="/blog/attachments/2009/10/wallpaperlabel2.jpg" class="left">

<p>我开发的这个软件 Wallpaper Label 可以为Android手机的桌面每个屏幕添加一个文字标签，这样就很清晰的知道当前打开的是哪一屏了。标签位于在屏幕下方的正中位置，并不会影响图标的显示。</p>
<p>Wallpaper Label 软件的另外一个作用是设置Android手机的桌面墙纸。Android系统自带的墙纸设置工具需要把图片剪切为4:3比例，无法设置其他比例的墙纸。4:3比例对于缺省的3屏是比较合适的，但当桌面屏幕数量更多的时候，这个比例就显得太窄了，左右切换屏幕时墙纸的画面基本没有多少移动。用 Home Screen Label 来设置墙纸没有4:3比例的限制，可以设置宽屏墙纸。</p>
<p>用作墙纸的图片文件需要存放在SD卡的wallpapers目录中。软件也提供了保存当前墙纸的功能，可将现在正使用的墙纸保存到SD卡上。</p>
<p>这是5个屏幕合成的效果图，可以看出宽屏墙纸画面效果：</p>
<img src="/blog/attachments/2009/10/wallpaperlabel3.jpg" class="">

<p>软件在Android Market上下载安装，搜索”Wallpaper Label”就可以找到。<br>(2012-7 update: Android自身功能不断增强，这个软件已经没什么用处，早已下架)</p>
]]></content>
      <tags>
        <tag>Android</tag>
        <tag>MyWork</tag>
      </tags>
  </entry>
  <entry>
    <title>The world can change in a day</title>
    <url>/blog/2009/11/03/The-world-can-change-in-a-day/</url>
    <content><![CDATA[<p>8 November 1989</p>
<img src="/blog/attachments/2009/11/CapeTimes-BerlinWall.jpg" class="">

<p>9 November 1989, the wall fell. </p>
<p>柏林人民踊跃翻墙的塲景：</p>
<img src="/blog/attachments/2009/11/OverBerlinWall.jpg" class="">

<p>当年柏林是被这样的高墻分隔的：</p>
<img src="/blog/attachments/2009/11/BerlinWallMap.jpg" class="">

<p>如今残存的墙上的壁画，反映了当年翻墙的种种途径：</p>
<img src="/blog/attachments/2009/11/BerlinWallPicture1.jpg" class="">

<img src="/blog/attachments/2009/11/BerlinWallPicture2.jpg" class="">

<p>—— 纪念柏林墙倒下20周年</p>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>重拾 “清风白云艳阳天” blog</title>
    <url>/blog/2009/12/03/Restore-the-wind-baiyun-sunny-days-blog/</url>
    <content><![CDATA[<p>“清风白云艳阳天: 摄影-旅行-生活” 是我的第一个blog，大概是在2000&#x2F;2001年左右开始的吧，搬过好多次家，最初放在公司的服务器上，又放过在绿野上，后来放在朋友的服务器。2006年朋友的服务器关了，这个blog就没有着落了。随着对摄影的兴趣减淡，也一直没有提起心情来把它重新建起来。反倒是后来的 “Goog good study day day up” 断断续续的一直坚持了下来。</p>
<p>Blogbus用了这么久，感觉还不错，就在这里再安一个家吧。不一定会更新得多勤快，反正想写就写，想贴就贴。及时性是肯定不能保证的了，我好多照片都是等一年后才扫描出来，再不知道等多久才会处理好。</p>
<p>下面是链接，建议用RSS订阅，免得每次打开都看不到新内容 :)</p>
<h1 id="SunnyDay-amp-FeelingWind"><a href="#SunnyDay-amp-FeelingWind" class="headerlink" title="SunnyDay &amp; FeelingWind"></a><a href="http://sunnywind.blogbus.com/">SunnyDay &amp; FeelingWind</a></h1>]]></content>
      <tags>
        <tag>Blogging</tag>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>介绍Android的slides</title>
    <url>/blog/2009/12/11/Introduction-of-Android-slides/</url>
    <content><![CDATA[<div id="__ss_2689852" style="width: 425px; text-align: left;">
    <a href="http://www.slideshare.net/aleung/android-2689852" style="font:14px Helvetica,Arial,Sans-serif;display:block;margin:12px 0 3px 0;text-decoration:underline;" title="Android">Android</a> <object data="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=android-091210073738-phpapp01&amp;stripped_title=android-2689852" height="355" type="application/x-shockwave-flash" width="425"> <param name="allowFullScreen" value="true" /> <param name="allowScriptAccess" value="always" /> <param name="src" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=android-091210073738-phpapp01&amp;stripped_title=android-2689852" /> <param name="allowfullscreen" value="true" /> </object>
    <div style="font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px;">
        View more <a href="http://www.slideshare.net/" style="text-decoration:underline;">documents</a> from <a href="http://www.slideshare.net/aleung" style="text-decoration:underline;">aleung</a>.</div>
</div>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>比价易：逛超市的好帮手</title>
    <url>/blog/2009/12/12/Parity-easy-the-supermarket-good-helper/</url>
    <content><![CDATA[<img src="http://farm5.static.flickr.com/4104/4987380901_97030e8f03_m.jpg" class="right">

<p>逛超市，看到两款酸奶：</p>
<ul>
<li>一种是100克装8杯，9.6元；</li>
<li>另一种是150克6杯加送1杯100克，10.5元。</li>
</ul>
<p>那个价钱更划算？</p>
<p>如果单位不同，就更难比较了，例如纯净水：</p>
<ul>
<li>550ml一打，10元；</li>
<li>10L，12元；</li>
<li>5 gal（加仑），18元。</li>
</ul>
<p>比价易（Unit Price Compare）就是专门解决这种问题的，它是运行在Android手机上的应用，能够比较不同包装的商品单价哪个更便宜。</p>
<p>比价易支持不同单位的自动换算，对于”150克6杯加送1杯100克”这样的情况，直接输入为 150*6+100 就可以了。看看截图：</p>
<p><a href="http://www.flickr.com/photos/leoliang/4987380823/"><img src="http://farm5.static.flickr.com/4111/4987380823_cfb55b6633.jpg" alt="Unit Price Compare - list"></a> <a href="http://www.flickr.com/photos/leoliang/4987981690/"><img src="http://farm5.static.flickr.com/4109/4987981690_1fae2f0784.jpg" alt="Unit Price Compare - item"></a></p>
<p>安装：在Android Market中搜索”Unit Price Compare”</p>
<p><a href="http://www.flickr.com/photos/leoliang/4987981626/"><img src="http://farm5.static.flickr.com/4112/4987981626_c5cfbd0307_m.jpg" alt="Unit Price Compare - download"></a></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Google中国地图偏移</title>
    <url>/blog/2009/12/26/Google-China-Map-offset-1/</url>
    <content><![CDATA[<p>以前我一直以为Google手机地图是在客户端程序内置有矫偏算法的，看了dongmeng110的blog（已被关闭）才知道Google地图偏移其实是有接口可以取到的。给定经纬度坐标，返回地图tile的偏移像素值。<br><code>http://ditu.google.cn/maps/vp?spn=0.0,0.0&amp;amp;z=18&amp;amp;vp=39.111195,117.148067</code> （已失效）。</p>
<p>没想到居然就是直接从服务器取，这样所有的偏移量其实都是公开的了。</p>
<p>接下来，我对偏移数据做了一些分析。纵坐标是18级地图的偏移量。</p>
<p>首先是较小尺度，在经纬度1度的范围内每0.01度取得一个偏移值。</p>
<p>图一：纬度不变，经度1度变化范围内，偏移量的变化（横坐标数字为经度0.01度）</p>
<img src="/blog/attachments/2009/12/4382500790_05a7a3af13_o.jpg" class="">

<p>图二，与图一相同的数据，可以看出偏移在平面上的变化</p>
<img src="/blog/attachments/2009/12/4382501234_2a060a3355_o.jpg" class="">

<p>图三，经度不变，纬度1度变化范围内，偏移量的变化（横坐标数字为纬度0.01度）。可见偏移量变化不如经度变化时大。</p>
<img src="/blog/attachments/2009/12/4382501616_0902aeee3e_o.jpg" class="">

<p>图四，与图三相同的数据，可以看出偏移在平面上的变化</p>
<img src="/blog/attachments/2009/12/4382501968_d960178154_o.jpg" class="">

<p>图五，经度纬度均1度范围内，偏移在平面上的变化。其实是图二与图四&amp;ldquo;相乘&amp;rdquo;的结果。</p>
<img src="/blog/attachments/2009/12/4381741057_b10a5de8ca_o.jpg" class="">

<p>接下来从大尺度上看看。</p>
<p>图六，北纬40度的纬线上偏移值变化图，横坐标为经度。看得出以经度1度为周期呈现出一定的规律性，在y向偏移量上特别明显。</p>
<img src="/blog/attachments/2009/12/4382499286_a837b8022d_o.jpg" class="">

<p>图七，东经116度的经线上偏移值变化图，横坐标为纬度。这个就没有奇怪的小波动了，而且x向偏移似乎可以非常理想的用二次曲线来拟合。</p>
<img src="/blog/attachments/2009/12/4381742115_a15b5e01c5_o.jpg" class="">

<p>图八，刚才在图六中发现纬线上的偏移值呈现出规律性，这里放大来看看。很明显是以1度为周期的。</p>
<img src="/blog/attachments/2009/12/4382498276_2952ffa74c_o.jpg" class="">

<p>暂无结论。请看<a href="/blog/2009/12/27/Google-China-Map-offset-2/" title="Google中国地图偏移 (续)">Google中国地图偏移 (续)</a>。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>Google中国地图偏移 (续)</title>
    <url>/blog/2009/12/27/Google-China-Map-offset-2/</url>
    <content><![CDATA[<p>接着<a href="/blog/2009/12/26/Google-China-Map-offset-1/" title="Google中国地图偏移">昨天的分析</a>。</p>
<p>已经发现在纬线上的偏移值呈现出明显的规律性，这个规律不难拟合出来。利用拟合出来的函数将这个高频扰动抵消之后，得到了这样的曲线：</p>
<img src="/blog/attachments/2009/12/4382498800_1bc9e586dd_o.jpg" class="">

<p>看起来相当完美。那在看看将它应用到大尺度上效果如何：</p>
<img src="/blog/attachments/2009/12/4381740587_73cd1113fd_o.jpg" class="">

<p>有微小的抖动，看来参数细节还需要微调一下，不过要求不高的话其实已经可以接受了。</p>
<p>接下来，在这张图上又发现了规律…… 嗯，我不能继续写下去了。</p>
<p>其实对于离线应用，进一步的分析不做也没有关系了，并不需要将整个函数拟合出来，剩余的工作可以通过查表法来做，然后插值再加回高频扰动。因为知道了高频扰动的函数后，就能够用较低的采样频率来记录偏移量，即使将整个表放内存里，占用的空间大小也可以接受。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>查找explorer crash原因的工具</title>
    <url>/blog/2010/01/01/The-reason-for-explorer-crash-tools/</url>
    <content><![CDATA[<p>不知道装了什么软件之后，只要在文件管理器中点击鼠标右键，Windows Explorer就会崩溃，重新启动依然如是。</p>
<p>找到<a href="http://www.nirsoft.net/">Nir Sofer</a>出品的小工具 ShellExView，这个工具分析注册表，列出所有注册到explorer的shell extension及相关信息，并能够enable&#x2F;disable选定的extension。找到可疑的extension，将它disable，然后再进行一次右键操作，看看还会不会crash。如此排除法很快就定位出什么软件是罪魁祸首，将它卸载或者将extension disable，问题就解决了。</p>
<p>比较有用的信息是extension type，file extensions，file created time。首先关注文件创建时间，找出最近新增的extension，因为以前正常，最近才出问题，那引起问题通常是新装的软件。不过也不能一概而论，也有可能是以前安装的软件，因为最近的环境更改而出现了问题。另外可以根据extension type和file extensions进行过滤，例如我遇到的问题是右键菜单引发崩溃，那重点关注extension type为Context Menu的那些项。还有，在任何类型文件上按右键菜单都会引发崩溃，所以不大可能是由只针对特定文件类型的extension引发的。虽然系统注册的shell extension很多，例如我这个新装没多久的Vista系统就已经有三百多项，但是大部分都是Microsoft出品的，一般来说还是比较可靠的，只要关注非Microsoft的就可以了，找起问题来还是很快的。</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
        <tag>Software</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>看来还是得下车了</title>
    <url>/blog/2010/01/24/Seems-to-have-to-get-off-here/</url>
    <content><![CDATA[<p>Update 2010-2-15:</p>
<p>今天将BlogBus的数据导入到这里后，进BlogBus后台核对一下文章是否有缺失，一看又有好几篇文章被隐藏了。那些都是纯正的技术文章，并不像下面截屏的那样故意加入特殊字眼，有一篇还是全英文的，我真看不出有什么敏感词。</p>
<p>下面的原文发在<a href="http://aleung.blogbus.com/">BlogBus</a>。</p>
<hr>
<p>去向未定，但想继续看我的blog，估计都得学几招翻墙功夫了</p>
<p>请bookmark这个地址：<a href="http://feeds.feedburner.com/GoodGoodStudyDayDayUp">http://feeds.feedburner.com/GoodGoodStudyDayDayUp</a></p>
<p><img src="http://farm5.static.flickr.com/4030/4356716336_bd25956bc6_o.jpg"></p>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>基本功能完备，可以公开了</title>
    <url>/blog/2010/02/14/Basic-function-complete-can-open/</url>
    <content><![CDATA[<p>一个blog所需要的功能的最小集合已经完备了，可以投入使用，再边用边改进了：</p>
<ul>
<li>发文章</li>
<li>文章分页显示</li>
<li>Tag</li>
<li>评论</li>
<li>用户认证通过Google account进行</li>
</ul>
<p><a href="https://appengine.google.com/">Google Application Engine</a> 提供了强大的平台，<a href="http://www.playframework.org/">Play Framework</a>使得Java web开发变得很简便。开发这个应用用了几天时间，不算快，但作为第一次，学习、查资料花的时间不少，上手之后的工作效率将会提高很多。另外，对我来说，HTML+CSS才是最困难的部分，基本没有做前端的经验。现在的界面是从sample里面copy出来改的，每改一点就要看看效果，边试边改。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>这个blog现在支持feed输出了</title>
    <url>/blog/2010/02/14/This-blog-now-support-feed-output/</url>
    <content><![CDATA[<p>支持atom比我想象中简单很多，根本用不着什么library，多加一个xml template就行了。</p>
<p>如果你的浏览器支持，就能在地址栏右边看到feed的图标，点击就可以选择阅读器进行订阅。或者在阅读器（例如Google Reader）里面输入这个网站的地址，也可以订阅。</p>
<p><img src="http://farm5.static.flickr.com/4058/4353315450_7d1914e9ab_o.png"></p>
<p>PS. 这个blog的页面使用了一些HTML5标签，因此需要使用新的浏览器才能正常浏览，例如使用 Firefox 3, Chrome。如果你看到的页面不是上图的样子，说明你的浏览器 out date 啦。</p>
<p>PPS. 我会一如既往的使用flickr来存放照片，如果你看不到照片，或者有一天你连这个blog的页面都看不到，那说明你上的只是局域网，根本不是Internet。</p>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>JSON support in JAX-RS</title>
    <url>/blog/2010/02/22/JSON-support-in-JAX-RS/</url>
    <content><![CDATA[<p>JAX-RS is the Java API for RESTful web services. JSON is the most popular data binding of RESTful web service. In JAX-RS, Entity Providers supply mapping services between representations and their associated Java types. To support JSON representation, JSON provider is needed.</p>
<h2 id="JSON-support-in-Jersey-and-CXF"><a href="#JSON-support-in-Jersey-and-CXF" class="headerlink" title="JSON support in Jersey and CXF"></a>JSON support in Jersey and CXF</h2><p>Both Jersey and Apache CXF support JSON data generated out of JAXB beans. Developer can generate JavatypefromXML schema (xsd) by JAXB ormanually write Java bean with annotations. Then the resource can support JSON representatons.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@XmlRootElement</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StatusInfoBean</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">String</span> <span class="variable">status</span> <span class="operator">=</span> <span class="string">&quot;Idle&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="variable">tonerRemaining</span> <span class="operator">=</span> <span class="number">25</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> Collection&lt;JobInfoBean&gt; jobs = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;JobInfoBean&gt;();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Path(&quot;/status&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyResource</span> &#123;</span><br><span class="line">    <span class="type">StatusInfoBean</span> <span class="variable">statusInfoBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StatusInfoBean</span>();</span><br><span class="line">    &#123;</span><br><span class="line">        statusInfoBean.jobs.add(<span class="keyword">new</span> <span class="title class_">JobInfoBean</span>(<span class="string">&quot;sample.doc&quot;</span>, <span class="string">&quot;printing...&quot;</span>, <span class="number">13</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GET</span></span><br><span class="line">    <span class="meta">@Produces(&quot;application/json&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> StatusInfoBean <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> statusInfoBean;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@PUT</span></span><br><span class="line">    <span class="meta">@Consumes(&quot;application/json&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(StatusInfoBean status)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.statusInfoBean = status;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Cusomize-the-JSON-provider"><a href="#Cusomize-the-JSON-provider" class="headerlink" title="Cusomize the JSON provider"></a>Cusomize the JSON provider</h2><p>The behavior of the JSON provider can be customized. But the way of customization is different in Jersey and CXF.</p>
<p>The configuration described in this article targets on Jersey 1.0.2 or higher, CXF 2.2 or higher.</p>
<p>In Jersey, developer should implement a JAXB ContextResolver which creates JSONJAXBContext with JSONConfiguration.Different configurations can be set bybuilder pattern.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Provider</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyJAXBContextResolver</span> <span class="keyword">implements</span> <span class="title class_">ContextResolver</span>&lt;JAXBContext&gt; &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> JAXBContext context;</span><br><span class="line">    <span class="keyword">private</span> Class[] types = &#123;StatusInfoBean.class, JobInfoBean.class&#125;;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyJAXBContextResolver</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="built_in">this</span>.context = <span class="keyword">new</span> <span class="title class_">JSONJAXBContext</span>(</span><br><span class="line">                JSONConfiguration.mapped()</span><br><span class="line">                                   .rootUnwrapping(<span class="literal">true</span>)</span><br><span class="line">                                   .arrays(<span class="string">&quot;jobs&quot;</span>)</span><br><span class="line">                                   .nonStrings(<span class="string">&quot;pages&quot;</span>, <span class="string">&quot;tonerRemaining&quot;</span>)</span><br><span class="line">                                   .build(),</span><br><span class="line">                types);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> JAXBContext <span class="title function_">getContext</span><span class="params">(Class&lt;?&gt; objectType)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (types[<span class="number">0</span>].equals(objectType)) ? context : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Further simplificationway can be found in <a href="http://blogs.sun.com/japod/entry/configuring_json_for_restful_web">http://blogs.sun.com/japod/entry/configuring_json_for_restful_web</a></p>
<p>In Apache CXF, to customize the JSON provider, developer can implement a new provider or configure the properties of org.apache.cxf.jaxrs.provider.JSONProvider.</p>
<p>Custom provider is registered by Spring configuration:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jaxrs:server</span> <span class="attr">id</span>=<span class="string">&quot;customerService&quot;</span> <span class="attr">address</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">jaxrs:serviceBeans</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.CustomerService&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jaxrs:serviceBeans</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">jaxrs:providers</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;jsonProvider&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jaxrs:providers</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jsonProvider&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.cxf.jaxrs.provider.JSONProvider&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dropRootName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;serializeAsArray&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;arrayKeys&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span><span class="tag">&lt;<span class="name">value</span>&gt;</span>jobs<span class="tag">&lt;/<span class="name">value</span>&gt;</span><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jaxrs:server</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="Drop-root-element-x2F-Root-unwrapping"><a href="#Drop-root-element-x2F-Root-unwrapping" class="headerlink" title="Drop root element &#x2F; Root unwrapping"></a>Drop root element &#x2F; Root unwrapping</h3><p>Drop root element means strip out the root element from JSON. In the following example the StatusInfoBean element is dropped.</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;status&quot;</span><span class="punctuation">:</span><span class="string">&quot;Idle&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tonerRemaining&quot;</span><span class="punctuation">:</span><span class="string">&quot;25&quot;</span><span class="punctuation">,</span><span class="attr">&quot;jobs&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;sample.doc&quot;</span><span class="punctuation">,</span><span class="attr">&quot;status&quot;</span><span class="punctuation">:</span><span class="string">&quot;printing...&quot;</span><span class="punctuation">,</span><span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span><span class="string">&quot;13&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>In Jersey whether dropping root element is configured by JSONConfiguration.rootUnwrapping(). In CXF it is by JSONProvider.setDropRootElement().</p>
<h3 id="Single-value-array"><a href="#Single-value-array" class="headerlink" title="Single value array"></a>Single value array</h3><p>Single value List object can be serialized as array or non-array. See example:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;rows&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;userid&quot;</span><span class="punctuation">:</span><span class="string">&quot;1621&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Grotefend&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;rows&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;userid&quot;</span><span class="punctuation">:</span><span class="string">&quot;1621&quot;</span><span class="punctuation">,</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;Grotefend&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>In CXF it’s controlled by JSONProvider properties “serializeAsArray” and “arrayKeys”.</p>
<h3 id="Namespace"><a href="#Namespace" class="headerlink" title="Namespace"></a>Namespace</h3><p>If the JAXB bean has namespace, whether to include namespace in JSON can be controlled in CXF by JSONProvider properties “ignoreNamespaces”.</p>
<h2 id="Nature-JSON-notation"><a href="#Nature-JSON-notation" class="headerlink" title="Nature JSON notation"></a>Nature JSON notation</h2><p>Nature JSON notation is:</p>
<ul>
<li>root unwrapping</li>
<li>single value List object serialized as array</li>
<li>???</li>
</ul>
<p>See com.sun.jersey.api.json.JSONConfiguration.Notation</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>图解：Spring ApplicationContext in enterprise application</title>
    <url>/blog/2010/02/24/Illustration-Spring-ApplicationContext-in-enterprise-application/</url>
    <content><![CDATA[<p>在一个比较复杂的enterprise application (EAR)里面，往往有多个war和ejb，如果希望使用Springframework通过IoC方式来管理及装配POJO beans，就要面对如何初始化application context，由谁来初始化，如何让这些war和ejb共享application context等问题。</p>
<p>关于多个war、ejb共享application context的方法，在下面这两篇文章里解释得比较清楚：</p>
<ul>
<li><a href="http://blog.springsource.com/2007/06/11/using-a-shared-parent-application-context-in-a-multi-war-spring-application/">Using a shared parent application context in a multi-war Spring application</a></li>
<li><a href="http://springtips.blogspot.com/2007/09/using-shared-context-from-ejbs.html">Using a Shared Context from EJBs</a></li>
</ul>
<p>在这里，我不再详细叙述上面文章中的内容，通过图解的方式希望能让它更易理解，需要对照阅读。</p>
<p>图中的方块、圆圈都表示实例，形状的嵌套表示它们的包含关系。在例子里，缺省值都显式写出来，方便查找。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4384915548/"><img src="http://farm5.static.flickr.com/4037/4384915548_2ec7d610e6_o.png" alt="share-context-1"></a></p>
<p>先看图中靛蓝色的box，是ContextSingletonBeanFactoryLocator实例，application context的共享是依靠它来实现的：对于每个locatorFactorSelector，在一个classloader的范围内只会存在一个ContextSingletonBeanFactoryLocator的实例。ContextSingletonBeanFactoryLocator内部有一个ApplicationContext（图中的天蓝色box），它的bean是由locatorFactorSelector所指向的xml文件所定义的。例如locatorFactorSelector为classpath*:beanRefContext.xml，就会寻找classpath中所有的beanRefContext.xml文件并根据它们去创建内部ApplicationContext。这个内部ApplicationContext只是其它ApplicationContext的容器，不存放application的bean。一个beanRefContext.xml文件应该像下面那样，里面是一个ApplicationContext，它才是真正的业务bean的容器。如果需要可以设置它的parent context。如果有多个beanRefContext.xml文件，就会创建多个ApplicationContext，它们通过id来标识。</p>
<figure class="highlight xml"><figcaption><span>beanRefContext.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">beans</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.context.support.ClassPathXmlApplicationContext&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>context_a.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;b&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>EJB应该在onCreate()过程中通过下面的代码来获得application context，需要通过factoryKey（例子里是”a”）来指定具体是哪个context：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">beanFactory= ContextSingletonBeanFactoryLocator.getInstance(<span class="string">&quot;classpath*:beanRefContext.xml&quot;</span>).useBeanFactory(<span class="string">&quot;a&quot;</span>).getFactory();</span><br></pre></td></tr></table></figure>

<p>在war里是依靠ContextLoaderListener来启动ApplicationContext的。在web.xml里加入：</p>
<figure class="highlight xml"><figcaption><span>web.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span></span><br><span class="line">        org.springframework.web.context.ContextLoaderListener</span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这个application context包含的是&#x2F;WEB-INF&#x2F;applicationContext.xml中定义的beans。在Servlet中通过下面的代码可以获得这个context：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">beanFactory = WebApplicationContextUtils.getWebApplicationContext(<span class="built_in">this</span>.getServletContext());</span><br></pre></td></tr></table></figure>

<p>但这样创建出来的是一个独立的application context，仅仅在war内部可以访问，无法做到多个war和ejb之间共享。</p>
<p>要实现共享，就要在web.xml中再加入：</p>
<figure class="highlight xml"><figcaption><span>web.xml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>parentContextKey<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>b<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>locatorFactorySelector<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:beanRefContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span> <span class="comment">&lt;!-- this is the default value --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>这样，当ContextLoaderListener创建war的application context时，会根据locatorFactorySelector去取相应的ContextSingletonBeanFactoryLocator实例，并且从locator中根据parentContextKey拿到具体的context，将这个context作为war的application context的parent。在图中，war 1的servlet可以访问到key为’b’的context，因为它是当前context的parent。</p>
<p>最后的效果就是：哪个war或者ejb先初始化，它就会去初始化ContextSingletonBeanFactoryLocator实例，由于是singleton，只会有一个实例存在，所有的war和ejb都从这个locator里面拿到具体存放业务bean的context，实现了context的共享。</p>
<p>在这里需要留意的是classloader，必须很清楚的知道哪些类是由哪个层次的classloader加载的：所有共享的bean，以及相关的spring jar都必须由EJB classloader加载。关于EAR的classloader及层次关系请参看 <a href="/blog/2009/09/27/WebLogic-classloading/" title="WebLogic的classloading">WebLogic的classloading</a>。</p>
<p>在实际应用中，往往不需要对application context作隔离，整个ear里面所有ejb、war共享一个application context是最简便的。这时war里不需要定义任何context和context loader，与EJB一样直接使用ContextSingletonBeanFactoryLocator就可以获取到context。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">beanFactory= ContextSingletonBeanFactoryLocator.getInstance(<span class="string">&quot;classpath*:beanRefContext.xml&quot;</span>).useBeanFactory(<span class="string">&quot;share-context&quot;</span>).getFactory();</span><br></pre></td></tr></table></figure>

<p><a href="http://www.flickr.com/photos/leoliang/5370082919/"><img src="http://farm6.static.flickr.com/5245/5370082919_6dfc7f7b1d_z.jpg" alt="sping_shared_context"></a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>SpringFramework</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐一个介绍翻墙知识的邮件列表</title>
    <url>/blog/2010/02/24/Recommend-a-introduced-over-the-wall-knowledge-of-the-mailing-list/</url>
    <content><![CDATA[<p>订阅bypassgfw邮件列表后，可通过email定期会收到翻墙软件更新版本。订阅方法有两种：</p>
<ol>
<li>访问<a href="https://groups.google.de/group/bypassgfw?hl=zh-CN">https://groups.google.de/group/bypassgfw?hl=zh-CN</a>(此地址已被墙)，用Google&#x2F;GMail账号登录，点击右侧”加入此论坛”</li>
<li>发邮件至 <a href="mailto:&#x6a;&#x73;&#109;&#105;&#x74;&#x68;&#x2e;&#101;&#x6d;&#x61;&#x69;&#108;&#50;&#48;&#x30;&#57;&#64;&#103;&#111;&#x6f;&#103;&#x6c;&#x65;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;">&#x6a;&#x73;&#109;&#105;&#x74;&#x68;&#x2e;&#101;&#x6d;&#x61;&#x69;&#108;&#50;&#48;&#x30;&#57;&#64;&#103;&#111;&#x6f;&#103;&#x6c;&#x65;&#109;&#x61;&#x69;&#108;&#46;&#x63;&#111;&#x6d;</a> 申请加入(请在标题中标明”申请加入Bypass GFW Google Group)</li>
</ol>
<p>以下内容摘自bypassgfw的介绍：</p>
<blockquote>
<p>更多翻墙软件和翻墙技巧 <a href="http://twitbrowser.net/blog">http://twitbrowser.net/blog</a>墙内镜像：<a href="http://tbm001.mooo.com/">http://tbm001.mooo.com/</a></p>
<p>加入小组需Google&#x2F;GMail账号，没有Google&#x2F;GMail账号也可以直接发邮件至<a href="mailto:&#x6a;&#x73;&#109;&#105;&#x74;&#104;&#x2e;&#101;&#109;&#97;&#x69;&#x6c;&#x32;&#x30;&#x30;&#57;&#x40;&#x67;&#x6f;&#111;&#103;&#108;&#x65;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;">&#x6a;&#x73;&#109;&#105;&#x74;&#104;&#x2e;&#101;&#109;&#97;&#x69;&#x6c;&#x32;&#x30;&#x30;&#57;&#x40;&#x67;&#x6f;&#111;&#103;&#108;&#x65;&#109;&#x61;&#x69;&#108;&#x2e;&#x63;&#111;&#x6d;</a>申请加入(请在标题中标明”申请加入Bypass GFW Google Group)，我会手动添加到邮件列表中</p>
<p>163和Hotmail会将小组邮件标为垃圾邮件，请尽量不要使用这两个邮箱订阅小组邮件</p>
<p>本小组仅为发送邮件所创建，每周会发送两封附件包含有效翻墙软件的邮件至所有组员邮箱，问题讨论请到<a href="http://groups.google.com/group/bypassgfwdiscussions">http://groups.google.com/group/bypassgfwdiscussions</a></p>
<p>如果您有任何问题或无法收到邮件，请发送邮件到 <a href="mailto:&#x6a;&#x73;&#x6d;&#x69;&#x74;&#x68;&#46;&#101;&#109;&#97;&#x69;&#108;&#50;&#48;&#x30;&#x39;&#64;&#x67;&#111;&#x6f;&#x67;&#x6c;&#101;&#109;&#97;&#105;&#108;&#46;&#x63;&#111;&#109;">&#x6a;&#x73;&#x6d;&#x69;&#x74;&#x68;&#46;&#101;&#109;&#97;&#x69;&#108;&#50;&#48;&#x30;&#x39;&#64;&#x67;&#111;&#x6f;&#x67;&#x6c;&#101;&#109;&#97;&#105;&#108;&#46;&#x63;&#111;&#109;</a></p>
</blockquote>
]]></content>
      <tags>
        <tag>Anti-GFW</tag>
      </tags>
  </entry>
  <entry>
    <title>Two questions about SIP message transport</title>
    <url>/blog/2010/02/26/Two-questions-about-SIP-message-transport/</url>
    <content><![CDATA[<h3 id="SIP-messages-are-sent-in-mix-of-UDP-and-TCP"><a href="#SIP-messages-are-sent-in-mix-of-UDP-and-TCP" class="headerlink" title="SIP messages are sent in mix of UDP and TCP"></a>SIP messages are sent in mix of UDP and TCP</h3><p>In our test we found that our client first sent SIP messages in UDP but later on it changed to TCP. Is it an issue?</p>
<p>In RFC 3261 (SIP) chapter 18.1.1 and 18.2.1, it says:</p>
<blockquote>
<p>If a request is within 200 bytes of the path MTU, or if it is larger than 1300 bytes and the path MTU is unknown, the request MUST be sent using an RFC 2914 congestion controlled transport protocol, such as TCP. … This prevents fragmentation of messages over UDP and provides congestion control for larger messages.</p>
<p>For any port and interface that a server listens on for UDP, it MUST listen on that same port and interface for TCP. This is because a message may need to be sent using TCP, rather than UDP, if it is too large.</p>
</blockquote>
<p>So, whether send a SIP message in UDP or TCP is decided bytransport layer. When the initial SIP message of a transaction is sent in UDP it’s possible that the consequent messages are sent in TCP.</p>
<h3 id="SIP-MESSAGE-is-resent-in-0-5-second"><a href="#SIP-MESSAGE-is-resent-in-0-5-second" class="headerlink" title="SIP MESSAGE is resent in 0.5 second"></a>SIP MESSAGE is resent in 0.5 second</h3><p>In another test case we found that the client resends the SIP MESSAGE request in 0.5 second if it doesn’t receive the response. We know that SIP message should be resent in a specific time if no response is received. But why the interval is 0.5 second? Is it configurable in Sailfin?</p>
<p>Also go to RFC 3261, find the answer in chapter 17.1.1.2 and 17.1.2.2:</p>
<blockquote>
<p>If an unreliable transport is in use, the client transaction MUST set timer E to fire in T1 seconds. If timer E fires while still in this state, the timer is reset, but this time with a value of MIN(2<em>T1, T2). When the timer fires again, it is reset to a MIN(4</em>T1, T2). … For the default values of T1 and T2, this results in intervals of 500 ms, 1 s, 2 s, 4 s, 4 s, 4 s, etc.</p>
<p>The default value for T1 is 500 ms. T1 is an estimate of the RTT between the client and server transactions. … T1 MAY be chosen larger, and this is RECOMMENDED if it is known in advance (such as on high latency access links) that the RTT is larger.</p>
</blockquote>
<p>In SailFin(GlassFish) the value of T1 and T2 can be configured in admin console under: Configuration - SIP Service - SIP Protocol.</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>SIP</tag>
      </tags>
  </entry>
  <entry>
    <title>便携式行人过街警示棒</title>
    <url>/blog/2010/02/27/Portable-pedestrians-cross-the-street-warning-great/</url>
    <content><![CDATA[<p><img src="http://farm5.static.flickr.com/4010/4390272360_cd4c3c040a_o.jpg"></p>
<p>几乎每次过马路，我都恨不得手里有这样一块牌子，可以伸到身体前面，把来车挡住 —- 在没有交通灯的斑马线，十个司机有九个会毫不减速的冲过，而不会避让过马路的行人；即使在有交通灯的斑马线，如果不是路口，也有司机根本当红灯不存在。</p>
<p>我想，能不能做个可伸缩的棒，例如是套筒的方式，里面加上弹簧，缩起来的时候大概烟盒大小，可以方便的放在口袋，当需要过马路的时候，将它弹出来，变成一米左右的长度。棒身用红、黄鲜艳颜色的反光材料覆盖。为了增大可视面积，棒伸展时需要在前端弹出一个平面，应该用个弹性钢丝圈加上薄膜可以做出来，类似可折叠太阳帽的样子。过完马路后一压就能够把警示棒收起来。</p>
<p>Beatles四位大叔过Abbey Road时就是这样子的：</p>
<p><img src="http://farm5.static.flickr.com/4003/4390322224_a0a6979623_o.jpg"></p>
<p>现在激光全息成像技术还不成熟，如果能够做到便携化，还可以从口袋里掏出激光器一照，一个栅栏就出来了：</p>
<p><img src="http://farm3.static.flickr.com/2711/4389554227_f36eafa67f_o.jpg"></p>
<p>至于驾车人士关心的如何制止行人乱穿马路，那就是不是我考虑的问题了。我自己是遵守交通规则的，有斑马线就走斑马线，有行人交通灯就等绿灯才过。</p>
<p>欢迎驾车人士批判，哈哈 :)</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Study of the issue that CXF can&#39;t run on GlassFish</title>
    <url>/blog/2010/03/11/Study-of-the-issue-that-CXF-can-t-run-on-GlassFish/</url>
    <content><![CDATA[<h2 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h2><p>SOAP WS client which uses CXF can’t run on GlassFish AS. Getting ClassCastException on invoking some CXF API. The problem was described as CXF-2237 [2].</p>
<h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>JAX-WS is the Java API for XML Web Service defined by JSR 224. SUN provides a JAX-WS reference implementation in Metro project, which is inside GlassFish AS. The SUN JAX-WS implement was later also merged into JDK 6. Apache CXF is another JAX-WS implementation.</p>
<p>An application can select different JAX-WS implementation by Provider SPI. JSR 224 [4] chapter 6.2.1 defines the algorithm of Provider implementation selection:</p>
<blockquote>
<ol>
<li><p>If a resource with the name of META-INF&#x2F;services&#x2F;javax.xml.ws.spi.Provider exists, then its first line, if present, is used as the UTF-8 encoded name of the implementation class.</p>
</li>
<li><p>If the ${java.home}&#x2F;lib&#x2F;jaxws.properties file exists and it is readable by the java.util.Properties.load(InputStream) method and it contains an entry whose key is javax.xml.ws.spi.Provider, then the value of that entry is used as the name of the implementation class.</p>
</li>
<li><p>If a system property with the name javax.xml.ws.spi.Provider is defined, then its value is used as the name of the implementation class.</p>
</li>
<li><p>Finally, a default implementation class name is used.</p>
</li>
</ol>
</blockquote>
<p>The Provider implementation class in JDK 6 is <code>com.sun.xml.internal.ws.spi.ProviderImpl</code> in rt.jar. I guess it’s the default implementation as mentioned in step 4.</p>
<p>CXF packages META-INF&#x2F;services&#x2F;javax.xml.ws.spi.Provider which points to <code>org.apache.cxf.jaxws.spi.ProviderImpl</code> in cxf.jar. It will be considered in step 1.</p>
<p>Metro also packages META-INF&#x2F;services&#x2F;javax.xml.ws.spi.Provider which points to <code>com.sun.xml.ws.spi.ProviderImpl</code> in webservices-rt.jar. It also will be considered in step 1.</p>
<p>Because in GlassFish the Metro library is in system classpath, so its META-INF&#x2F;services&#x2F;javax.xml.ws.spi.Provider will be loaded precede over CXF’s. That’s why Metro will always be used as JAX-WS implement no matter CXF exists or not.</p>
<h2 id="Potential-Solution"><a href="#Potential-Solution" class="headerlink" title="Potential Solution"></a>Potential Solution</h2><h3 id="Classloader-control"><a href="#Classloader-control" class="headerlink" title="Classloader control"></a>Classloader control</h3><p>If we can force the JVM to load resource from cxf.jar prior to webservices-rt.jar that will be fine. But GlassFish hasn’t the mechanism likeWebLogic’s <code>&lt;prefer-application-packages&gt;</code>[5]. After some finding we give up this approach.</p>
<h3 id="Remove-Metro-from-GlassFish"><a href="#Remove-Metro-from-GlassFish" class="headerlink" title="Remove Metro from GlassFish"></a>Remove Metro from GlassFish</h3><p>If there is no application which deploys on the this application server that depends on Metro, we can remove Metro lib (webservices-*.jar) from GlassFish’s lib folder.</p>
<h3 id="Change-to-Metro"><a href="#Change-to-Metro" class="headerlink" title="Change to Metro"></a>Change to Metro</h3><p>That’s nothing to say. We finally choose this way. There is almost no workload to migrate our code from CXF to Metro, because both of them follows JAX-WS specification, except that some code that calls CXF specify API need to be changed. We even don’t change the build script and still use CXF’s wsdl2java tool.</p>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol>
<li><a href="https://issues.apache.org/jira/browse/CXF-857">CXF Issue: CXF-857</a></li>
<li><a href="https://issues.apache.org/jira/browse/CXF-2237">CXF Issue: CXF-2237</a></li>
<li><a href="http://stackoverflow.com/questions/2064068/how-to-pick-cxf-over-metro-on-glassfish">StackOverflow: How to pick CXF over Metro on Glassfish</a></li>
<li><a href="http://jcp.org/en/jsr/detail?id=224">JSR 224: JAX-WS 2.x</a></li>
<li><a href="/blog/2009/09/27/WebLogic-classloading/" title="WebLogic的classloading">WebLogic的classloading</a></li>
</ol>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取Android系统上的网络通信</title>
    <url>/blog/2010/03/19/Grab-Android-system-on-network-communication/</url>
    <content><![CDATA[<p>Android是基于Linux的系统，这是对开发者很方便的。今天手机上网不太正常，想到抓些包来看看，于是上网google一下，就找到教程了：<a href="http://pdk.android.com/online-pdk/guide/tcpdump.html">Debugging with Tcpdump</a>。我的ROM没有预装tcpdump（据说cm的rom有），自己编译也太麻烦了，网上也可以找到编译好的包，搜索”tcpdump-arm”可找到。</p>
<p>有了tcpdump，要分析别人的应用干了些什么也方便多了。例如这是 Google Maps 获取network location的包：</p>
<pre><code>POST /loc/m/api HTTP/1.1
Connection: close
Content-Type: application/binary
Content-Length: 496
Host: www.google.com
User-Agent: GMM/3.0 (dream ERE27); gzip

....&quot;location,1.0,android,android,en_US... I.....g...........g:loc/ql......
..
.1.0.Iandroid/google/passion/passion/mahimahi:2.1/ERD72/22132:user/release-keys.#2:l-7Yxu1UHhuUZlb5:F_iqbZnw84bV2J0q*.zh_CN2
....CMCC .(...
.voicesearch..
.com.diddo.diddo.diddo..
.apps.maps..
.com.lim.android.automemman&quot;..
..
...I...... ..(.......$....I...... ..(.....I...... ..(.....I...... ..(.....I...... ..(.....I...... ..(.&quot;...I...... ..(.0..K&quot;...I...... ..(.0..J&quot;...I...... ..(.0...&quot;...I...... ..(.0...(......


HTTP/1.1 200 OK
Content-Type: application/binary
Content-Disposition: attachment
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: Fri, 01 Jan 1990 00:00:00 GMT
Date: Fri, 19 Mar 2010 04:49:31 GMT
X-Content-Type-Options: nosniff
X-Frame-Options: SAMEORIGIN
Content-Length: 188
Server: GSE
X-XSS-Protection: 0
Connection: close

..............g...)...........`.Z... $...k.......fg./,
.....,..&quot;....cZ
....(.
!&#39;....S`..F...3..BP.n..j...`Q&#123;..V..v...Z&#39;yT;.j...]..Q+.U.d.Pm.,6..aj..j_....=..T...
goB. .U....s7.......#
)...
</code></pre>
<p>不过payload是binary的，没法直接看出里面是些什么东西。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>旧城相对论 - 对话旧城装置艺术展</title>
    <url>/blog/2010/03/23/The-old-city-relativity-dialogue-old-city-device-art/</url>
    <content><![CDATA[<p>这个活动由<a href="http://www.firexrd.com/Blog/?p=603">FIREXRD</a>发起，他以”<a href="http://zh.wikipedia.org/zh-cn/File:Chanyuengposter.jpg">广州撑你</a>“海报而闻名。豆瓣同城上也有<a href="http://www.douban.com/event/11600836/">活动页面</a>。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4457516716/"><img src="http://farm5.static.flickr.com/4049/4457516716_34649e402d_o.jpg" alt="旧城相对论"></a></p>
<p>展览在北京路的<a href="http://225.goelia.com.cn/">歌莉娅225概念会所</a>进行，展厅面积很小，但这是由观众参与完成的装置艺术，你在那里看到的不是完成后的作品，而是不断动态更新中的，并且每人都可以参与其中。另外这个会所也值得一赞，在是旧建筑保育与商业利用结合的成功例子。</p>
<blockquote>
<p>感谢国家，我冇意见，谢绝跨省</p>
</blockquote>
<p><a href="http://www.flickr.com/photos/leoliang/4457512786/"><img src="http://farm3.static.flickr.com/2759/4457512786_e9a1222544_o.jpg" alt="旧城相对论"></a></p>
<p>这个更加猛：</p>
<p><a href="http://www.flickr.com/photos/leoliang/4457511592/"><img src="http://farm5.static.flickr.com/4006/4457511592_2c05c2fd31_o.jpg" alt="旧城相对论"></a></p>
<p>当然，发泄怨气的其实还是少数，大多数都是表达对老建筑以及其上承载的文化的留恋。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4456734439/"><img src="http://farm5.static.flickr.com/4020/4456734439_b293ff5282_o.jpg" alt="旧城相对论"></a></p>
<p>这是我和清风白云的”创作”：</p>
<blockquote>
<p>Big brother is watching you!</p>
</blockquote>
<p><a href="http://www.flickr.com/photos/leoliang/4456736391/"><img src="http://farm5.static.flickr.com/4042/4456736391_192618ca5b_o.jpg" alt="旧城相对论"></a></p>
<p>这也是我们搞的，我们向往信息的自由：</p>
<p><a href="http://www.flickr.com/photos/leoliang/4456735659/"><img src="http://farm3.static.flickr.com/2700/4456735659_d6f35ef45e_o.jpg" alt="旧城相对论"></a></p>
]]></content>
      <tags>
        <tag>ArtCulture</tag>
      </tags>
  </entry>
  <entry>
    <title>读书感想：交往与空间 (Life between buildings)</title>
    <url>/blog/2010/04/13/Reading-feeling-contact-and-the-space-Life-between-buildings-/</url>
    <content><![CDATA[<p><a href="http://book.douban.com/subject/1393903/">交往与空间</a>是一本关于城市规划如何影响人的生活，怎样才能让城区更富于生机和魅力，让生活其中的人更愉快舒畅的书。这本书探讨了怎样的城市是真正的宜居城市。</p>
<p>周末花了大半天时间看完了这本书，看书过程挺享受的，很久没有认真看书了。边看边用手机在twitter上发读书感想，twitter是一个不错的记录读书感想的工具。</p>
<hr>
<p>为什么老城区会让人感觉亲切?因为公共空间尺度合适，不是宏大而单调；空间没有被宽阔的机动车道割裂，联系紧密；空间功能多元化，各种人群各种活动融合在一起更有生机。</p>
<p>现在发达国家的城市规划逐渐摒弃功能主义，让每个区域的功能趋于综合化，使得空间更有生气和活力，也减少了时间性单向的交通压力。但我们的城市规划还是喜欢搞单一的商务区，高科技园，大学城。</p>
<p>“通过人的观察与感受，使公共环境中的活动与毗邻的住宅商店车间工厂的各种活动融会贯通，就能从双向扩展和丰富体验的可能性”：这是新的理念，在欧洲就见过不少临街办公室开着大大的玻璃窗并且毫无遮挡，外面对里面的东西和活动一览无遗。在瑞典，私人住宅的阳台和院落大多都是通透的，夏日经常见到有人在阳台上闲坐观望甚至用餐，外面的人也看到他们，大家互为风景。</p>
<p>步行者走捷径的愿望是非常执着的，如果可以看到目标，他们总是径直走向那里。因此，很多草坪花基是注定要被践踏的，与其竖牌子搭栏杆还不如想想怎样能够方便行人。</p>
<p>当去远处目的地的路程一览无遗时，步行就会索然无味；但看得见目的地而又不得不绕行，则更令人扫兴和不悦。蜿蜒富于变化的街道使步行变得更有趣，因此在老城古镇中闲逛是一种享受，特别是拐过一个弯，一个小广场一座特别建筑或是一个雕塑突然显露眼前时更令人惊喜。</p>
<p>一个理想的居住空间应该是既有足够的私人空间，也有良好的可活动的公共空间。现在我们的居住环境是普遍提高了，但公共空间却几乎没有。回家关上双重防盗门，窗户阳台还有防盗网，基本与外界隔绝。有小区花园的也没有多少可闲坐的地方。比起以前小孩可在街头玩耍，街坊在门前聊天，我们城市离宜居更远了。</p>
<p>我们这里一些郊区大盘算是有些公共空间，但还不是有活力的空间。因为开发的思路是纯住宅区，像祈福要买点东西都要跑到外头去。适当的商业其实是有益的。</p>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>DIY一个Sheldon用的叠衣板</title>
    <url>/blog/2010/05/01/DIY-Sheldon-/</url>
    <content><![CDATA[<p>在《<a href="http://movie.douban.com/subject/2156528/">生活大爆炸</a>》第一季中某集的场景是Sheldon在洗衣房里叠衣服，他用的是叠衣板，衣服铺上面翻三下，就方方正正的叠好了。没看过的同学可以看看下面的youtube视频片段（需要翻墙）：</p>
<p>看着觉得真好玩，于是去淘宝找一下。淘宝果然没有买不到的东西，叫做神奇叠衣板，山寨货几十块钱，可是看了不少评价都说质量不好。在网上搜索的时候无意中看到有人说自己DIY，是啊，这么简单的东西，为什么不自己做呢。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4567523723/"><img src="http://farm5.static.flickr.com/4008/4567523723_7775160d6f_o.jpg" alt="DIY cloth folder"></a></p>
<p>找到装电压力锅的纸盒，当时觉得可能还有用没舍得扔，果然派上用场了。制作非常简单，无非就是切割、折叠、粘贴固定。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4567523741/"><img src="http://farm4.static.flickr.com/3298/4567523741_6b42abf4a5_o.jpg" alt="DIY cloth folder"></a></p>
<p>自己做还有个好处是可以根据自己衣柜的尺寸来做，最大化的利用空间。图中的W和H是期望叠出来的衣服的尺寸，要考虑衣服折叠后的厚度，所以要折边处要预留1～2厘米。</p>
<p>下面是做好的成品，虽然不大好看，但是实践证明还是相当好用的 :)</p>
<p><a href="http://www.flickr.com/photos/leoliang/4567523739/"><img src="http://farm5.static.flickr.com/4008/4567523739_677118ef91_o.jpg" alt="DIY cloth folder"></a></p>
<p><a href="http://www.flickr.com/photos/leoliang/4567523737/"><img src="http://farm4.static.flickr.com/3298/4567523737_94cb2b1211_o.jpg" alt="DIY cloth folder"></a></p>
<p>叠衣服的过程就是四步：铺好，如果衣袖和下摆过长超出叠衣板的边缘就先把它翻进来，然后将叠衣板左、右、下翻三下，ok。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4567523735/"><img src="http://farm5.static.flickr.com/4067/4567523735_fa5a268e89_o.jpg" alt="DIY cloth folder"></a></p>
<p>做好了很兴奋，正好衣柜里的衣服要换季了，把夏装拿出来，全部重新叠了一遍。用叠衣板后，叠一件衣服的时间不见得能快多少，但好处是叠得方正，一摞下来每件的大小都一模一样，放衣柜里整整齐齐。薄衣服的效果都很好，包括tee、衬衫、秋衣之类，但不能用来叠厚衣服，例如毛衣。其实也不是叠衣板的问题，而是厚衣服不能叠成这么小的面积，如果有必要可以专门再做一个大尺寸的用来叠厚衣服。</p>
]]></content>
      <tags>
        <tag>DIY</tag>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>Nexus One 到手，以及刷机过程</title>
    <url>/blog/2010/05/11/Nexus-One-/</url>
    <content><![CDATA[<p>昨天终于拿到了Google赠送的Nexus One手机了，Google做事也够拖拖拉拉的，确认信说两个星期左右会寄到，实际上用了两个多月。不过还是得感谢Google，我去年开通Android Developer帐号的时候还埋怨，我只是发布免费软件，都要我交25美元才能开通。Google送我手机的原因是因为我符合它的Android开发者推广计划的条件：开发的Android应用下载量超过5000，用户评价高于3.5星。我的 HereIm Map Helper 和 Wallpaper Label 都符合条件。</p>
<p>原来用的G1因为内存太小，运行速度很卡。Nexus One用起来的第一感受就是顺畅，另外就是屏幕显示效果很艳丽。</p>
<p>机器是2.1的系统，但是没有root，因此正式使用前的第一件事情就是刷机。上网看了一些文章，大部分写得罗里罗嗦的，完全没有重点，真正动手做其实就是简单几步。下面不写具体操作过程，因为网上一大堆。</p>
<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>PC上要安装好USB驱动和fastboot、adb工具。工具是Android SDK附带的，装好SDK就有。</p>
<h3 id="Unlock-bootloader"><a href="#Unlock-bootloader" class="headerlink" title="Unlock bootloader"></a>Unlock bootloader</h3><p>Unlock了之后才允许进行刷机操作。Unlock后开机时会显示一个打开的锁的图标，说明这台机器已经unlock了，也就是无保修了。只要unlock了，下面的操作都可以进行了，不一定要按照先后顺序。</p>
<h3 id="更新recovery"><a href="#更新recovery" class="headerlink" title="更新recovery"></a>更新recovery</h3><p>下载Amon_RA做的recovery image，用fastboot工具写入手机。安装新ROM或者patch都需要通过recovery来进行，其实系统已经自带了recovery，不更换也能用，但是Amon_RA的功能更强，使用起来会方便很多。</p>
<h3 id="更新radio"><a href="#更新radio" class="headerlink" title="更新radio"></a>更新radio</h3><p>我检查了一下，自带的radio已经是最新版本，所以跳过了这个步骤。</p>
<h3 id="安装新版本的ROM"><a href="#安装新版本的ROM" class="headerlink" title="安装新版本的ROM"></a>安装新版本的ROM</h3><p>我装的是CyanogenMod的ROM，比较可靠。这个ROM是带root的，装起来就有root权限了。因为CM的ROM是不带Google Applications的（版权问题），所以还需要再刷个GoogleApp包（网上可找到，目前最新版本是EPE54B），这个包应该是通过Google官方升级包制作出来的。如果装的是其他版本的ROM，例如国内的人制作的，通常已经把Google应用内置进去了，就不需要额外步骤。</p>
<p>对我而言，到此为止刷机过程就完成了。有些人还要再打其他的patch，例如中文排序、theme之类的。</p>
<h3 id="不更换ROM，获取root"><a href="#不更换ROM，获取root" class="headerlink" title="不更换ROM，获取root"></a>不更换ROM，获取root</h3><p>是否有root权限，是与ROM相关的，例如我刷了CM 5.0.6就有root权限了。有些人不想换ROM，沿用官方的系统，但又想要root权限，就需要刷hack过的superboot image。要注意下载superboot image的时候，要选择跟ROM一致的版本，例如目前官方正式发布的最新ROM版本是ERE27。版本号从手机信息界面可以查到。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>在考虑怎样在Android手机上使用SSH tunnel翻墙</title>
    <url>/blog/2010/06/02/Consider-how-in-the-Android-mobile-phones-in-use-SSH-tunnel-over-the-wall/</url>
    <content><![CDATA[<p>目前在PC上使用SSH tunnel翻墙是一个相当广泛使用的方案，国外SSH帐号的获取不是太难，购买起来价格也比VPN帐号要便宜。但是在智能手机上目前还不能使用SSH方案，只能用VPN。Android系统是基于Linux的，特别是root了之后，基本上要玩什么都随心所欲了。因此Android上是应该也可以使用SSH tunnel的。</p>
<p>先看看Windows上是怎样设置SSH翻墙的：</p>
<ul>
<li>首先需要有个支持dynamic port forwarding的SSH client，这个SSH client能开放出SOCKS服务</li>
<li>如果浏览器(或者其他程序)支持使用SOCKS proxy，设置使用SSH client开放出来的SOCKS端口，就可以使用了</li>
<li>如果浏览器(或者其他程序)不支持SOCKS proxy，只支持HTTP proxy，就需要再运行一个支持SOCKS的代理程序（例如Privoxy），将HTTP转成SOCKS</li>
</ul>
<p><img src="http://farm5.static.flickr.com/4046/4662779602_743c1c50c2_b.jpg"></p>
<p>在Android上就要麻烦一点了，因为需要网络通讯的不仅仅是浏览器，很多Android application都需要访问网络，但是它们并不支持proxy—-连HTTP proxy都不支持，更不用说SOCKS了。它们只会直接连接目标站点，如图中虚线所示，然后撞墙。</p>
<p>但是Linux有iptables，可以设置iptables规则（需要root权限），将HTTP&#x2F;HTTPS请求forward到一个transparent SOCKS proxy去。transparent SOCKS proxy的作用是将任意TCP连接转成SOCKS连接，这样就可以走SSH tunnel出去了。我分析过几乎所有的Android应用访问网络都是走HTTP&#x2F;HTTPS协议的，所有仅仅处理HTTP&#x2F;HTTPS就够了。</p>
<p><img src="http://farm5.static.flickr.com/4023/4662779594_32dd9773cb_b.jpg"></p>
<p>Android上支持dynamic port forwarding的SSH client有<a href="http://code.google.com/p/connectbot/">ConnectBot</a>，不过ConnectBot是一个有界面的应用，似乎不能由其他程序来控制，这样就不好做到翻墙软件的傻瓜化了。应该还是弄一个命令行的ssh client更合适。</p>
<p>在网上搜索了一下，开源的transparent SOCKS proxy有几个：<a href="http://oss.tiggerswelt.net/transocks_ev/">transocks_ev</a>，<a href="http://transocks.sourceforge.net/">TranSocks</a> 和 <a href="http://darkk.net.ru/redsocks/">redsocks</a>。从文档上看，似乎transocks_ev比较适合。</p>
<p>但是，我现在面临的困难在于我不熟悉如何交叉编译Android平台程序（C语言），了解了一下如何搭建Android交叉编译环境，似乎挺麻烦（对我而言）。而且要让普通Linux上可运行的sshd和transocks port到Android上，也许还有一些代码要修改。不知道有没有Android系统高手能够帮忙？</p>
]]></content>
      <tags>
        <tag>Anti-GFW</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android手机上使用SSH tunnel的进展 (2010-06-06)</title>
    <url>/blog/2010/06/07/Android-SSH-tunnel-2010-06-06-/</url>
    <content><![CDATA[<p>在上一篇博客中，我提出了<a href="http://good-good-study.appspot.com/blog/posts/20001">在Android手机上使用SSH tunnel的想法</a>。几天下来有了一些进展。</p>
<p>首先，非常感谢<a href="http://sunner.cn/">Sunner</a>，他帮忙编译出Android平台的transocks_ev binary，并且解决了一些在Android平台上运行的问题。</p>
<p>在实验中，用ConnectBot + transocks_ev + iptables，HTTP和HTTPS请求都能重定向到SSH tunnel了，测试了浏览器和其他一些应用，无需任何额外设置就可正常访问网络。不过目前没有考虑使用非HTTP&#x2F;HTTPS的应用。但现在还有两个问题：</p>
<ol>
<li>DNS查询还是直接出去，不能避免DNS污染</li>
<li>现在用ConnectBot作为ssh client，并不合适：<br>* 在port forwarding时ConnectBot CPU占用非常高，达到99%，估计是有bug。<br>* ConnectBot的连接和断开需要手动控制，密码也要在界面输入，无法做到整个翻墙过程单击执行。</li>
</ol>
<p>对于第一个问题，transocks_ev 不支持UDP，因此无法tunnel DNS查询请求。我在考虑参考<a href="http://code.google.com/p/cmwrap/">CMWrap</a>的方案，做一个DNS proxy，转成TCP请求发出去。  </p>
<p>对于第二个问题，想用一个命令行ssh来代替ConnectBot。目前在Android上常用的是dropbear，但dropbear不支持SOCKS。查了linux上支持SOCKS的ssh client有OpenSSH和lsh（还有没有其他？），但是Sunner尝试了编译OpenSSH和lsh都不成功，因为它俩都太依赖gnu的一些东西了，比如glibc、glib等，而android上所有的对应的库都是从简的。因此暂时还是先用着ConnectBot，并将CPU高的问题反馈给开发者，看看有没有什么回应。</p>
]]></content>
      <tags>
        <tag>Anti-GFW</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>时间管理工具的设计：任务计划时间的逐步精确</title>
    <url>/blog/2010/06/23/Time-management-tool-design-the-task-of-precise-plan-time-step-by-step/</url>
    <content><![CDATA[<p>我管理待办事情的基本方法是维护一个列表，将所有要做的事情都记录下来，然后安排具体的时间来处理它们。传统的时间管理工具分为任务管理和日程管理两大类，相互独立，而我需要将它们结合起来用，故此以前写过<a href="/blog/2009/03/17/Why-can-t-together/" title="为什么不能合在一起">为什么不能合在一起</a>一文。后来，也发现<a href="/blog/2009/08/04/Outlook2007-/" title="Outlook2007日历的改进">Outlook 2007已经将两者做了一定程度的整合</a>。</p>
<p>今天又再思考了一下：任务管理就是一个逐步细化的过程，包括执行时间的具体化和操作步骤的细化（拆分子任务）。理想的工具应该对整个过程都提供支持。</p>
<p>当新增一个任务时，外界往往并没有指定执行任务的具体时间，可能会有一个deadline，只要在deadline之前完成都是可以的，这时就是传统时间管理工具说称的 task。为了完成此任务，需要安排一个具体的时间段去执行它，在传统的时间管理工具上，就是要为此任务创建一个日程安排 (event)。但在实际操作中，你往往不能一下子就确定在哪个明确的时间去执行任务，而是先确定一个大概的时间范围，再逐步的精确。目前我还没有见到哪个工具能够为这个过程提供支持。</p>
<p>我设想的时间管理系统应该用一个统一的模型来存储任务与日程，因为它们本质上是同样的东西。任务有一个属性，是计划执行的时间。计划执行时间可以为空，说明还没有为此任务指定执行时间。计划执行时间不一定是精确时间类型，可以有不同精度级别的时间类型，包括：年 &#x2F; 季度 &#x2F; 月份 &#x2F; 周 &#x2F; 天 &#x2F; 时间段 &#x2F; 时 &#x2F; 分。随着计划的逐步细化，赋予任务计划执行时间越来越高精度的时间。</p>
<p>例如，我和Bob很久没见，想一起吃午饭聚聚旧，于是电话联络。Bob刚好出差了，要下个月中旬才回来，所以我们初定时间在下个月的第四周（Week 29），我在时间管理系统中添加了 Dinner with Bob 这一项，并设计划时间为 W29。到了week 28的周末，我review任务时看到了这项，就跟Bob再确认时间，发现周一中午大家都有时间，但是具体几点钟要看周一早上与餐厅订座时才能确认，于是我把这项任务的计划时间更新为周一，但这还不是最精确的时间。周一早上，订座确认了，再把任务的具体时间12:00～13:00设置上去。</p>
<p>我也大概设想了一下用户界面，应该有一个可缩放的时间视图，就像电子地图的缩放一样，既可以查看大时间范围内的任务安排，也可以查看具体精确的时间计划。用Excel画了界面原型，比较粗糙，实际做时当然需要细致的考虑用户体验了。左右拖动进行时间的缩放，具体某个时间列的上下滚动进行时间的选择。要为某个任务安排或者修改执行时间，可以通过拖拽到时间视图相应的位置来做到。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4727145212/"><img src="http://farm2.static.flickr.com/1387/4727145212_e90a483c0b_m.jpg" alt="scheduler-day"></a></p>
<p>为任务安排大概的时间（Week 29）：</p>
<p><a href="http://www.flickr.com/photos/leoliang/4727145218/"><img src="http://farm2.static.flickr.com/1253/4727145218_5a3c9cb27e.jpg" alt="scheduler-week"></a></p>
<p>为任务安排具体精确的时间：</p>
<p><a href="http://www.flickr.com/photos/leoliang/4727145214/"><img src="http://farm2.static.flickr.com/1010/4727145214_0175c6f578.jpg" alt="scheduler-minute"></a></p>
<p><em>（我并没有开发这样一个时间管理工具的计划，不过如果你有这样的打算，并且也认同我的这种思路，不妨与我联系）</em></p>
]]></content>
      <tags>
        <tag>Idea</tag>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>Amazing, I got the geocoin which was sent to me from Italy two years ago!</title>
    <url>/blog/2010/06/28/Amazing-I-got-the-geocoin-which-was-sent-to-me-from-Italy-two-years-ago-/</url>
    <content><![CDATA[<p><a href="http://www.flickr.com/photos/leoliang/4741853682/"><img src="http://farm5.static.flickr.com/4121/4741853682_e9e93e2010.jpg" alt="Geocoin ALEUNG 1"></a></p>
<p>This picture was taken at 18:44 18-Jun-2010, when I picked up the geocoin <a href="http://www.geocaching.com/track/details.aspx?id=1007428">ALEUNG 1</a> from the cache <a href="http://www.geocaching.com/seek/cache_details.aspx?guid=f4f03572-94c5-440a-ae7e-ce1f755a069b">Golden Triangle</a>. The coin has traveled for two and a half years and over 21 thousand kilometers fromVeneto, Italy before it came to Guangzhou, China.</p>
<p>If you don’t know what is Geocaching, please refer to the definition on <a href="http://en.wikipedia.org/wiki/Geocaching">Wikipedia</a>. In simple saying, it’s a game that someone hide something (a cache) and publish the coordinate (latitude and longitude) on Internet and then other players seek it with help of a GPS receiver. <a href="http://en.wikipedia.org/wiki/Geocoin">Geocoin</a> is a special kind of coin each has an unique number that can be traced on geocaching website. Geocaching players pick up a coin from one cache and drop it into another cache, so that the coin can travel from cache to cache, even around the world.</p>
<p>The story began from Oct 2006, Italian geocacher <a href="http://www.geocaching.com/profile/?guid=b160e421-bca1-4b08-9c48-7944b4f019dc">i5fzi</a> came to Guangzhou for the Canton Fair. He contacted me on <a href="http://www.geocaching.com/">geocaching.com</a>.He didn’t know me before, but I was almost the only cacher in Guangzhou at that time. So it was geocaching that make us know each other. He kindly invited me for dinner and I suggested him some caches to find.</p>
<p>After i5fzi came back to Italy, he sent out several geocoins as present to me and Cherrie, who was his translator in Guangzhou. The goal of these coins are to reach my caches in Guangzhou. But unfortunately most of the geocoins were missed in there trip, this one I got is the only survival – I am so lucky to get it.</p>
<p>From this <a href="http://www.geocaching.com/track/map_gm.aspx?ID=1007428">map</a> you can see where the coin has been in. It visited some places in Europe then flied to HongKong, and then held by AirQ for a long time, until it was put in Guangzhou. I also thank AirQ, if AirQ didn’t hold and take it to Guangzhou, I guess this coin would have been lost as its friends. The last hotel the coin slept was KowloonW’s <a href="http://www.geocaching.com/seek/cache_details.aspx?guid=f4f03572-94c5-440a-ae7e-ce1f755a069b">Golden Triangle</a>, but it isn’t shown on the map because not recorded on the website. KowloonW was very nice to keep the coin to avoid loss until I have time to fetch it.</p>
<p>Geocaching is so an amazing game. Thank you, all my friends in this game!</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Geocaching</tag>
      </tags>
  </entry>
  <entry>
    <title>松下H540U洗衣机的设计缺陷</title>
    <url>/blog/2010/06/28/Panasonic-H540U-washing-machine-design-flaws/</url>
    <content><![CDATA[<p>家里的松下H540U波轮洗衣机，使用了大概一年半左右开始出现撞桶现象，就是在洗衣的过程中，每次波轮起动（或反转）时，洗衣桶会碰撞到箱体。因为箱体相应位置贴了防撞海绵，摩擦时发出很大很难听的”吱吱”的声音。打开上盖检查过，发现是箱体吊挂系统变形所致，我觉得这属于设计上的缺陷。</p>
<p>如果不清楚波轮洗衣机吊挂系统的结构，可以看看<a href="http://wenku.baidu.com/view/b996ea335a8102d276a22ff5.html">全自动波轮洗衣机培训手册</a>的3.1节。洗衣机的桶体是靠四根吊杆悬挂在箱体的四个角上的，如果吊杆的长度不一致就会造成桶体不平衡。</p>
<p>从照片中可以看出，箱体前面两个角用来悬挂吊杆的角铁都已经变形下沉，而后面的两个角则正常，这样就造成桶体前倾，在洗衣的时候不平衡自然就频频撞击箱体了。</p>
<p><a href="http://www.flickr.com/photos/leoliang/4741375101/"><img src="http://farm5.static.flickr.com/4143/4741375101_8ae3ce01eb.jpg" alt="H540U front-right"></a> <a href="http://www.flickr.com/photos/leoliang/4741375099/"><img src="http://farm5.static.flickr.com/4093/4741375099_9191b131d3.jpg" alt="H540U front-left"></a> <a href="http://www.flickr.com/photos/leoliang/4741375103/"><img src="http://farm5.static.flickr.com/4143/4741375103_3675a8e073.jpg" alt="H540U rear-left"></a></p>
<p>为了外形美观，箱体前面的两条边做成了大圆弧，也许是为了加工方便的缘故，悬挂吊杆的角铁在圆弧部分并没有与箱体接触，是悬空的，起到支撑作用的只有侧面的一部分，由于强度不足在使用一段时间后就变形了。这款洗衣机在最高水位时桶内的重量超过50公斤，平常洗衣就算不满也有30～40公斤。箱体后侧两条边是直角，箱体支持角铁的的长度足够长，就没有发生变形。</p>
<p>如果箱体前边不要做这么大的圆弧，像后面两角一样，就不会有问题；如果圆弧不能放弃，那就应该在圆弧处也翻出一条边，与角铁焊接在一起不让其悬空，不过这样的加工难度会大很多。但无论如何，设计的时候应该要考虑到其强度是否足够支持正常使用负荷，因此我说这是设计的缺陷。</p>
<p>因为箱体只保修一年，出现问题时已经过保了，不能更换。师傅给我的建议是将洗衣机前面两脚垫高，以补偿桶身的倾斜。比较奇怪的是，挂杆的长度居然是无法调节的，不知道是师傅嫌麻烦还是真的不能调。如果不能调，怎么控制生产装配过程出现的误差？</p>
<p>我怀疑其他型号乃止其他厂家的洗衣机都可能会有同样问题—-如果它们的箱体做成大圆弧，选购的时候要留意一下该处的支撑结构。对于H540U，把头伸进桶口处勉强可以看到悬挂角铁，如果看不到或者光线不足，可以用相机拍摄。</p>
<p>我对这款洗衣机的功能还是比较满意的，但是一些非关键性的地方的设计和质量还是有不足。除了这个变形问题，还出现过上盖连接处塑料件断开和进水盒开裂漏水，幸好都属于保修范围更换了。</p>
]]></content>
      <tags>
        <tag>HomeAppliance</tag>
      </tags>
  </entry>
  <entry>
    <title>游泳感想</title>
    <url>/blog/2010/07/30/Swimming-feeling/</url>
    <content><![CDATA[<p>几天前去游泳，连续游了四十分钟，没有感觉到累，倒是游得很无聊。一路就是看着池底白晃晃的瓷片和黑色的泳道线，到头了转个身一蹬池壁，又是单调的白与黑。见不到养眼的泳装美女来分散一下注意力，一路只好默念着这是第十个来回，第十一个来回，目标是十五个，目标是十五个……游得无聊，倒是有了两个想法。</p>
<p>首先是想为什么没有音乐听听呢？跑步的时候可以戴着耳机听音乐，游泳也应该可以才对。做防水的播放器和防水的耳机，难度应该不大，说不定已经有这样的产品了，只是没有普及。</p>
<p>第二个想法有意思些。我在海里看过珊瑚，离岸不远的浅水，只要把头沉入水中，就能见到海底犹如大花园一般的珊瑚世界。如果整个游泳池底铺上大显示屏，游泳池也可以变身为虚拟海底世界。五彩斑斓的珊瑚随着水波微微摇曳，鱼群在其中穿梭。假若结合电脑控制的虚拟现实系统，加上感应器，还可让鱼群在你游近时飞快逃开，而海豚就伴在你左右。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>Android手机上使用SSH tunnel：prototype</title>
    <url>/blog/2010/07/31/Android-SSH-tunnel-prototype/</url>
    <content><![CDATA[<p>在上次写下<a href="/2010/06/07/Android-SSH-tunnel-2010-06-06-">进展</a>之后，就真的没有任何进展了。本来打算完成之后会发布成开源软件的，但现在看来遥遥无期。有人问我iptables命令怎么写，就把简要介绍放这里吧。</p>
<ol>
<li>首先确认你有Android系统的root权限，下面的操作要以root身份登录到shell进行</li>
<li>将transocks_ev放到Android系统中，目录随你喜欢。这里<a href="http://cid-e1c6bc07e3f505a3.office.live.com/self.aspx/.Public/transocks%5E_ev-android.zip">下载</a>已编译的transocks_ev for Android可执行文件，解压后文件的MD5：6a0c3500bcd24ab7b706c8caf34f15ba</li>
<li>从Android Market下载ConnectBot，配置好你的ssh帐号，记得设置port forwarding，端口为9050</li>
<li>在ConnectBot中连接ssh</li>
<li>在shell中运行transocks_ev:</li>
</ol>
<pre><code>transocks_ev -S 127.0.0.1 -s 9050
</code></pre>
<ol start="6">
<li>在shell中执行iptables命令：</li>
</ol>
<pre><code>iptables -t nat -F 
iptables -t nat -A OUTPUT -m owner --cmd-owner transocks_ev -j RETURN 
iptables -t nat -A OUTPUT -m owner --cmd-owner org.connectbot -j RETURN 
iptables -t nat -A OUTPUT -p tcp --dport 80 -j REDIRECT --to-ports 1211 
iptables -t nat -A OUTPUT -p tcp --dport 443 -j REDIRECT --to-ports 1211
</code></pre>
<ol start="7">
<li>这时所有的HTTP&#x2F;HTTPS流量都会通过ssh tunnel了，但DNS查询不会，所以依然无法访问被DNS污染的网站</li>
<li>断开ConnectBot连接</li>
<li>在shell中kill掉transocks_ev进程</li>
<li>在shell中执行iptables命令：</li>
</ol>
<pre><code>iptables -t nat -F
</code></pre>
]]></content>
      <tags>
        <tag>Anti-GFW</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Andriod TransProxy</title>
    <url>/blog/2010/09/28/Andriod-TransProxy/</url>
    <content><![CDATA[<p>关注我之前写的Android翻墙系列文章<a href="/2010/06/02/Consider-how-in-the-Android-mobile-phones-in-use-SSH-tunnel-over-the-wall">1</a>, <a href="/2010/06/07/Android-SSH-tunnel-2010-06-06-">2</a>, <a href="/2010/07/31/Android-SSH-tunnel-prototype">3</a>的朋友请留意一下这个应用：<a href="http://forum.xda-developers.com/showthread.php?t=766569">TransProxy</a>。这个应用的v3版本集成了HTTP transparent proxy (使用<a href="http://transproxy.sourceforge.net/">Transproxy</a>)、HTTPS&#x2F;SOCKS redirector (使用<a href="http://darkk.net.ru/redsocks/">redsocks</a>) 、iptables script 并提供了配置、控制的界面。理论上，结合TransProxy和ConnectBot就可以实现Android上通过SSH tunnel翻墙，请参考<a href="/2010/06/02/Consider-how-in-the-Android-mobile-phones-in-use-SSH-tunnel-over-the-wall">这里</a>的第二张图片：ConnectBot实现了SSH client，TransProxy提供了transparent socks proxy并且设置iptables。</p>
<p>不过，我刚刚将TransProxy和ConnectBot配合运行起来试了一下，并没有成功，并且手机又遇到了100% CPU占用的问题，只能手工将ConnectBot kill了。ConnectBot当前最新的snapshot版本都还是没有解决这个<a href="http://code.google.com/p/connectbot/issues/detail?id=299">bug</a>，大家快去给这个bug加星，促使开发者优先解决吧。</p>
<p>鉴于我目前暂时处于肉身翻墙状态，没有积极性去进一步实验了，各位动手试试吧，有结果记得共享出来。另外，目前TransProxy的作者还在相当勤快的改进这个应用，不妨到xda-developers论坛与他交流。  </p>
]]></content>
      <tags>
        <tag>Anti-GFW</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>WebLogic在非Resource Adapter里直接使用JCA WorkManager的失败尝试</title>
    <url>/blog/2010/11/02/WebLogic-Resource-Adapter-JCA-WorkManager-/</url>
    <content><![CDATA[<p>JCA 1.5 规范定义了WorkManager API，能方便的进行任务的(多线程)并行处理。按照JCA规范的原意，WorkManager是仅提供给Resource Adapter使用的，容器会提供WorkManager实例并通过BootstrapContext注入到adapter中。可是，有时在其他场合，例如EJB、Servlet中，也希望能将请求拆分，使用WorkManager并行处理，但JEE规范中并没有提供这样的机制。</p>
<p>WebLogic提供了CommonJ WorkManager API，可用于任意应用中，但这个API不在JEE规范之中，因此GlassFish是不支持的。而且，使用WebLogic CommonJ WorkManager时需要在ejb-jar.xml中加入一个类型为commonj.work.WorkManager的resource reference，这样同一个ejb包就不能在不同application server间通用了，因此我还是希望能找到一种通用的方法。</p>
<p>SpringFramework的org.springframework.jca.work包为GlassFish和JBoss提供了在Resource Adapter外部使用JCA 1.5 WorkManager的简便方法。看了for GlassFish的源代码，发现它其实是调用了GlassFish内部的factory去直接创建WorkManager，那么对GlassFish是否也可以这样做呢？</p>
<p>反编译WebLogic的jar包，发现commonj WorkManager和connector WorkManager实际上都是delegate到一个weblogic.work.WorkManager实现的，也就是说在WebLogic里，CommonJ和JCA的WorkManager的底层实现其实都是同样的。接下来找到了weblogic.work.WorkManagerFactory，它有find和findOrCreate方法可返回weblogic.work.WorkManager实例，也许就是可以拿到weblogic-ejb-jar.xml里面定义的weblogic WorkManager。拿到了内部的weblogic.work.WorkManager实例后，再调用weblogic.connector.work.WorkManager的create方法，将这个内部WorkManger包裹到JCA WorkManager中，那么我们的应用就可以使用这个JCA WorkManager了，通过Spring的WorkManagerTaskExecutor来很方便的调度任务，上层的逻辑就可以做到与应用服务器无关。看起来很美。</p>
<p><a href="http://www.flickr.com/photos/leoliang/5137622842/"><img src="http://farm2.static.flickr.com/1208/5137622842_a9b4e5fda8_b.jpg" alt="WLS-WorkManager"></a></p>
<p>可是结果是残酷的。写了一个测试程序，结果是通过这个WorkManagerFactory可以成功的获取到weblogic.work.WorkManager实例，也能够创建出包裹的JCA WorkManager，可是真正要使用它来执行work时，它很坚定的拒绝了，抛出异常信息：Attempt to create Work outside the context of the Connector container。</p>
<p>查看代码，发现weblogic.connector.work.WorkManager及WorkImpl内部会寻找相应的RAInstanceManager，并且WorkImpl需要用到rarClassloader，看来它设计上还是与resource adapter相关的。一涉及到classloader，我无心恋战了，算了，就此打住。</p>
<p>P.S. 既然说到WorkManager，就推荐一下我的同事写的相关的一篇blog：<a href="http://www.javaeye.com/topic/623825">application server 下的任务异步&#x2F;并行执行方案</a></p>
<p>P.P.S. 我后来采用的解决方案是让build system可以根据需要为不同的 target application server 选择不同的 deployment descriptor 来build相应的artifacts。</p>
<p>P.P.P.S. 回头再读一下，发现文章里中文英文混杂得很厉害。没办法了，那些专业术语都是看惯英文了，用中文翻译了反而别扭。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>WebLogic</tag>
        <tag>AppServer</tag>
      </tags>
  </entry>
  <entry>
    <title>路权</title>
    <url>/blog/2010/11/13/right-of-way/</url>
    <content><![CDATA[<p>第一次到荷兰的时候，同行同事就说，荷兰人开车怎么都不让行人啊。住的酒店附近几条路都不宽，也就是广州小区里的道路的宽度，车也不多，路口没有交通灯也没有斑马线，但是我们过马路的时候汽车都不让我们，跟在瑞典受到的礼遇差远了。当时我们就说，看来荷兰人不如瑞典人谦让啊。</p>
<p>但后来呆的时间长了，发现也不全是这样，当在斑马线上要过马路时，即使我们习惯的站在路边等待，即使汽车以很快的速度飙过来，大多数司机都会将车停在斑马线前让我们过去。我就想，也许是刚来的时候定论下得太早了，其实多数荷兰司机也让行人的。</p>
<p>抱着这种”在路口过马路时汽车会让行人”的心态，在一些路口又碰了麻烦。住处的附近有个丁字路口，准备右转的车会停在路口前，我经常趁这个机会就过马路，以为他们是故意让我的。但有时我刚要过马路的时候它又起步了。</p>
<p>后来，我才发现了区别：那个丁字路口虽然用横穿马路的线标示行人自行车横过的路线，但却没有画斑马线。在有斑马线的地方，即使你只是站在路边，多数汽车都会完全停下让你先过；而想在没斑马线的地方过马路就得非常小心，一定要完全没车才能过，汽车不会作丝毫减速避让。这与道路的宽度没有关系，与车辆多少行人多少也没有关系，一切按照标识。习惯了之后就发现这非常好，行人车辆都守规矩，行人不怕被车撞，车辆不担心撞到人，相互都不会影响到对方。</p>
<p>类似的情况也体现在车辆行驶上。在欧洲，坐车离开城市范围后，公路往往都不宽，甚至只有两车道，不时会有分叉路口或者十字路口，都没有交通灯的，但是司机一路都开得很快，不会在路口前减速，仿佛他从来不担心路口会有车驶出来。仔细观察后发现路口前都会有交通标志，用粗线和细线标出交会的道路，我们走的路是粗线，司机是不会减速的，但如果我们走的路是细线，司机就会在路口前减速或者停下来。</p>
<p>在这里面有一个路权（Right of way）的概念非常重要，路权是使用道路的权利。斑马线标志着在这个区域中行人拥有比车辆优先的路权，因此车辆要停下来等行人通行；而在没有斑马线的地方，行人过马路不能影响汽车的通行，因为车辆有优先路权（对此，不同地方的交通法规可能不一样）。在没有交通灯的路口，主要道路上的车辆有优先路权，因此岔道上的车只能在完全不会影响主要道路上车辆通行的时候才能驶出来。有交通灯的路口，绿灯表示得到路权。在路口，直行车辆比左转车辆路权优先，因此左转车不能强行挡住对面来车而左转。</p>
<p>在发达国家（也包括香港、澳门），虽然多数道路都狭窄，平交路口密集且大都不设交通灯，交通依然相当顺畅，道路通行效率很高。这其实并不是什么礼让不礼让的问题，关键是明确每个参与者所拥有的权利，大家相互尊重对方的权利，依照规则行事。我没有考车牌，不知道中国的交通法规里有没有与西方国家相同的路权的概念，不过就算有，在每个人的心中和实际执行中都是不存在的。</p>
<p>由这个路权想开，我觉得西方国家发达，其中一个因素是他们能够很好的将社会中各个个体的关系及利益冲突通过权利（right）来明晰、规范和协调，保障了整个社会运作的效率。而中国人向来缺乏权利意识，也没有对权利的尊重，我们认的只是权力（power）。</p>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>Tiny HTTP Server by Java</title>
    <url>/blog/2010/12/10/Tiny-HTTP-Server-by-Java/</url>
    <content><![CDATA[<p>前两天在项目的测试环境中发现有一个Java实现的 Tiny HTTP server，就一个Java文件，不知道同事从哪里找来的。用来临时从服务器上下载些文件，或者查看HTML文档（例如 JUnit test report, JavaDoc）之类的非常方便。它只支持HTTP GET方法，URL必须指向一个文件。我顺手修改了一下，让它可以列出目录，这样用起来更加方便一些。</p>
<script src="//gist.github.com/1347769.js"></script>

<p>运行时可带两个参数：port, http root directory。例如:</p>
<pre><code>$JAVA_HOME/bin/java httpServer 8080 /tmp/test-report
</code></pre>
<p>P.S. 网上搜索一下，我的同事应该是从这里找到这段代码的：<a href="http://www.java2s.com/Code/Java/Tiny-Application/HttpServer.htm">http://www.java2s.com/Code/Java/Tiny-Application/HttpServer.htm</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Android activity lifecycle in UML state machine diagram</title>
    <url>/blog/2010/12/16/Android-activity-lifecycle-in-UML-state-machine-diagram/</url>
    <content><![CDATA[<p>Lifecycle of Android activity is always confusing beginners. The <code>Activity</code> class has defined dozens of callback functions, all begin with “on”. Some of them are triggered by UI events, some are lifecycle related. It isn’t easy for developer to remember the usage of them.</p>
<p>An activity has essentially four states, when some event happens, like user navigates between different activities, state transites. There are lots of callback functions which will be called by framework when an activity transites between states. So the activity lifecyle is ideally modeled in state machine. However in <a href="http://developer.android.com/reference/android/app/Activity.html#ActivityLifecycle">Android SDK document</a>, the Activity Lifecycle is descripted by a diagram and table of callback functions. It explains the order of the callback functions being called, but a developer can’t clearly understand in whatcircumstance each callback function will be called.</p>
<p>I tried to draw an UML state machine diagram for Android activity lifecycle:</p>
<p><a href="http://www.flickr.com/photos/leoliang/5264062473/"><img src="http://farm6.static.flickr.com/5241/5264062473_22989eacb7_b.jpg" alt="Android Activity Lifecycle"></a></p>
<p>If you aren’t familiar with UML state machine diagram, read the <a href="http://en.wikipedia.org/wiki/UML_state_machine">introduction</a> on Wikipedia.</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>追踪丢失了的手机</title>
    <url>/blog/2010/12/21/Tracking-lost-cell-phone/</url>
    <content><![CDATA[<p>现在已经有好些智能手机应用可以用来帮助追踪丢失了的手机。有些是当插入不同的SIM卡时触发跟踪，有些是在网络上触发跟踪。我想到另外一个方法：每当手机打开屏幕离开休眠状态时，前置摄像头自动拍摄一幅图像，对画面中的人面进行识别，如果判断不是机主，就将图像上传服务器，并且开启定位跟踪，不断将轨迹上传。这样，不但可以知道手机在哪里，还获得了拿着手机的人的相貌，因为一般人打开手机的时候都是拿在手上，正好前置摄像头就可以拍下面部照片了。</p>
<p>Answer to questions:</p>
<ul>
<li><em>只有前面有摄像头的手机才能支持这个功能？</em></li>
</ul>
<p>没有前置摄像头的手机不能用，这也是这个idea区别于已有应用的唯一区别。有前置摄像头的智能手机会越来越多的，iPhone推facetime， Android下个版本也会在GTalk里支持视频聊天，硬件肯定要跟上。</p>
<ul>
<li><em>朋友用了这个功能的手机怎么办？</em></li>
</ul>
<p>机主看到是认识的人，忽略就是啦；如果想做得更少打扰用户，可以让应用在重新”见到”机主时关闭跟踪，见下。</p>
<ul>
<li><em>检测到其他人用手机之后，这个人是否可以关闭定位功能？</em></li>
</ul>
<p>手机上不能手动关闭，否则就没用了；机主可以通过远程手段关闭；也可以通过面部识别，在重新识别到机主使用手机的时候自动关闭。</p>
<ul>
<li><em>即使定位到一定范围了，但还不能确认是谁。是否可以与”其他人”打电话协商？</em></li>
</ul>
<p>这个应用是可以控制手机上的所有功能的（如果手机OS允许），因此可以加很多东西，除了定位之外，可以记录通话信息、短信记录、自动发送短信、后台录音等等。但具体还要看OS，例如iOS在不越狱的情况下能做的事情就非常少，Android上有些操作也需要取得root权限才能做。如果这个应用由手机厂商内置进系统里，权限就不是问题了。</p>
<ul>
<li><em>调用摄像头拍照，通常是没办法影藏的吧，也就是拿着手机的人会知道这种动作</em></li>
</ul>
<p>我不知道现在常用的手机OS是否支持拍照时不在屏幕上显示，摄像头拍照与屏幕显示并没有联系，只是一般情况下都需要实时将摄像头的输入在屏幕上输出，给用户反馈而已。记得Android上有个应用就是用来偷拍的。况且这只是一个idea，真想做或许要对系统做一些调整的。</p>
<ul>
<li><em>拍得图像亮度，对比度，分辨率差异巨大，在手持设备上进行人脸识别，判断机主，这个实现难度很大。</em></li>
</ul>
<p>拍摄的时候，亮度、对比度是能够调节的，在环境光线不太恶劣的情况下（大逆光、光线暗就没办法了），获得合适对比度的影像是很简单的事情。人脸识别的算法我没有了解，但有<a href="http://hubpages.com/hub/Kodak-Z981-can-automatically-recognize-the-faces-of-20-specific-individuals">数码相机都内置这个功能</a>了，已经不是很难实现的东西了吧？要说处理能力，现在手机的CPU都上1GHz了。</p>
]]></content>
      <tags>
        <tag>Idea</tag>
      </tags>
  </entry>
  <entry>
    <title>复旦学生黄山被困事件的感想</title>
    <url>/blog/2010/12/23/Fudan-student-huangshan-trapped-events-of-feeling/</url>
    <content><![CDATA[<p>很久没有玩户外了，对相关的新闻不再关注。复旦大学生黄山遇险的事情网上流传很广，但我一直也没有点进去看过。今天在Google Reader上看到朋友转发的文章，终于知道是怎么回事了。</p>
<p>关于救援技术和道德层面的东西就不说了。磨房有个<a href="http://www.doyouhike.net/forum/shrescue/476142,0,0,1.html">帖子</a>，从队伍被困就开始讨论了，可以从中了解一些细节。说说我的几个感想：</p>
<ul>
<li>户外救援这事情上，警方的技术水平和装备水平都非常差。对于他们，应该少些政治学习，多些专业训练；少些吃喝嫖赌，买些专业装备。但明显他们是做不到的，所以还是别指望他们了。</li>
<li>这类事情由警方（或者政府部门）包办并不是好办法，很多民间的户外爱好者和从业人员组织起来都能够做得比他们好。但是政府视民间组织为洪水猛兽，生怕造他们的反。</li>
<li>被困队伍虽然说GPS落水怀疑故障，但他们其实还是定位出自己坐标的。如果配合小比例尺地图，无论是自救还是他救都会比较容易。但是我们在自欺欺人的将这个当国家机密。网上倒是有驴友根据Google Earth卫星图和美国公开的SRTM数据制作等高线图辅助分析了。 （BTW，在<a href="http://goo.gl/maps/bGmE">maps.google.com</a>和<a href="http://ditu.google.cn/maps?f=q&source=s_q&hl=zh-CN&geocode=&q=N30+07.663+E118+11.892&sll=35.86166,104.195397&sspn=69.767299,135.087891&ie=UTF8&ll=30.126087,118.203707&spn=0.037712,0.065961&t=h&z=15&brcurrent=3,0x3435b9bdd80e3bef:0x40d4f885edcbae5e,0,0x3435c43623481ccb:0x4f313f2031517549;5,0,0">ditu.google.cn</a>上分别输入这个坐标：N30 07.663 E118 11.892，仔细看看，标出的地点是不同的，偏差五六百米。只不过恰好在同一条沟里）</li>
</ul>
<p>贴两张Google Maps的截图，绿色箭头处是被困地点。</p>
<p><a href="http://www.flickr.com/photos/leoliang/5284797781/"><img src="http://farm6.static.flickr.com/5006/5284797781_e71c32744a_b.jpg" alt="fudan_huangshan_1"></a></p>
<p>这张从另外一个角度看的，放大一些，都勉强可以看到山谷里面的大石了。不过这种模拟地势的精度不高，一些陡峭的局部地形都被柔和了，实际会险要得多。不要看着这张图就骂那些学生，以为小跑都可以下山。</p>
<p><a href="http://www.flickr.com/photos/leoliang/5284797851/"><img src="http://farm6.static.flickr.com/5123/5284797851_dec842f909_b.jpg" alt="fudan_huangshan_2"></a></p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Outdoor</tag>
      </tags>
  </entry>
  <entry>
    <title>GQueuesInbox : Send item to your GQueues inbox with Android device anywhere anytime</title>
    <url>/blog/2011/01/14/GQueuesInbox-Send-item-to-your-GQueues-inbox-with-Android-device-anywhere-anytime/</url>
    <content><![CDATA[<img src="http://farm6.static.flickr.com/5285/5360976023_928916d839_m.jpg" class="right" title="GQueueInbox">
<p>去年底<a href="https://www.rememberthemilk.com/">RememberTheMilk</a>的pro帐号到期了，于是又折腾了一下看看有没有好用的类似工具，发现了一个在线任务管理的新秀：<a href="http://www.gqueues.com/">GQueues</a>。GQueues的功能和界面都不错，我比较喜欢它的一点是没有用高中低的任务优先级，而是让你在列表中拖放任务改变顺序，排在最顶的就是需要优先处理的。有些事情你很难界定应该是属于重要性高还是重要性中等，但是如果几件事情放在一起，就很容易分出哪个相对更重要一些。</p>
<p>但是，GQueues没有开发手机本地应用，在手机上只能通过浏览器访问。虽然它的网站有专门为移动设备优化，但还是不如本地应用便捷。而且很重要一点，不是任何时候都能访问到网络的，想起一件要做的事情，却因为连不上网而无法记录下来，只能留在脑子里或者要记录到别的地方，这样不符合GTD的原则。</p>
<p>为此，我写了一个简单的Android应用，做的唯一事情就是往GQueues inbox里面添加新任务，并且允许离线使用：如果没有网络，任务会暂存起来，在有网络的时候后台自动发送出去。软件介绍：<a href="http://www.appbrain.com/app/gqueuesinbox/leoliang.gqueuesinbox">http://www.appbrain.com/app/gqueuesinbox/leoliang.gqueuesinbox</a></p>
<p>不过，因为GQueues部署在Google App Engine上的，IP地址被GFW屏蔽，在国内无法直接访问。解决办法是自己将可以访问的IP配置到hosts文件里面，无论是PC还是手机都要如此处理。</p>
]]></content>
      <tags>
        <tag>TimeManagement</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android用户的好消息：用ssh翻墙</title>
    <url>/blog/2011/02/11/Android-ssh-/</url>
    <content><![CDATA[<p>之前我写过一系列<a href="/blog/2010/07/31/Android-SSH-tunnel-prototype/" title="Android手机上使用SSH tunnel：prototype">文章</a>介绍Android系统用ssh翻墙的想法，现在有人把整合的软件做出来了：<a href="http://madeye.me/2011/02/10/ssh-tunnel-on-the-android-application-puff-android-edition/">sshtunnel</a></p>
<p>与TransProxy类似，sshtunnel也是内置了redsocks作为HTTPS&#x2F;SOCKS redirector，使用iptables重定向网络流，不同的是它还使用了trilead-ssh2代码（作者说来自于ConnectBot）来做SSH client，因此这一个程序就可以完成整个过程，操作简单。根据文档说明和大致浏览代码，貌似没有使用SSH dynamic port forwarding，而是要求SSH server端安装了HTTP代理服务器，SSH连接纯粹是tunnel了到服务端HTTP proxy的连接。</p>
<p>Update: <a href="https://twitter.com/#!/ofmax/status/36717058762739712">作者说</a>，不使用SSH dynamic port forwarding是因为受限于Android手机的机能。我之前测试用ConnectBot做SOCKS proxy的时候就总是遇到CPU占用100%的问题，估计作者说的就是这个。</p>
]]></content>
      <tags>
        <tag>Anti-GFW</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>TwitterSinaSync，自动同步Twitter信息到新浪微博</title>
    <url>/blog/2011/02/11/TwitterSinaSync-Twitter-/</url>
    <content><![CDATA[<p>之前寻找同步twitter到新浪微博的方法，没有尝试到满意的。@cutemic<a href="http://cutemic.posterous.com/twitter">介绍说</a>他是在GAE上跑一个叫twitter2sina的python程序，周期性读取自己的tweets，再调用API发送到新浪微博。</p>
<p>程序员的基本素质是懒惰，因此我问@cutemic他安装的程序是否支持多用户，如果支持，我就懒得自己折腾，让他给我加个用户好了。很可惜，他的程序是要将新浪微博用户名密码hard code到程序里的，那我只能自力更生了。</p>
<p>装起来之后，本着助人为乐的精神，考虑把这个服务也提供给别人使用。看看代码，调用新浪微博API是用Basic HTTP认证的，需要提供用户名和密码，这样太没有安全感了，别人不敢用的。如果改成OAuth，用户就不需要提供密码了。</p>
<p>动手尝试修改，于是，就有了这个<a href="https://github.com/aleung/TwitterSinaSync">TwitterSinaSync</a>。</p>
<p>代码大概的历史：</p>
<ol>
<li>原始版本是<a href="http://code.google.com/p/twitter2sina/">twitter2sina</a>，没有使用新浪微博API，已经失效</li>
<li>@cutemic的<a href="http://cutemic.posterous.com/twitter">修改版本</a>，改成使用新浪微博API</li>
<li>我修改的<a href="">TwitterSinaSync</a></li>
</ol>
<p>主要特性：</p>
<ul>
<li>部署于Google App Engine，免费、可靠、方便的云计算环境</li>
<li>使用新浪微博API OAuth认证，用户不需要提供密码，保证安全</li>
<li>支持多用户：多组twitter-微博同步绑定</li>
<li>新用户凭管理员提供的邀请链接才能加入，方便私人分享</li>
</ul>
<p><a href="https://github.com/aleung/TwitterSinaSync">代码</a>托管在GitHub，bug report 和 feature request可以往<a href="">这里</a>提交。</p>
<p><em><strong>Updated 2011-7-7:</strong></em></p>
<p>由于新浪微博对API使用过滤异常的严格，这个应用基本上用处不大了，普通内容的tweet，大概十条里只有两三条能够成功同步，见<a href="http://good-good-study.appspot.com/blog/posts/124001">新浪微博API黑名单威武</a>。如果应用能够通过审核，也许过滤会放宽一些，但是根据新浪微博API的用户协议，是不能用于从其他微博系统同步信息的，更何况是Twitter，通过审核的可能性微乎其微。故此我不再维护这个软件了，也不再提供邀请码，请谅解。</p>
]]></content>
      <tags>
        <tag>MyWork</tag>
      </tags>
  </entry>
  <entry>
    <title>独立博客一周年纪念</title>
    <url>/blog/2011/02/14/Independent-blog-of-a-week/</url>
    <content><![CDATA[<p>Good good study, day day up 这个博客从2001年就开始写，正如副标题所说，定位为记录学习心得和一些想法（之前我还有另外一个摄影、旅行主题的博客），基本上谈的就是理科生的话题。原来一直是放在BlogBus上的，直到去年初，实在忍受不了BlogBus疯狂的内容审查，搬出来做独立博客。</p>
<p>查看历史记录，在这个搭建于Google App Engine上的新blog上发的<a href="http://good-good-study.appspot.com/blog/posts/1001">第一篇文章</a>是在去年的2月14日，居然是在情人节！今天是2月13日，也就是这个独立博客已经一周岁了。</p>
<p>统计一下新blog这一年里发布的文章有30篇（不包括更新的旧文章），平均两周一篇，比我自己印象中的多了。希望自己今后能够继续保持这样一个习惯。最热门的文章是”<a href="http://good-good-study.appspot.com/blog/posts/20001">在Android手机上使用SSH tunnel翻墙</a>“，其次是”<a href="http://good-good-study.appspot.com/blog/posts/3224">Google中国地图偏移</a>“。</p>
<p>新的blog留言需要用Google帐号登录，spam是全没有了，但是留言也冷清了好多。没想到什么办法既方便又能杜绝spam的。不知道有没有方法通过Google Buzz或者Twitter来留言呢。另外一个问题是搬家之后搜索引擎的收录不理想，一些关键字的搜索结果还是指向我原来的blog。</p>
<p>搬到GAE上，就已经准备好要被墙，一年下来appspot.com被封被解封反复多次，似乎到目前为止这个blog还能直接访问（不知道不同地区的情况）。但是，即使被封也不会再搬回墙内，作为一个软件开发者，受困于信息封锁就意味着被技术发展所抛弃，我的博客读者不应该是这样的人。有人说翻墙太麻烦，老想找免费的方法当然麻烦，还是花点钱买个ssh帐号吧，便宜的就是一年几美元。每个月上百的ADSL费用都舍得花了，就不要吝啬这一年几十块钱了，无障碍获取信息的价值就远远值回来了。</p>
<p>就写到这里吧。</p>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>任务管理工具</title>
    <url>/blog/2011/02/28/Task-management-tools/</url>
    <content><![CDATA[<p>首先，我得承认：我又在折腾了。</p>
<p>这些年来，用过好多种任务管理（to-do）工具，包括low-tech的，电子化的，始终没有一个完全满意。最近一段时间又纠结于此，寻找、尝试各种工具，花了不少时间，真是有点本末倒置啊。</p>
<p>经过多年的练习，已经逐渐明确了自己对任务管理工具的需求是什么：（优先级从高到低排列）</p>
<ul>
<li><strong>Available on both PC and Android, data are synchonized between devices</strong><br>手机是随身携带的，因此要支持Android手机，并且在网络离线时也要可用；手机输入文字速度还是比电脑上慢，屏幕小有局限，输入、整理等工作在电脑上做更有效率。</li>
<li><strong>随时都可以快速将新的任务记录下来</strong><br>这是GTD中所强调的inbox的功能。创建新任务的界面必须尽可能简单，需要输入的信息和步骤越少越好。</li>
<li><strong>Be able to set start date of a task, hide future tasks</strong><br>这个功能很多工具都缺乏。Start date与due date是不同的：due date是dead line，大部分任务没有due date；start date是自己对任务的安排。对于不需要马上做的任务，安排好开始的时间，就从当前任务列表里隐藏了，可以更专注于当前任务。</li>
<li><strong>区分不同任务：new（inbox），scheduled，someday；方便的改变任务类型</strong><br>新任务的记录是清空大脑的过程，需要review后安排具体处理时间；someday是那种还没有想到该什么时候做的任务（也有可能是其实不需要做的）</li>
<li><strong>Easily schedule &#x2F; reschedule tasks</strong><br>用简便的操作就可以安排任务执行的时间</li>
<li><strong>Recurrent task</strong></li>
<li><strong>Integrate with calendar</strong><br>日程表跟任务列表整合起来，相互可以转换。以前写过<a href="http://good-good-study.appspot.com/blog/posts/3184">一些想法</a>。</li>
<li><strong>Set due date to a task</strong></li>
<li><strong>Sort tasks in list by drag’n’drop</strong><br>相比起为任务设置priority，我更喜欢直接将任务拖放改变顺序。有时候说不清一个任务到底属于哪个priority，但会知道几个任务中哪个应该先做。</li>
<li><strong>Apply tag to a task</strong></li>
<li><strong>Batch operation</strong></li>
</ul>
<p>最近将网上找到比较出名的工具都试用过了，记录下简单的评价（针对我的需求的）：</p>
<ul>
<li>Remember The Milk <ul>
<li>功能完善，使用方便</li>
<li>Web及Android均可离线使用</li>
<li>不支持 start date</li>
</ul>
</li>
<li>Toodledo <ul>
<li>Very rich feature set, too heavy</li>
<li>Complex, unfriendly UI</li>
<li><strike>不支持 start date</strike></li>
</ul>
</li>
<li>Todoist <ul>
<li>不支持 start date</li>
</ul>
</li>
<li>Todo.ly <ul>
<li>不支持 start date</li>
</ul>
</li>
<li>Stay Useful <ul>
<li>Simple and neat, nice user experience</li>
<li>没有someday任务，最远只能安排到next week</li>
<li>支持浏览器离线使用，但在Android上显示没有适应屏幕大小</li>
<li>免费试用30天，购买$4</li>
</ul>
</li>
<li>Google Tasks <ul>
<li>不支持 start date</li>
<li>将任务移到另外一个列表的操作不够简便</li>
</ul>
</li>
<li>Hiveminder <ul>
<li>No offline access on Android</li>
</ul>
</li>
<li>Nozbe <ul>
<li>功能完善</li>
<li>Too expensive: $9.95&#x2F;month</li>
</ul>
</li>
<li>Tadalist <ul>
<li>It’s only list of items with checkbox, nothing more</li>
</ul>
</li>
<li>itumz <ul>
<li>It’s only list of items with checkbox, nothing more</li>
</ul>
</li>
<li>zirr.us <ul>
<li>Show tasks in tag cloud style</li>
<li>No start date, only due date</li>
</ul>
</li>
<li>TeuxDeux <ul>
<li>Day (5 days shown in one screen) + someday, drag’n’drop</li>
<li>Good user experience</li>
<li>Can not show all tasks, have to scroll to the date</li>
<li>No due date</li>
<li>No recurrent task</li>
<li>Doesn’t work on Android (native app is underway?)</li>
</ul>
</li>
<li>TaskWarrior <ul>
<li>CLI</li>
<li>Good enough feature set</li>
<li>No Android client</li>
</ul>
</li>
<li>GQueues <ul>
<li>No start date</li>
<li>No Android client, 支持浏览器离线访问，但体验不够好</li>
</ul>
</li>
</ul>
<p>总结下来，就是没有一个能够同时满足我的需求的前几项的。故此我又有了自己做一个的想法，大概的思路已经有了，下次再写。</p>
]]></content>
      <tags>
        <tag>TimeManagement</tag>
      </tags>
  </entry>
  <entry>
    <title>新浪微博API黑名单威武</title>
    <url>/blog/2011/03/13/Sina-micro-bo-API-blacklist-terrible/</url>
    <content><![CDATA[<p>因为有些tweet没有同步到新浪微博，查看了 <a href="http://good-good-study.appspot.com/blog/posts/111001">TwitterSinaSync</a> 的运行日志，发现了这样的记录：</p>
<p><a href="http://www.flickr.com/photos/leoliang/5519631639/"><img src="http://farm6.static.flickr.com/5057/5519631639_5b0593fd42_z.jpg"></a></p>
<p>前一个tweet（绿色框）正常同步到了新浪微博，而接下来一个就失败（红色框），错误信息是黑名单用户。显然是tweet中的某些内容触发了黑名单机制，在这里估计是”twitter”。</p>
<p>一旦用户被列入了黑名单，接下来对这个用户的操作都会失败。看下面的例子，第一条是成功的，第二个失败后，接下来的tweet的同步都失败了，即使内容看起来绝无敏感词。其实我也猜不出第二条tweet中哪个词触发了加入黑名单，是”境外”？还是”mranti”？</p>
<p><a href="http://www.flickr.com/photos/leoliang/5519631597/"><img src="http://farm6.static.flickr.com/5217/5519631597_e6064611fc_z.jpg" alt="sina_blacklist_1"></a></p>
<p>目前新浪微博API的自动触发黑名单是临时性的，过一段时间后用户就可以继续使用，不过不知道它内部有没有什么计数器什么的。为此，我修改了 TwitterSinaSync，当用户被列入黑名单后会暂停同步一段时间。这个版本还处理了用户撤销新浪API授权的情况，会自动将用户删除。用户可以用原邀请链接重新开通。请到<a href="https://github.com/aleung/TwitterSinaSync">TwitterSinaSync@github</a>下载 2.3 版本源代码。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>他山之石：荷兰Brabant 2010年可持续发展与平衡报告书</title>
    <url>/blog/2011/03/19/His-shan-zhishi-the-Dutch-Brabant-2010-sustainable-development-and-balance-report/</url>
    <content><![CDATA[<p><a href="http://www.flickr.com/photos/leoliang/5537728245/"><img src="http://farm6.static.flickr.com/5013/5537728245_91bfd23187.jpg" alt="IMG_20110315_220911"></a> </p>
<p>今天在公司休息区看到了一本政府出版物，《2010年Brabant可持续发展与平衡报告书》，Brabant是荷兰南部的一个省份。</p>
<p>我对这本册子相当感兴趣，关心的主要有几点：</p>
<ol>
<li>政府如何进行信息公开；</li>
<li>如何达致可持续发展，怎样维持经济、文化与生态的平衡；</li>
<li>民众关心哪些方面的指标；</li>
<li>怎样对政府的成绩进行评定；</li>
<li>怎样通过图表、文字、数据和颜色将信息清晰的展现出来，让普通民众都能读懂。</li>
</ol>
<p>全书共238页，分成三大部分：经济、社会文化、生态。每部分有多个关注点，每个关注点下有4～8个指标。</p>
<p>用Google Translate翻译了所有的关注点以及部分我感兴趣的指标的名称，有些可能译得不准确。</p>
<ul>
<li>经济： <ul>
<li><strong>劳动力</strong>，</li>
<li><strong>资本</strong>，</li>
<li><strong>知识</strong>，</li>
<li><strong>能源，原材料****和辅料</strong>，</li>
<li><strong>空间</strong>，（为企业提供足够的空间（土地，经营场所））</li>
<li><strong>经济结构</strong>，</li>
<li><strong>基础设施</strong></li>
</ul>
</li>
<li>社会文化： <ul>
<li><strong>社会****参与</strong>：社会凝聚力，歧视，社会团体，社会的积极成员，志愿者，社会排斥，孤独，种族融合</li>
<li><strong>经济****和政治参与</strong>：贫困家庭，选举投票率，政治互信，参与决策，长期失业，影响政治进程的看法</li>
<li><strong>艺术和****文化</strong>，</li>
<li><strong>环境</strong>：住房短缺，满意的公园，本地服务的满意度，居住满意度，垃圾，噪音&#x2F;气味，住房的满意度</li>
<li><strong>安全</strong>，</li>
<li><strong>健康</strong>：长期病患者，心理健康评估，心血管疾病的死亡率，自我健康评估，危险行为，运动，照顾者负担过重，健康服务满意度</li>
<li><strong>教育</strong></li>
</ul>
</li>
<li>生态： <ul>
<li><strong>土壤</strong>，</li>
<li><strong>空气</strong>：烟雾天（灰霾？），颗粒物，温室气体，氮化物</li>
<li><strong>地表水</strong>，</li>
<li><strong>自然</strong>：草地物种，农作物，新的自然生态区，森林物种，荒原物种</li>
<li><strong>地下水</strong>，</li>
<li><strong>景观</strong>：城市化（限制城市化），景观体验，自然性，天际线（限制高层建筑），历史独特性</li>
</ul>
</li>
</ul>
<p><a href="http://www.flickr.com/photos/leoliang/5537755097/"><img src="http://farm6.static.flickr.com/5256/5537755097_9ba7cfed57_m.jpg" alt="IMG_20110315_221604"></a> </p>
<p>经济、社会文化、生态，分别用蓝色、红色和绿色代表。这三种颜色贯穿整本册子，从封面、封底到每一页。从侧面一眼就可以看出三部分页码的分布。</p>
<p>基本上每一个指标用一个页面的篇幅进行描述，首先是这个指标含义的简单描述，接下来是用一句话概括对于这个指标期望达到的目标，然后是用一个段落的文字对这个指标的目标进行详细叙述。</p>
<p>每个指标的情况都会有具体量化的数字，根据预设的条件，对指标进行级别评定，分别为金色（最优）、绿色（可接受）、橙色（临界）和红色（不可接受）。在大企业工作过的人应该都很熟悉，就像KPI一样。对于普通人，如果他不关心具体的指标数值是多少，或者没有专业知识理解数值的意义，那他只需要简单看看这个指标是什么颜色就行了。</p>
<p>接下来，会有一个图表展现进一步的数据。例如纵向的比较：列出历年的数据；或者横向的比较：列出其他的省份这个指标的数据。</p>
<p>对于每个关注点，用一幅<a href="http://zh.wikipedia.org/wiki/%E9%A5%BC%E5%9B%BE#.E6.9E.81.E5.8C.BA.E5.9B.BE">南丁格尔玫瑰图</a>来展现所属的各个指标的得分、评级和权重，在图上还会标出上一年度的得分，年度变化。</p>
<p>经济、社会文化、生态，每个部分最后一页的总结，也是用图形的方式，将关注点列出来，每个关注点包含的指标用圆点表示，大小是得分，颜色是评级。</p>
<p>最终，发展的目标是要实现经济、社会文化和生态三者的平衡，达致可持续发展。</p>
<p><a href="http://www.flickr.com/photos/leoliang/5537729263/"><img src="http://farm6.static.flickr.com/5139/5537729263_366a7cb6a9_z.jpg" alt="IMG_20110315_225420"></a> </p>
<p><a href="http://www.flickr.com/photos/leoliang/5538307676/"><img src="http://farm6.static.flickr.com/5099/5538307676_81c2a9f3ce_z.jpg" alt="IMG_20110315_221756"></a></p>
<p><a href="http://www.flickr.com/photos/leoliang/5537728395/"><img src="http://farm6.static.flickr.com/5174/5537728395_4f8b4a42f6_z.jpg" alt="IMG_20110315_221112"></a></p>
<p><a href="http://www.flickr.com/photos/leoliang/5537730559/"><img src="http://farm6.static.flickr.com/5174/5537730559_bc96e642ee_b.jpg" alt="summary"></a></p>
<p><a href="http://www.flickr.com/photos/leoliang/5537728763/"><img src="http://farm6.static.flickr.com/5094/5537728763_c07a09f650.jpg" alt="IMG_20110315_221541"></a></p>
]]></content>
      <tags>
        <tag>CivilSociety</tag>
      </tags>
  </entry>
  <entry>
    <title>Diagram of WebLogic MBean navigation</title>
    <url>/blog/2011/03/21/Diagram-of-WebLogic-MBean-navigation/</url>
    <content><![CDATA[<p>It isn’t a full diagram that presents all WebLogic MBeans. Only the MBeans I’m interesting in are shown.</p>
<p><a href="http://www.flickr.com/photos/leoliang/5546496754/"><img src="http://farm6.static.flickr.com/5056/5546496754_181f58ec69_b.jpg" alt="WeblogicMBean"></a></p>
<p>Reference:<a href="http://download.oracle.com/docs/cd/E15051_01/wls/docs103/wlsmbeanref/core/index.html">The WebLogic Server® MBean Reference</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>WebLogic</tag>
      </tags>
  </entry>
  <entry>
    <title>我的任务管理工具功能原型已经完成</title>
    <url>/blog/2011/03/24/My-task-management-tools-function-prototype-has-been-completed/</url>
    <content><![CDATA[<p>在<a href="http://good-good-study.appspot.com/blog/posts/119001">上一篇blog</a>里面列出了我个人对任务管理工具的需求以及对比较热门的工具的分析。由于现有工具没有那款能够满足我的几点主要需求，于是就产生了自己做一个的想法。前几天，功能性原型完成，已经正式用了起来，下一步要做的工作是界面设计和交互设计。</p>
<p>目前做的是Android手机应用，web端还没有考虑。一方面是手机几乎不离身，保证了随时可用，另一方面是web端使用现有的服务已经勉强可以满足要求，下面我会说明。</p>
<p>从功能定位上，主要是受了<a href="http://stayuseful.com/">StayUseful</a>和<a href="http://teuxdeux.com/">TeuxDeux</a>的影响，目标是要做成简洁、轻量级的任务列表，强调对任务进行计划安排，专注于当天以及最近几天的任务。</p>
<ul>
<li>单日任务列表：在一个页面里列出一天的所有任务。只显示计划在此一天执行的任务，保证专注性。缺省的页面是当天，可快速导航到最近几天。</li>
<li>用简单的操作可更改任务的执行日期。</li>
<li>过去没有完成的任务自动放到”今天”，要么马上去完成它，要么重新安排执行日期。</li>
<li>任务可设置due date，对于有due date的任务，会显示出剩余天数或者过期天数。</li>
<li>任务不设优先级，但可以加星。单日任务列表中，任务可以拖放排序。</li>
<li>数据与云端同步。</li>
</ul>
<p>因为目标要做到数据与云端同步，这自己从零开始实现工作量太大了，所以一开始就计划基于网上现有的服务基础之上开发。最初物色的对象是Google Tasks，但发现Google Tasks尚未开放API，虽然已经有Android应用可以做到与Google Tasks同步，但它们是靠hack Google的网页前端与后端通信接口来实现的，实现起来既麻烦也不可靠。接下来发现Google Calendar是一个更好的选择：</p>
<ul>
<li>Android Calendar与云端的Google Calendar之间几乎是实时同步，无论在哪边做修改，几秒钟之后另外一边就能看到变动。</li>
<li>Android Calendar提供Provider接口供其他Android应用调用，开发简便，并且Android Calendar是open source的，有问题可以直接看代码。</li>
<li>Web端可使用Google Calendar，虽然不能实现我需要的全部功能，但基本的都可以做到。</li>
<li>为实现日程表跟任务列表的整合提供了可能。Google Calendar还能与其他系统同步，提高扩展性。</li>
</ul>
<p>具体做起来其实不难，就是将一些task专有的数据放进Calendar的Event里面。Google Calendar的event数据对象没有供存放扩展数据的字段，我就将task数据用JSON格式放进description里面了。</p>
<p>好了，下一步怎样做出简洁、易用、高效的交互界面才是困难所在。另外，给它起个好名字也很难，有什么建议么？</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>TimeManagement</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Drag and drop list view on Android</title>
    <url>/blog/2011/04/10/Drag-and-drop-list-view-on-Android/</url>
    <content><![CDATA[<p>I didn’t expect that implementing a drag and drop list view on Android is so difficult. It took me more than one week to get it work.</p>
<p>Android SDK doesn’t provide too much support on drag and drop, at least there is no out of box API that can be used till Android 3.0 Honeycomb. It’s said that drag and drop support is improved in Android 3.0 SDK, I didn’t learn it yet because Android 3.0 hasn’t come to mobile device.</p>
<p>At first I looked for open source implementation of drag and drop list view. After searching on Internet I did find some examples and library, e.g. <a href="https://github.com/commonsguy/cwac-touchlist">CWAC TouchListView</a> , they all derives from source code of Android music application. However they don’t fit for my application: First, they require to specify the height of item view in code or in layout file, that also implicitly force all item views in the same height. In my application the list view has two item view types, which differ in height. Even if item views are in same height, I don’t like the way that specifying exact value of height, I perfer to set <code>layout_height</code> to <code>wrap_content</code> and let it automatically calculates the value. Second, by those implementation, on each list item view there must be a “grabber” element. User moves an item by putting finger on the grabber then drag. I want to keep UI of my application as clean as it can, I would like to active item dragging by long press on an item, instead of drag a grabber. So I implement my version of drag and drop list view, the source code is at GitHub: <a href="https://github.com/aleung/tasks365/blob/master/tasks365/src/leoliang/tasks365/DraggableListView.java">DraggableListView</a>. It isn’t perfect yet, still has large room for improvement.</p>
<p>A ListView shows items in a vertically scrolling list. The items can be refered by their position in the list. When there are a lot of items, only portion of them are visible. A visible item view can be retrieved by calling <code>ListView.getChildAt()</code>. Please be noticed that child view index is different to item position. In the code you will find these two values need to be converted between each other.</p>
<p><a href="http://www.flickr.com/photos/leoliang/5603506949/"><img src="http://farm6.static.flickr.com/5267/5603506949_627d31073c.jpg" alt="listview"></a></p>
<p>Long press on an item is detected by<code>GestureDetector</code>, then a dragging object is created. The dragging object represents on UI by an ImageView, which is a copy of the view of the item to be moved. The dragging object moves on screen following user’s finger. Untill user’s finger leave touch screen, the list items do not change their order, they just expand or shrink to simulate item dragging.</p>
<p>In below diagram, dragging object is in green. Item at position 3 is being dragged in this example. When dragging starts, the view of item 3 shrinks its height to 1 to make it invisible (I didn’t investigate why height should be 1 instead of 0). User sees item 3 is dragged, actually it’s the dragging object – clone of the item 3 view. When dragging object is hovering at a position, the item view at that position expands to make an empty space, so looks like that it is being pushed aside by the dragging object.</p>
<p><a href="http://www.flickr.com/photos/leoliang/5604090272/"><img src="http://farm6.static.flickr.com/5101/5604090272_641594fa57_m.jpg" alt="listview-dnp-1"></a><a href="http://www.flickr.com/photos/leoliang/5603507715/"><img src="http://farm6.static.flickr.com/5188/5603507715_d47cb49532_m.jpg" alt="listview-dnp-2"></a></p>
<p>Here is a screenshot of demo:</p>
<p><a href="http://www.flickr.com/photos/leoliang/5603811095/"><img src="http://farm5.static.flickr.com/4099/5603811095_f2f7c52c79.jpg" alt="DraggableListView"></a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>确定优先级</title>
    <url>/blog/2011/06/26/Determine-priority/</url>
    <content><![CDATA[<p>在我们的工作中，不时需要评估工作任务的优先级：例如下个版本的软件应该加入的功能，又或者对之前工作回顾列出的一大堆改进项目，在一轮头脑风暴之后，发现需要做的事情是如此之多，而能投入的资源显得如此至少，怎么挑选出最有价值的事情来做就成了头痛的事。</p>
<p>过往，我们常做的方法是，召集一个会议，大家一起来为每个任务评分：分别评估出任务的工作量级和重要性（1、2、3… 最重要为1），然后将两者相乘得到一个分数，根据这个分数对任务排序。这种做法是期望能找出重要性比较高，但是又不太难完成的任务。但很不幸，越是重要的任务往往工作量越大—-如果有重要而简单的任务，我们早就把它做了，不需要等到这个会议的召开—-得到的分数差距不大。印象中，我参加过的评估会，都没有得出什么有用的结论，最终做的决策似乎跟评估没有太多的关系。</p>
<p>你可能会指出，这个评估模型根本就是不对的，工作量和重要性两者相乘得不出有意义的数字。但我们都不够聪明，没有想到一个足够简单而直观的方法。（回过头来看，应该是我们谁都没有花心思去想过。为什么？为什么？为什么？！）</p>
<p>今天读”<a href="http://book.douban.com/subject/4163938/">More Joel on Software</a>“，第36节介绍了他们用的方法，值得借鉴。</p>
<p>首先评估每项任务的工作量（成本），得到一个数字，其实这个数字是什么单位无所谓，story point也好，$也好，在例子里用的是$，金额。</p>
<table>
<thead>
<tr>
<th>功能</th>
<th align="right">成本</th>
</tr>
</thead>
<tbody><tr>
<td>个性化首页</td>
<td align="right">$10</td>
</tr>
<tr>
<td>轻松安排软件开放进程</td>
<td align="right">$4</td>
</tr>
<tr>
<td>追踪资金到账时间</td>
<td align="right">$5</td>
</tr>
<tr>
<td>允许对bug分叉(fork)</td>
<td align="right">$1</td>
</tr>
</tbody></table>
<p>然后规定每人手上只有限量的资金，例如$20，可以用来购买这些功能。每个人根据自己对功能的重要性判断来决定应该为每个功能分配多少钱。例如：我觉得追踪资金到账时间是没有用的功能，一分钱也不分给它；安排软件开发过程很重要，我愿意出两倍的钱；而允许对bug分叉更重要，出4倍的钱；而个性化首页不是那么重要，所以我只愿意出80%的钱。故此，我的资金这样分配：</p>
<table>
<thead>
<tr>
<th>功能</th>
<th align="right">成本</th>
<th align="right">销售额</th>
</tr>
</thead>
<tbody><tr>
<td>个性化首页</td>
<td align="right">$10</td>
<td align="right">$8</td>
</tr>
<tr>
<td>轻松安排软件开放进程</td>
<td align="right">$4</td>
<td align="right">$8</td>
</tr>
<tr>
<td>追踪资金到账时间</td>
<td align="right">$5</td>
<td align="right">$0</td>
</tr>
<tr>
<td>允许对bug分叉(fork)</td>
<td align="right">$1</td>
<td align="right">$4</td>
</tr>
</tbody></table>
<p>这个过程其实就是一个已经按照成本加权的优先级评估。每个人在评估时已经综合考虑了成本和重要性。</p>
<p>将每个功能从各人手中获得的资金累加起来，再除以成本，就得到一个投资收益率，很明显，投资收益率最高的功能就是应该最优先做的。</p>
<table>
<thead>
<tr>
<th>功能</th>
<th align="right">成本</th>
<th align="right">总销售额</th>
<th align="right">投资收益率</th>
</tr>
</thead>
<tbody><tr>
<td>个性化首页</td>
<td align="right">$10</td>
<td align="right">$45</td>
<td align="right">4.5</td>
</tr>
<tr>
<td>轻松安排软件开放进程</td>
<td align="right">$4</td>
<td align="right">$36</td>
<td align="right">9</td>
</tr>
<tr>
<td>追踪资金到账时间</td>
<td align="right">$5</td>
<td align="right">$12</td>
<td align="right">2.4</td>
</tr>
<tr>
<td>允许对bug分叉(fork)</td>
<td align="right">$1</td>
<td align="right">$7</td>
<td align="right">7</td>
</tr>
</tbody></table>
<p>下次排任务优先级的时候，我们应该尝试一下这种方法。</p>
<p>P.S. 回头再想一下，这个方法其实跟我们以前用的工作量乘以重要性级别的方法本质上是一样的，但是我们过去用的重要性级别1、2、3、4、5没有定量关系，说不出不同级别之间的重要性相差多少倍，因此相乘出来的数字就没有比较价值了。另外，每人手上持有有限量资金进行分配这种方式更接近我们日常的思维模式，调动起人的直觉，类似于planning game。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven artifact repository setup for multiple sites team</title>
    <url>/blog/2011/08/08/Maven-artifact-repository-setup-for-multiple-sites-team/</url>
    <content><![CDATA[<p>A typical way of adopting Maven to manage artifacts in an organization is to setup a repository manager locally. The repository manager proxies opensource repositories like Maven central from Internet, and hosts release and snapshot repositories for internal artifacts. It works fine in most cases, but when the team locales geographically in more than one site, and the bandwitdth between the sites is limited, or the artifacts are huge in size, the build performance will decrease, because uploading and downloading artifacts to&#x2F;from the remove repository takes time.</p>
<h2 id="Solution-1-Pubish-to-master-repository-download-from-local-repository"><a href="#Solution-1-Pubish-to-master-repository-download-from-local-repository" class="headerlink" title="Solution 1: Pubish to master repository, download from local repository"></a>Solution 1: Pubish to master repository, download from local repository</h2><p>Suppose on site A there is already a repository manager A, now site B is setup, what we need is a repository manager on site B that proxies both external repositories and internal repositories. Sonatype Nexus has the capability to aggregate serveral repositories &#x2F; mirrories and provides download access from a single URL.</p>
<p><img src="https://lh6.googleusercontent.com/-kQ4SwY2UV2s/Tj905hhUlJI/AAAAAAAAASc/hj_0Kxt6CQ0/s800/maven-repo-2sites-solution1.png"></p>
<p>By this solution, pom.xml of existing projects aren’t required to be modified. Simply add a <mirror> section with <mirrorOf> value set to * into Maven setting.xml for all developers who work in site B. But the publishing of artifacts from site B is still cross sites over slow connection, so mvn deploy is not fully optimized though the download of dependencies is speeded up by cache on local repository manager.</p>
<h2 id="Solution-2-Publish-to-local-repository-cross-caching"><a href="#Solution-2-Publish-to-local-repository-cross-caching" class="headerlink" title="Solution 2: Publish to local repository, cross caching"></a>Solution 2: Publish to local repository, cross caching</h2><p>This solution comes from <a href="http://www.sonatype.com/people/2011/07/video-multi-master-configuration-for-nexus/">Sonatype Blog</a>. Artifacts are always publish to repository on local site, each repository is cached by other site’s repository manager.</p>
<p><img src="https://lh4.googleusercontent.com/-XJdyMrSafCM/Tj905psGecI/AAAAAAAAASg/lGJsgsjir7I/s800/maven-repo-2sites-solution2.png"></p>
<p>This solution looks good if one artifact is owned by one site. But I’m wondering if it works in the situation that both sites publish the same SNAPSHOT artifact to its local repository manager. For example, foo-1.0.0-SNAPSHOT.jar was already deployed on Repository Manger A, and then on Repository Manager B a newer edition of the jar is deployed, how can site A get the later one?</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Maven Lifecycle Concepts</title>
    <url>/blog/2011/08/26/Maven-Lifecycle-Concepts/</url>
    <content><![CDATA[<p><img src="https://lh5.googleusercontent.com/-d_OZsHIjLe8/TlcV3xzq-DI/AAAAAAAAATE/CGu8uwStu1k/s800/maven-concept.png"></p>
<p>(<a href="https://picasaweb.google.com/lh/photo/D_sskYHvn6CgEruCxN6lMdBJO7epb5AqjiUnD_coqoo?feat=directlink">大图链接</a>)</p>
<p>一年前画的，把它电子化方便日后查看。看看有没有空补充些文字说明吧。</p>
<p>Reference:</p>
<ul>
<li>DZone Refcardz: <a href="http://refcardz.dzone.com/refcardz/apache-maven-2">Apache Maven 2</a></li>
<li><a href="http://gavin-chen.iteye.com/blog/336607">Maven plugin中的lifecycle、phase、goal、mojo概念及作用的理解</a></li>
</ul>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Apple Aperture 数码照片处理几板斧</title>
    <url>/blog/2011/09/27/Apple-Aperture-/</url>
    <content><![CDATA[<img src="https://lh5.googleusercontent.com/-MGOVmxQlebs/ToHSOBbvsCI/AAAAAAAAAaQ/ZgUEHwlGelk/s800/aperture3.jpg" class="right">

<p>以前都用Photoshop来处理照片，刚开始用Aperture，还真不太适应，用了几天兼阅读了help，慢慢有些了解了。对于照片的后期处理，其实用什么工具都大同小异，基本上就是几板斧。没拍好的照片也没有必要费心去调，直接删除就得了。</p>
<h2 id="基本原则：使用RAW格式拍摄"><a href="#基本原则：使用RAW格式拍摄" class="headerlink" title="基本原则：使用RAW格式拍摄"></a>基本原则：使用RAW格式拍摄</h2><p>RAW记录了拍摄时的原始信息，而jpg是已经经过相机处理之后的图像。用RAW格式提供了后期处理的更多可能性，例如曝光的增减（当然是小范围内了），白平衡的重新设定。</p>
<h2 id="基本调整"><a href="#基本调整" class="headerlink" title="基本调整"></a>基本调整</h2><ul>
<li><strong>图像倾斜矫正及裁剪</strong>：Viewer下方的工具栏有图标，或者用快捷键G和C。</li>
<li><strong>色温校准</strong>：相机的自动百平衡经常不太准确，需要在White Balance设置正确色温，常见光源的色温表在<a href="/blog/2011/09/27/Color-temperature-of-common-light-sources/" title="Color temperature of common light sources">这儿</a>；另外用 Enhance － Tint 可以分别调节高光／中间调／暗部的偏色。</li>
<li><strong>曝光调整</strong>：用快捷键Alt－Shift－H打开暗部与高光溢出显示，调节Exposure让图像曝光正常。Highlights &amp; Shadows可以挽救部分高光、暗部细节。如果要进一步调整，使用Enhance及Level。调整过程中，快捷键M可查看原始图像（Master）作对比。</li>
</ul>
<p>调整方法见<a href="/blog/2011/09/27/RAW-/" title="RAW照片后期处理的常用操作">RAW照片后期处理的常用操作</a></p>
<h2 id="其他调整"><a href="#其他调整" class="headerlink" title="其他调整"></a>其他调整</h2><ul>
<li><strong>色差纠正</strong>（消除紫边）：Chromatic Aberration</li>
<li><strong>降噪</strong>：Noise Reduction</li>
<li><strong>图像锐化</strong>：Edge Sharpen</li>
</ul>
<h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><table>
<thead>
<tr>
<th>Key</th>
<th>Function</th>
</tr>
</thead>
<tbody><tr>
<td>V</td>
<td>Switch view mode (browser &#x2F; split view &#x2F; viewer)</td>
</tr>
<tr>
<td>I, H</td>
<td>Show Inspector</td>
</tr>
<tr>
<td>F</td>
<td>Full screen</td>
</tr>
<tr>
<td>W</td>
<td>Switch Inspector tab (Library &#x2F; Metadata &#x2F; Adjustments)</td>
</tr>
<tr>
<td>Y</td>
<td>Show metadata</td>
</tr>
<tr>
<td>T</td>
<td>Show metadata tooltips</td>
</tr>
<tr>
<td>M</td>
<td>Show master image</td>
</tr>
<tr>
<td>Z</td>
<td>Zoom 100%</td>
</tr>
<tr>
<td>&#96;</td>
<td>Loupe</td>
</tr>
<tr>
<td>Alt-Shift-H</td>
<td>Highlight hot &amp; cold areas</td>
</tr>
<tr>
<td>Alt-F</td>
<td>Show focus points</td>
</tr>
<tr>
<td>0~5</td>
<td>Rating</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>ImageProcessing</tag>
      </tags>
  </entry>
  <entry>
    <title>Color temperature of common light sources</title>
    <url>/blog/2011/09/27/Color-temperature-of-common-light-sources/</url>
    <content><![CDATA[<p>&amp;nbsp;</p>
<table>
<thead>
<tr>
<th>Temperature</th>
<th>Typical Sources</th>
</tr>
</thead>
<tbody><tr>
<td>1000K</td>
<td><strong>Candles</strong>, oil lamps</td>
</tr>
<tr>
<td>2000K</td>
<td><strong>Very early sunrise</strong>, low effect tungsten lamps</td>
</tr>
<tr>
<td>2500K</td>
<td><strong>Household light bulbs</strong>(2680K - 40 W incandescent lamp)</td>
</tr>
<tr>
<td>3000K</td>
<td>Studio lights (continuous), 200 W incandescent lamp, (**3200K - Sunrise&#x2F;sunset;**<strong>3400K - 1 hour from dusk&#x2F;dawn</strong>, Tungsten lamp)</td>
</tr>
<tr>
<td>4000K</td>
<td>Clear flashbulbs (now obsolete),<strong>Fluorescent</strong></td>
</tr>
<tr>
<td>5000K</td>
<td><strong>Typical average daylight</strong>, electronic flash</td>
</tr>
<tr>
<td>5500K</td>
<td>The sun at noon, (<strong>5500~6000K - vertical daylight</strong>)</td>
</tr>
<tr>
<td>6000K</td>
<td><strong>Bright sunshine with clear sky</strong></td>
</tr>
<tr>
<td>7000K</td>
<td><strong>Slightly overcast sky</strong></td>
</tr>
<tr>
<td>8000K</td>
<td><strong>Hazy sky</strong></td>
</tr>
<tr>
<td>9000K</td>
<td><strong>Open shade on clear day</strong></td>
</tr>
<tr>
<td>10,000K</td>
<td><strong>Heavily overcast sky</strong></td>
</tr>
<tr>
<td>11,000K</td>
<td><strong>Sunless blue skies</strong></td>
</tr>
<tr>
<td>20,000+K</td>
<td>Open shade in mountains on a really clear day</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>ImageProcessing</tag>
      </tags>
  </entry>
  <entry>
    <title>RAW照片后期处理的常用操作</title>
    <url>/blog/2011/09/27/RAW-/</url>
    <content><![CDATA[<p>这里讲的是 Apple Aperture 3 的操作，但其他RAW处理软件（如Photoshop Lightroom）的功能和效果也都类似，可以参考。</p>
<h2 id="Exposure"><a href="#Exposure" class="headerlink" title="Exposure"></a>Exposure</h2><h3 id="Exposure-1"><a href="#Exposure-1" class="headerlink" title="Exposure"></a>Exposure</h3><p>黑位固定，直方图右侧拉伸。相当于相机的曝光量调整。</p>
<p><img src="https://lh6.googleusercontent.com/-fnAGXvmnFJE/ToHQKWlruvI/AAAAAAAAAZ0/O4pdxnS64yY/s800/exposure-1.jpg"> &#x3D;&#x3D;》 <img src="https://lh5.googleusercontent.com/-FP6Vg1nAOWI/ToHQKRFOhtI/AAAAAAAAAZ4/0lESY5sW318/s800/exposure-2.jpg"></p>
<h3 id="Recovery"><a href="#Recovery" class="headerlink" title="Recovery"></a>Recovery</h3><p>利用RAW记录的额外信息恢复高光溢出部分。</p>
<h3 id="Black-Point"><a href="#Black-Point" class="headerlink" title="Black Point"></a>Black Point</h3><p>利用RAW记录的额外信息恢复丢失的暗部细节。</p>
<h3 id="Brightness"><a href="#Brightness" class="headerlink" title="Brightness"></a>Brightness</h3><p>黑位与白位均固定，直方图中间色调左右移动。用于调整图像的整体明暗。与level工具的亮度调节功能类似，但level工具中若只拖动一个锚点时对直方图的影响更加局部，只改变特定色调范围。</p>
<p><img src="https://lh5.googleusercontent.com/-mKyUGov3PCc/ToHQJ9LMS-I/AAAAAAAAAZs/Z7XqqxDgQJk/s800/brightness-1.jpg"> &#x3D;&#x3D;》 <img src="https://lh4.googleusercontent.com/-MWAZLV47es8/ToHQKHGqVNI/AAAAAAAAAZw/B4GjHYLSF_A/s800/brightness-2.jpg"></p>
<h2 id="Enhance"><a href="#Enhance" class="headerlink" title="Enhance"></a>Enhance</h2><h3 id="Contrast"><a href="#Contrast" class="headerlink" title="Contrast"></a>Contrast</h3><p>中灰不变，直方图向两侧拉伸。（不建议使用，用level工具控制更准确）</p>
<p><img src="https://lh6.googleusercontent.com/-lZY-AgmwRcU/ToHQJ3eBQMI/AAAAAAAAAZo/1lTWE0LHHoA/s800/contrast.jpg"></p>
<h3 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h3><p>增强图像局部的对比度，但不影响整体图像的对比度，直方图无整体性变化。可提高图像明暗交界的细节，例如让云朵更加立体。</p>
<h3 id="Saturation"><a href="#Saturation" class="headerlink" title="Saturation"></a>Saturation</h3><p>让RGB三原色的直方图趋于重合或者更加离散。用于减弱色彩或者增强色彩(变鲜艳)。饱和度增加时图像细节会丢失。</p>
<p><img src="https://lh6.googleusercontent.com/-EKHur68d4-A/ToHQKvYuHQI/AAAAAAAAAZ8/LRPgisNijDM/s800/saturation-1.jpg"> &#x3D;&#x3D;》 <img src="https://lh3.googleusercontent.com/-NGeEU2MWZwg/ToHQLOXNoBI/AAAAAAAAAaE/hwsr11w3eS0/s800/saturation-2.jpg"></p>
<h3 id="Vibrancy"><a href="#Vibrancy" class="headerlink" title="Vibrancy"></a>Vibrancy</h3><p>与saturation类似，但不影响肤色。用于人像照片中的色彩调整，但保持肤色不变。</p>
<h2 id="Highlights-amp-Shadows"><a href="#Highlights-amp-Shadows" class="headerlink" title="Highlights &amp; Shadows"></a>Highlights &amp; Shadows</h2><p>降低高光部分亮度，但不影响中间调和暗部；提高暗部亮度，但不影响中间调和亮部。直方图上的效果是高光部分和&#x2F;或暗部扩展，移向中间调位置，但实际处理并非单纯的直方图映射，运算时会考虑到周边像素的色调的影响。用于对图像中过亮或者过暗的部分进行补偿，增加色调变化细节。</p>
<h2 id="Levels"><a href="#Levels" class="headerlink" title="Levels"></a>Levels</h2><p>将直方图进行映射变换，下横轴是输入，上横轴是输出。Aperture的levels工具可以调节四分之一色调的映射，可以完成部分本来需要使用曲线工具的调节。</p>
<p>Levels调整是在上面几种调整的基础之上进行的，可能会抵消了前面所做的调整的效果。若非必要不应该将它与前面提到的工具混合使用。</p>
<p><img src="https://lh3.googleusercontent.com/-Af7kvdJq3pU/ToHQKit_TwI/AAAAAAAAAaA/1x5cdJ1hZrE/s800/level-1.jpg"> &#x3D;&#x3D;》 <img src="https://lh3.googleusercontent.com/-f0jePRCWRAI/ToHQQCnp4qI/AAAAAAAAAaI/qW_bMiOvGZw/s800/level-2.jpg"></p>
]]></content>
      <tags>
        <tag>ImageProcessing</tag>
      </tags>
  </entry>
  <entry>
    <title>Dump beans information from live Spring application context</title>
    <url>/blog/2011/11/08/Dump-beans-information-from-live-Spring-application-context/</url>
    <content><![CDATA[<p>To maintain the Spring application context in a large application is not an easy job. There may be dozens of beans, whenever you want to make changes, you have to be very clear on there dependency. After serveral rounds of update, some beans might be orphan, they’re unused any more but you don’t know.</p>
<p>Spring IDE provides bean cross reference view and bean graph view that can help to analysis the bean relationship. But what Spring IDE has is a static view of the beans. In our project the application context is complicated: it scans classpath for all bean definition XML files and load them; application context created in WAR package inherits parent application context which is defines in EJB classpath; some beans are marked with annotation and loaded by <a href="context:component-scan">context:component-scan</a>, rather than define in XML file. I doubt Spring IDE can show the dynamic bean view as it is in runtime. What’s more, Spring IDE isn’t available at our standard development environment.</p>
<p>Inspired by a StackOverflow <a href="http://stackoverflow.com/questions/5850639/how-to-keep-track-of-all-the-autowired-stuff-while-using-spring-ioc/5851872#5851872">answer</a>, I created an ApplicationContextDumper. Add it into application context, it will dump all beans and their dependencies in the current context and parent contexts (if any) into log file when the application context initialization finishes. It also lists the beans which aren’t referenced.</p>
<script src="//gist.github.com/1347171.js?file=ApplicationContextDumper.java"></script>

<p>Here is an example. We have two application contexts. Please be noticed that the ApplicationContextDumper has been added into applicationContext.xml.</p>
<script src="//gist.github.com/1347171.js?file=applicationContext.xml"></script>
<script src="//gist.github.com/1347171.js?file=parentContext.xml"></script>

<p>parentBeanFactory is the parent of myBeanFactory:</p>
<script src="//gist.github.com/1347171.js?file=beanRefContext.xml"></script>

<p>In main, loads application context from beanRefContext.xml. </p>
<script src="//gist.github.com/1347171.js?file=main.java"></script>

<p>The application context is dumped in log:</p>
<script src="//gist.github.com/1347171.js?file=output"></script>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>SpringFramework</tag>
      </tags>
  </entry>
  <entry>
    <title>Nike Lunar Run 10公里跑总结</title>
    <url>/blog/2011/11/15/Nike-Lunar-Run-10-/</url>
    <content><![CDATA[<p>11月12日，完成了Nike Lunar Run 10公里跑，这是我第二次参加计时的跑步活动。其实准确的说，只是9.5km跑，因为赛道长度不足10km，多人的GPS测量结果和在Google Maps上面量度距离都证明了这点，但是官方公布的成绩又比实际冲线时计时显示的时间多了大约两分钟，大概是换算出10km的时间。</p>
<p>上一次参加10公里跑是2009年，成绩为58:30，当时定下了目标要提高到55:00（<a href="/blog/2009/09/25/Prepare-10-km-run/" title="准备10km跑">准备10km跑</a>），也就是每公里5分30秒的步速。这次出来的成绩却是意想不到的好，官方公布的成绩是48:29，可能还需要减去过起跑线之前的10来秒，我自己的GPS只记录到8公里处就停止了（<a href="http://runkeeper.com/user/aleung/activity/59561069">RunKeeper</a>），总之步速大约是每公里4分50秒的样子。我之前从来没有想过步速可以迈进5分钟每公里大关的，对这个速度已经非常满意，下次再跑也没有速度目标了，保持这个水平并且不要受伤就好，希望能够尝试一下更长的距离。</p>
<p>虽然名字叫做Lunar Run，比赛是在早上9点进行的。前半程自己感觉状态并不好，步频提不到每分钟170～180步的目标，还不如平常晚上训练的感觉好。也许是早上活动不开，应该热身多一些才行。但跟两年前比较，整个过程跑下来轻松很多，09年那次到最后2公里有点拖着腿熬下来的感觉，最后看着终点在前面都完全没有办法加速了。因为怕最后会跑不动，这次一路上都有点留力，跑到最后一两公里时感觉有余力，还想最后500米可以加速冲一下的，结果一个不留神发现终点已经到了。</p>
<p>成绩提高首先是因为平常的训练增加了，最近一个多月基本保持每周跑两到三次。最重要的因素应该是提高步频的训练，以前习惯低步频大步幅，特别是跑到累的时候脚步沉了更是想靠增大步幅来弥补，最近知道这样不对后才有意识的提高步频，特别是前两个星期做了个Android应用来测量步频，按照180的目标来训练，速度明显提升，膝盖也基本不会怎么痛。我现在还是没办法达到180的步频，一般只能在160～170左右，但已经比以前好不少了。现在跑步的时候基本上就是默念着一件事情：保持步频。只要步频不降下去，速度就不会太慢，也能够压抑着增大步幅的欲望。另外还有些技巧性的因素：上次排在比较后的位置起跑，跑道上人太拥挤了，只能用比走路快不了太多的速度挪动，这次有经验就尽量往起跑区的前面靠，本来在第二区的，后来跟着人穿进了第一区，排在第一区的较前位置起跑，起跑跑出一两百米后就不会受人阻挡了。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>NoClassDefFoundError</title>
    <url>/blog/2011/11/24/NoClassDefFoundError/</url>
    <content><![CDATA[<p>java.lang.NoClassDefFoundError 是个很讨厌的错误，你会发现明明它报告的class已经打包进应用里，没可能在classpath中找不到，然后百思不得其解。其实这个exception跟 ClassNotFoundException 不同，后者报告的类是真的找不到，而这个NoClassDefFoundError 的错误原因是：class loader无法加载这个类，因为它依赖的另外某些类无法找到。到底是什么类找不到？它不告诉你。</p>
<p>例如，看这个exception stack trace:</p>
<pre><code>Caused By: java.lang.NoClassDefFoundError: net/sf/cglib/proxy/Enhancer
        at org.springframework.aop.framework.Cglib2AopProxy.createEnhancer(Cglib2AopProxy.java:228)
        at org.springframework.aop.framework.Cglib2AopProxy.getProxy(Cglib2AopProxy.java:170)
        at org.springframework.aop.framework.ProxyFactory.getProxy(ProxyFactory.java:112)
        at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy(AbstractAutoProxyCreator.java:476)
        at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:362)
        at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:322)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:407)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1426)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
</code></pre>
<p>cglib.jar是在classpath里的，真正错误原因是CGLIB所依赖的asm.jar不存在。</p>
<p>有什么好方法查出NoClassDefFoundError的root cause吗？我不知道。不用Maven管理依赖的后果啊。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>跑步步频训练软件 RunningCadence 开发小记</title>
    <url>/blog/2011/12/24/Running-training-software-development-XiaoJi-RunningCadence-step-frequency/</url>
    <content><![CDATA[<p>在<a href="/2011/11/15/Nike-Lunar-Run-10-/">10km跑总结</a>里提到：这次10km跑成绩的提高最重要因素是步频的提高。</p>
<p>在网上看了一些资料，提到提高步频的好处，并指出长跑理想的步频应该在每分钟180步左右，就开始尝试练习提高步频。但是跑起来并不知道怎样的频率才是合适的，还需要有工具测量才行。想到可以用手机的加速度传感器来测量，跑步时把手机绑在手臂上或者拿手上，测量手的摆动周期应该就可以计算出步频。</p>
<p>有了想法后，就考虑怎样实现。先要知道跑步时加速度传感器得到的数据会是怎样的，在market上找到软件Accelero-meter Log，能显出加速度传感器三轴数据的曲线。拿着手机跑了几步看看曲线，发现完全不是想象中那么简单：从曲线可以看出每跑一步的加速度变化，但并不是一步一个脉冲那么理想，而是大脉冲中包含着小脉冲，波形很不规则；更要命的是不同轴测量到的数据频率会不一样，软件应该按那个轴的数据计算？后来才想到不同轴测量数据频率不同的原因是手摆动的频率与身体重心上下移动的频率不一致，只是一半，再加上手的活动太自如了，跑动过程中会有不同的动作，都会引起加速度变化。</p>
<p>上网找到一个开源的Android计步器的代码，看看它怎么做，发现它只是将三个轴的数值加在一起，然后判断变化量。根据前面看得的数据波形，我感觉这样的算法太不靠谱了，再看看这个软件的用户评价，果然不佳。</p>
<p>这时想到Nike的配合iPhone使用的计步器，是藏在鞋里面的。它应该是感应脚的每次着地，而且计步器是固定在鞋里的，有特定的安装方向，因此它可以只检测垂直地面的加速度。想到这里就豁然开朗了，原来测量摆臂的想法是错误的，应该测量脚着地的冲击，也就是垂直方向的加速度。但那个轴才是垂直地面的呢？我不能规定用户使用这个软件时手机摆放的方向啊，他可以绑在臂上，拿在手里，放裤袋中。。。因此首先要解决的问题是如何判断手机的姿态，找出垂直于地面的轴。</p>
<p>人在运动的时候加速度不断变化，但加速度矢量一段时间的累计应该为零，而重力加速度是恒定的，并且垂直于地面，检测出重力加速度的方向就ok了。具体实现的方法也比较简单：对传感器三个轴的数据分别做截止频率为0.25Hz的低通滤波后，数值最大的那个轴应该就是最接近于垂直地面的。</p>
<p>还有个问题是手机加速度传感器的采样频率能到多高？是否能满足要求？长跑理想的着地次数是每分钟180次，相当于3Hz，一般人都只会比这个慢。实测我的Nexus One使用最短采样间隔时大约30~50ms能获取到一组数据，也就是采样频率大于20Hz，对于检测3Hz的信号完全足够。</p>
<p>对于复杂波形的处理方法，同样是简单的一阶低通滤波，截止频率取了3.5Hz，相当于每分钟210次着地。高频干扰通过滤波削弱后，相邻波峰的时间间隔就是两次着地的时间间隔了。具体实现时，波峰判断会比较麻烦，采样检查是否超过阈值来代替。本来想按振幅比例来设定阈值的，但算振幅也比较麻烦，之前检测重力加速度时已经得到重力加速度在测量轴上的分量，直接拿它的1&#x2F;2做阈值就好了。这样做还带来了一个没有预料到的副作用：走路时脚步比较轻，超不过阈值，因此软件还能知道当前是否处于跑步状态。</p>
<p>步频数据算出来以后其他的就好办了。跑步时不方便看屏幕，通过语音合成播放出来。设定目标步频，语音提示应该加快还是减慢。还打算过增加个目标步频的节拍音，当实际步频与目标不一致时播放出来，不过软件用了这段时间，感觉有语音播报步频基本上已经足够了，暂时不做以后再说吧。</p>
<p>这个软件项目的网站： <a href="http://code.google.com/p/running-cadence/">http://code.google.com/p/running-cadence/</a></p>
<p>软件发布在Android Market:<a href="https://market.android.com/details?id=leoliang.runningcadence">https://market.android.com/details?id=leoliang.runningcadence</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Android</tag>
        <tag>MyWork</tag>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>白云山跑步</title>
    <url>/blog/2011/12/26/Baiyun-mountain-running/</url>
    <content><![CDATA[<p>最近几个周末都跑超过10公里的长距离，但珠江边跑多了已经没有新鲜感。另外最近一段时间空气污染情况又偏高了，虽然头顶阳光灿烂，看远眺整个城市低空都笼罩在一层灰霾之中。于是就把目光投向了白云山：一方面离开市中心，也有高度，空气会好些；另外跑有坡度的路线，可以起到不一样的锻炼效果。</p>
<p>以往去珠江边跑，我都是从住处附近就开始跑，最后跑回家，因此可以穿短衣短裤。但去白云山跑来回都得坐车，穿衣就是个问题。为此专门去迪卡侬买了长袖跑步上衣和紧身7分跑步裤。本来还想买跑步背包的，没得卖，登山背包不适合跑步，只好算了。回来在网上查一下，似乎全国的店都没有卖跑步背包，看了现在玩户外hiking的人多了，但跑步得还是少数。这次背了自行车包，效果还行，没有腰带有点左右晃动，但只是放一件衣服重量不大，对跑步没什么影响。</p>
<p>从外语学院附近的西门进白云山，已经下午4点多，周末到白云山的人真多，路上游客络绎不绝。新买的衣裤很显眼，引来不少注目，所以很多人都建议买点貌似专业的装备，可以有助于坚持锻炼。</p>
<p>路线记录在<a href="http://runkeeper.com/user/aleung/activity/63723897">RunKeeper</a>，有地图和海拔、速度曲线。</p>
<p>西门上山的路是最平缓的，至明珠楼前的2km没有多少上升，正好作为热身。过了明珠楼，就是正式上山路了，2公里上升了150米，上坡时的步速在每公里6分钟多到7分钟多左右，步频大概坚持在160～170，但步幅缩得很小了。绕摩星岭有东西两条路，我先是选择了东面的路，在接近6km处经过了这段路的最高点275米，接下来的路就比较平缓了，上下坡交替，坡度没有前面大，下坡路我跑得很欢。这段路视野开阔，先是看到京溪、梅花园一带的楼房，然后拐过弯，就看到了天河的中信等高楼。看着笼罩在一片灰蒙蒙之中的高楼已经在脚下，感觉很爽。跑了45分钟，7.6km，到达山顶公园。我原计划就是跑到这里为止的，本来以为起码要一个多小时才能到，一停下来，觉得好像不累，还没跑够（其实前面上坡的时候挺吃力的）。从这里如果往南走，就一直是下山路，到云台花园出山，坡度要更大，我不敢跑这样的下坡路，于是回头，还是回外语学院那边好了。接下来的岔路，选择了摩星岭西侧的路，这样走的就是环线，不用全走回头路。没想到后面这一公里多的路真是要命，一路都是上坡，一点平缓都没有。后面有一段我都坚持不了走直线，只能之字形迂回。幸好这段路不长，锦绣南天（雷达站）处到达最高点340米，这一公里上升了90米，上坡步速每公里8～9分钟，比走路快不了多少。接下来就是一路下坡了，跑了一公里多，一直都要控制速度，想着到山底路还长，怕膝盖受不了，不敢继续跑了，就此结束。全程10.64km，耗时1:06:55，平均6.17min&#x2F;km。</p>
<p>西门这条路跑步上山比较合适，但走路下去就太长了。结束跑的时候差不多6点，太阳下山了，穿回抓绒衣也不冷，但裤子只盖住膝盖，小腿就有点凉。走到明珠楼，看后面的路坡度不大了，又跑了差不多两公里一段。但这段就跑得不算太好，不算累，但小腿偶尔有点要抽筋的感觉，不知道是因为之前上坡时累了还是因为太凉。下次还是走云台花园下山好了，时间短一些。但那边又没有直接回家的公交车，麻烦。今天跑这趟步一共花了4个多小时，如果能够将总时间控制到3小时内就比较好。</p>
<p>今天还戴了心率记录器来跑的，早上迪卡侬买的，配合我已有的心率胸带，USB电脑读数据。谁知回来才发现只能接Windows上，不支持Mac OSX，在虚拟机里也认不到设备。而且RunKeeper也只支持Polar心率表的数据格式，这个就算能连也没用。要拿回去退货了。</p>
<p>第一次跑上山，感觉不错。以后说不定可以尝试一下越野跑，据说龙凤线也可以跑的。不过不敢跑大下坡，膝盖伤过后就承受不了。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>延长洁厕宝(蓝泡泡)使用时间的小技巧</title>
    <url>/blog/2012/02/19/Extend-the-toilet-bowl-cleaning-treasure-blue-bubble-use-of-the-time-small-skills/</url>
    <content><![CDATA[<p>以前马桶放的洁厕宝（蓝泡泡）总是不耐用，声称普通使用可达一个月，但实际上头几天冲的水颜色很深，一个星期后颜色就非常淡了，根本用不到一个月，原因是溶解速度控制不了，太快了。</p>
<p>为了防止过快溶解，给洁厕宝增加一个”外套”。我选的是大开口的口香糖盒子，大小比较合适，能把整块洁厕宝放进去，瓶口合上比较严实。在瓶身开上几个直径3～5mm左右的洞，洞不能太小也不能太大。开始可以先开三四个，如果实验发现洁厕宝溶解不出来再加开几个。怎么开洞就看你手上有什么工具了，我试过几种工具，发现用美工刀最容易，三刀开出一个三角形的洞。做好后把洁厕宝放进去，盖上盖子，扔马桶水箱里就行了。因为盒子里有空气，可能它不会自己沉下去，需要把它按进水里，把空气排出来。水箱里有水垢，不是那么好看，就不把照片贴出来了。</p>
<p><img src="https://lh4.googleusercontent.com/-c5HKYk_j34o/T0EL4Y6tMcI/AAAAAAAAAnY/YnGOTSAfDBY/s800/toilet_%201%20%281%29.jpg"><img src="https://lh4.googleusercontent.com/-xujCGkefLQY/T0EL5g-crrI/AAAAAAAAAng/aVK2tmecsC0/s800/toilet_%202%20%281%29.jpg"><img src="https://lh3.googleusercontent.com/-lDnmsRQFEiQ/T0EL7i1DpCI/AAAAAAAAAno/GCn5dEHM9dc/s800/toilet_%203%20%281%29.jpg"></p>
<p>加了”外套”后，效果相当显著，一颗洁厕宝大概能用三个月。去年家人出差多，竟然用了半年！</p>
]]></content>
      <tags>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>在亚马逊买电脑主板，故障退货的经历及总结</title>
    <url>/blog/2012/02/25/In-the-amazon-bought-the-computer-motherboard-and-summarizes-the-experience-of-fault-return/</url>
    <content><![CDATA[<p>为了给老台式电脑升级，在Amazon买了主板、CPU、内存，但装起来加电后不亮。根据现象分析，主板故障的可能性最大，主板是华擎H61M-HVS。拿去华擎网站上列出的本地特约维修中心检查。那里的人说亚马逊网上买的他们不管，跟他沟通了一下，他才勉为其难的测试了一下，查出是主板故障，贴了张故障标签就算了。问他是否能出检测报告之类，我好退货，他说不行，本来检测都不是他们的责任。</p>
<p>想找Amazon客服咨询，才发现根本没有客服热线，只能上网。幸好智能手机能上网，在订单退货的页面里能够呼叫客服。客服回电话倒是非常快，说了情况后她让我保留好维修中心的故障标签，给我办理了退货申请。我现在就等着退货了。</p>
<p>就这次经历总结一下：</p>
<ol>
<li>买回来的新主板就有故障，让我对华擎的质量失去信心。后来我就买了华硕的主板，一线品牌可能可以放心些。</li>
<li>华擎（好多其他电脑配件厂商也一样）的售后服务是要求通过原销售店家进行的，但亚马逊并不负责售后，因此出现故障后能否得到有效的服务很难说。我这次幸好还在7天退货期内，可以找亚马逊退货，假如超过7天，我都不知道该如何送修。这点的责任我觉得更多在厂商，他们还没有重视网络电子商务市场。因此消费者在购买这类商品的时候要慎重考虑，要么在实体店买，要么选择明确支持直接全国联保无需通过经销商的品牌。</li>
<li>亚马逊的客服态度和处理都令我满意。结合以前网购的经历，亚马逊在网站、送货、支付、退货各环节都做得不错，是体验最好的。当然，这次我还要等到退货完成，退款成功后才能下最后结论。</li>
</ol>
<p>Update：</p>
<p>Amazon的退货非常简单和顺利，免费上门收货，签张单。款项很快就退回帐户了。后来我购买其他的东西，还试过无理由退货（只有部分类别货品允许无理由退货），也是很简便，一句废话都不问，爽快得很。</p>
]]></content>
      <tags>
        <tag>Misc</tag>
      </tags>
  </entry>
  <entry>
    <title>用手机遥控Linux后台播放豆瓣电台</title>
    <url>/blog/2012/03/10/By-mobile-phone-remote-control-Linux-backstage-radio-broadcast-requirements/</url>
    <content><![CDATA[<p>最近买了一个<a href="http://en.wikipedia.org/wiki/Asus_EeeBox_PC">EeeBox</a>来做home server，装Ubuntu操作系统，有不少东西可以玩。</p>
<p>其中一个用途是连接到音响播放音乐。我比较喜欢听豆瓣电台，于是找一个豆瓣电台的客户端。Home server平常不接显示器，也不启动图形界面，常见的浏览器客户端、桌面客户端都不能用，要找命令行的。在github上找到Johnny Huang开发的<a href="https://github.com/hzqtc/fmd">fmd</a>（Douban FM daemon），启动后在后台运行，正合我意。Fork下来给它增加了个安装脚本，能够安装为服务，开机就自动运行了。但fmd只是个后台进程，只有telnet命令接口，没法对它进行直接控制的，作者另外做了个命令行工具，叫做fmc（FMD client），用来控制fmd。但命令行工具在我这里也还是不能用—-没有显示器没有键盘—-必须能遥控才行。于是我在fmc基础上给它增加了一个web UI，称为<a href="https://github.com/aleung/fmweb">fmweb</a>，通过手机浏览器访问，就可以控制播放了。于是，我现在在家里任何地方，都可以控制我的豆瓣电台的播放，不喜欢听，跳下一首歌。</p>
<p>这是在Android浏览器上的截图，在iPhone、iPad上也可以用。</p>
<p><img src="https://lh6.googleusercontent.com/-ishGby7lpTk/T1ove7Z0-rI/AAAAAAAAAoU/94_iFdmfSKw/s400/Screenshot_2012-03-09-23-41-13.png"><img src="https://lh5.googleusercontent.com/-zXp_XdbbgNk/T1ovfpnkxbI/AAAAAAAAAoc/CN-7dV4U4Xg/s400/Screenshot_2012-03-09-23-55-39.png"></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>《程序员的思维修炼》读书笔记</title>
    <url>/blog/2012/06/05/The-programmer-thought-of-uniting-the-reading-notes/</url>
    <content><![CDATA[<p>《<a href="http://book.douban.com/subject/5372651/">程序员的思维修炼—-开发认知潜能的九堂课</a>》，国内书商起个怪名字，其实重点在副标题。 原书标题根本不是这样的。</p>
<h2 id="德雷福斯-Dreyfus-技能模型"><a href="#德雷福斯-Dreyfus-技能模型" class="headerlink" title="德雷福斯(Dreyfus)技能模型"></a>德雷福斯(Dreyfus)技能模型</h2><h3 id="新手-Novice"><a href="#新手-Novice" class="headerlink" title="新手(Novice)"></a>新手(Novice)</h3><p>新手缺乏经验，完成任务时需要操作指引。</p>
<p>即使某人在一个领域上工作了十年，对所有指引已经了然于心，但他只是不断重复执行指令，也依然是新手。</p>
<h3 id="高级新手-Advanced-beginner"><a href="#高级新手-Advanced-beginner" class="headerlink" title="高级新手(Advanced beginner)"></a>高级新手(Advanced beginner)</h3><p>能执行要做的任务并根据需求学习新任务，但没对任务环境获得更广泛的概念上的理解，缺乏全局思维。</p>
<p>高级新手占了绝大部分比例，但他们常高估自己，因为不知道自己不知道什么。</p>
<h3 id="胜任者-Competent"><a href="#胜任者-Competent" class="headerlink" title="胜任者(Competent)"></a>胜任者(Competent)</h3><p>胜任者能够独立解决问题。</p>
<h3 id="精通者-Proficient-practitioner"><a href="#精通者-Proficient-practitioner" class="headerlink" title="精通者(Proficient practitioner)"></a>精通者(Proficient practitioner)</h3><p>精通者懂得反思，自我纠正，从自己和他人的经验中学习。</p>
<h3 id="专家-Expert"><a href="#专家-Expert" class="headerlink" title="专家(Expert)"></a>专家(Expert)</h3><p>专家凭直觉工作，基于他们在领域中的丰富经验，在恰当的情景中选取和应用这些经验。</p>
<p>专家对问题思考时将所有方面作为一个完整和独特的整体来考虑，而不仅是关注相关方面。</p>
<p>处理问题时，新手需要指引(instruction)，专家依靠直觉。不给新手指引，或者要求专家跟随指引，都会降低生产力。</p>
<p><em>按照前面说那个技能模型的定义，看看自己，在大部分领域都只是高级新手，少量能到胜任者，连精通都算不上。</em></p>
<h2 id="隐性思维"><a href="#隐性思维" class="headerlink" title="隐性思维"></a>隐性思维</h2><p><em>原文中为R型思维，R指右脑，但作者认为左右脑区分并非真实情况，将L解释为线性(linear)模式R解释为富(rich)模式。我按照自己的理解将R型思维看成隐性思维。</em></p>
<p>发挥隐性思维，捕获闪现灵感，随时准备着记录下来。</p>
<p>隐性思维会被压抑，在一种思维不受控制的状态下，隐性思维才会发挥作用。</p>
<p>重视你的直觉，但要去验证它，而不是盲目在第一时间跟随直觉行动。</p>
<p>隐性思维是非线性的，它从你的记忆库中匹配关联，多学习接触不同类别的东西，为隐性思维累积素材。</p>
]]></content>
      <tags>
        <tag>PersonalDevelopment</tag>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>一些读书记录</title>
    <url>/blog/2012/06/09/Some-reading-record/</url>
    <content><![CDATA[<p>前几个月看了些软件开发相关的书，读的时候有时有感悟就发条tweet，在这里备份一下。  </p>
<h3 id="梦断代码"><a href="#梦断代码" class="headerlink" title="梦断代码"></a><a href="http://book.douban.com/subject/6526454/">梦断代码</a></h3><p>开始阅读《梦断代码》，一个历时多年的软件项目惨败的故事。其实类似的案例很多很多，不过大家都不愿意承认失败，或者将失败轻描淡写而已。</p>
<p>可复用软件之梦有一悖论：几乎总能找到一段满足大部分需要的代码，但这些拿来的代码所不能做到的部分，恰是本项目与众不同的创新之处。</p>
<p>软件开发的时间估算始终是恒久难题，敏捷方法能做到的只是对于短期估算有改善：通过任务切分和开发团队亲自估算让数值看起来可靠些，通过计算迭代速率等手段让估算值反映团队近期状态；但对于长期估算，答案依然是：你丫别问了，到时自然就知道。</p>
<p>《梦断代码》讲了一帮聪明人是怎么把事情搞砸的。因此我非常感兴趣Linux项目是怎么运作的，Linus怎么把这么多聪明人弄到一起合作，而且似乎成效相当不错。</p>
<p>在周五下班的地铁上看完了《梦断代码》，没有做计划也没有刻意定目标，但已经是在周五读完的第三本书，每周一本。就像连续三个叠代都准时交付。</p>
<h3 id="设计原本"><a href="#设计原本" class="headerlink" title="设计原本"></a><a href="http://book.douban.com/subject/5406042/">设计原本</a></h3><p>一个设计，一个人能完成就不要让其他人参与，增加的人手会削弱设计的一致性，概念的完整性。一个职责，一个部门负责就好，多部门合作带来各自的利益考虑和冲突。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>试验 Octopress 的各种特性</title>
    <url>/blog/2012/06/24/try-octopress-markdown-features/</url>
    <content><![CDATA[<p>这个blog使用的markdown解释器是<a href="http://kramdown.rubyforge.org/quickref.html">kramdown</a>，比起标准markdown有所增强。再加上Jekyll的一些插件特供的特殊功能。</p>
<h2 id="Markdown基本语法"><a href="#Markdown基本语法" class="headerlink" title="Markdown基本语法"></a>Markdown基本语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>标题用<code>#</code>开头，一个井号是一级标题，两个井号是二级标题，井号越多字体越小。</p>
<p>一级标题也可以通过在标题的下一行用<code>========</code>来标注，二级标题就是<code>---------</code>。更小的标题就不能用这种方式了。</p>
<h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p>行内式链接：</p>
<pre><code>This is a [link](http://example.com).
</code></pre>
<p>参考式链接：在链接文字的方括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记（若省略则与链接文字相同），接着，在文件的任意处，把这个标记的链接内容定义出来。</p>
<pre><code>This is [an example][1] reference-style link.

[1]: http://example.com
</code></pre>
<p>参考式链接可以提高 markdown 文本的易读性。</p>
<h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>与链接类似，区别是前面增加叹号<code>!</code>：</p>
<pre><code>![text](link)
</code></pre>
<p>另一种图片语法是由插件支持的，用<code>&#123;</code> <code>%</code>包围的img标签，后面跟着图片URL，在URL前可以加入可选的css class名称，如：<code>left</code>, <code>right</code>，得到文字环绕效果。</p>
<h3 id="引用-blockquote"><a href="#引用-blockquote" class="headerlink" title="引用 (blockquote)"></a>引用 (blockquote)</h3><p>用<code>&gt;</code>开头的一个段落：</p>
<blockquote>
<p>Stay hungry…<br>stay foolish.</p>
</blockquote>
<p>用四个空格缩进的段落，会按原始格式显示，相当于HTML的<code>&lt;pre&gt;</code>的效果：</p>
<pre><code>+----+
|    |
+----+
</code></pre>
<p>也可以通过在原始格式引用段落的前后各加一行波浪号<code>~~~~~~</code>来实现。(这是kramdown特有的语法)</p>
<h3 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h3><p>用<code>*</code>或<code>_</code>包围的文字会用斜体显示：</p>
<p>Some of these words <em>are emphasized</em>.</p>
<p>如果双重符号<code>**</code>或<code>__</code>则会用粗体显示：</p>
<p>Use two asterisks for <strong>strong emphasis</strong>.</p>
<p>用<code>`</code>包围的文字按代码格式显示。</p>
<h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>用<code>*</code>, <code>+</code>, <code>-</code>开头的行都会作为列表项。子项缩进两个空格。</p>
<ul>
<li>加号开头的段落<ul>
<li>缩进两个空格，加号开头<ul>
<li>再缩进两个空格，三级项目</li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li>其次</li>
</ul>
<h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>注意第二行的分割线的冒号位置，决定了这一列的对齐方式。</p>
<pre><code>No.   | Name    | Status  |
-----:|:--------|:-------:|
1     | Alaph   | done    |
2     | Beta    | ongoing |
10000 | Release | n/a     | 
</code></pre>
<p>效果：</p>
<table>
<thead>
<tr>
<th align="right">No.</th>
<th align="left">Name</th>
<th align="center">Status</th>
</tr>
</thead>
<tbody><tr>
<td align="right">1</td>
<td align="left">Alaph</td>
<td align="center">done</td>
</tr>
<tr>
<td align="right">2</td>
<td align="left">Beta</td>
<td align="center">ongoing</td>
</tr>
<tr>
<td align="right">10000</td>
<td align="left">Release</td>
<td align="center">n&#x2F;a</td>
</tr>
</tbody></table>
<h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>增加脚注<a href="%E8%84%9A%E6%B3%A8%E4%B8%80%E5%AE%9A%E4%BC%9A%E6%98%BE%E7%A4%BA%E5%9C%A8%E6%9C%80%E6%9C%AB%E5%B0%BE%E3%80%82">^1</a>很简单，就是这样：<code>[^1]</code></p>
<p>脚注定义的写法是以<code>[^1]: </code>开头，后面跟着定义。</p>
<h2 id="嵌入代码"><a href="#嵌入代码" class="headerlink" title="嵌入代码"></a>嵌入代码</h2><p>下面的嵌入代码的方式都是由插件提供的，并非markdown语法。</p>
<h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">``` [language] [title] [url] [link text]</span><br><span class="line">code snippet</span><br><span class="line">```</span><br></pre></td></tr></table></figure>

<p>效果：</p>
<figure class="highlight java"><figcaption><span>HelloWorld.java</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="嵌入Gist"><a href="#嵌入Gist" class="headerlink" title="嵌入Gist"></a>嵌入Gist</h3><script src="//gist.github.com/2934603.js"></script>

<p>方法是写一个用<code>&#123;</code> <code>%</code>包围的gist标签，后面带上id。</p>
<hr>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>migrate my blog to github</title>
    <url>/blog/2012/06/25/migrate-my-blog-to-github/</url>
    <content><![CDATA[<p>个人blog再一次搬家，从 Google Application Engine (GAE) 搬到 github 上来。原来的<a href="http://good-good-study.appspot.com/">地址</a>依然能够访问，但是不会再更新了，新文章都发到这里。Feed订阅地址不变，建议使用Google Reader订阅本站。</p>
<h2 id="搬迁原因"><a href="#搬迁原因" class="headerlink" title="搬迁原因"></a>搬迁原因</h2><p>上一次从blogbus搬到GAE，是因为忍受不了审查制度。GAE后来也被墙了，但是即使如此，我也不会为了读者数量而再使用国内的blog服务，在被审查的状态下写东西。</p>
<p>这次搬到github，最主要的动机是为了使用<a href="http://octopress.org/">Octopress</a>这个blog framework。</p>
<h3 id="好玩"><a href="#好玩" class="headerlink" title="好玩"></a>好玩</h3><p>这个是最重要的原因。写blog不是什么正事，本来就是兴趣而已。之前搬离blogbus，选择了GAE的原因就是尝试一下GAE和PlayFramework编程。这次就是为了尝试Octopress。</p>
<h3 id="使用markdown写作"><a href="#使用markdown写作" class="headerlink" title="使用markdown写作"></a>使用markdown写作</h3><p>Octopress使用markdown语法。接触markdown语法是在github项目的README页面上，还有<a href="http://stackoverflow.com/">StackOverflow</a>里发帖用的也是markdown。刚开始觉得又是另一种wiki语法，但慢慢习惯了发现很好用：语法不太复杂，常用的格式不难记住；基本上常用的格式都覆盖了，实在不行还可以直接写HTML；原始文本的阅读性很好，不像HTML没法直接看；排版容易，文本编辑器就可以，而HTML的WYSIWYG编辑器生成的内容经常格式错乱需要手工再编辑。</p>
<h3 id="访问速度提高"><a href="#访问速度提高" class="headerlink" title="访问速度提高"></a>访问速度提高</h3><p>原来在GAE上的blog因为访问量少，服务进程闲置一段时间就会关闭，新请求进来要实例化新服务进程。我用的是PlayFramework，每次初始化都要等上十来秒左右，因此打开首个页面一定要等，体验很不好。</p>
<p>Octopress是在本地生成HTML页面后静态发布，速度自然不慢。不过缺省页面模版有些引用的资源下载速度不快，也有些可能被墙了，影响页面加载时间，下一步需要优化一下。</p>
<h3 id="版本管理与备份"><a href="#版本管理与备份" class="headerlink" title="版本管理与备份"></a>版本管理与备份</h3><p>Octopress最好用的特性就是跟github集成，发布到github上。整个blog就是一个git project，天然就有版本管理了。放在github上，我也不需要考虑备份问题了。</p>
<h3 id="目前没有被墙"><a href="#目前没有被墙" class="headerlink" title="目前没有被墙"></a>目前没有被墙</h3><p>目前github是可以直接访问的，因此可以方便大陆读者。不过这个是最次要的原因了，因为作为一个优秀的网络服务，github说不定哪天就被GFW给认证了。另外，前面说过页面里面嵌入的某些资源是被墙的，我还没有测试过对访问会带来什么影响。</p>
<h2 id="搬迁过程"><a href="#搬迁过程" class="headerlink" title="搬迁过程"></a>搬迁过程</h2><p>Octopress的搭建不算难，需要安装ruby和一些gem，按照文档指导，再Google一下就能搞掂。按照文档做了一些配置，也没什么问题。缺省不支持tag，找了两个<a href="https://github.com/robbyedwards/octopress-tag-pages">插件</a>装上去。模版和theme都用缺省的，稍微改了一点点，反正不在乎有没有个性了，我自己做也不一定好看，以后再说吧。缺省style显示不出表格，也需要改一点css。网上的资料不少，遇到问题Google一下大都能找到答案。</p>
<p>然后就是旧文章的迁移了，我原来的blog能够将所有数据用json格式导出，现在就要将它转换成新系统的文件格式；原来的文章正文是HTML，需要转换成markdown语法。不懂ruby，于是找了个python写的转换工具<a href="http://www.aaronsw.com/2002/html2text/">html2txt</a>，自己再写点脚本就好了。</p>
<p>问题还是有一些的：</p>
<p>Post的时间很奇怪：如果精确到秒，Octopress(其实是Jekyll)会认为这是UTC时间，在generate的时候变换为本地时区，页面里的帖子时间就加了8个小时；如果不精确到秒，只是分钟，那它就会当做本地时间而不做变换。我都不知道这是by design还是bug，不懂ruby看了下代码不得要领。后来我就把时间全部都改成只保留到分钟，绕开这个问题算了。</p>
<p>Ruby不支持中文URL，因此有几个问题：</p>
<ol>
<li>文章URL不能是中文</li>
<li>tag URL不能是中文</li>
<li>文章中不能带有中文URL的链接。</li>
</ol>
<p>对于1，可以不用标题而只是用id来做post URL，但我觉得permalink还是用标题更cool一些，将中文翻译成英文好了。Google translate的API不公开了，本来想用Bing translate的API，但它要用OAuth2认证，我嫌要写太多代码了，后来找到有道翻译的API，效果还行。</p>
<p>对于2，因为tag的URL与显示是一致的，不能象post permalink那样做。网上的一些解决方法都比较复杂，不能保证日后升级兼容性，我干脆全部用英文做tag算了。</p>
<p>对于3，搜索了一遍旧文章，只有一个链接是中文的，而且已经失效了，故此也不需要花功夫了。</p>
<p>最后，就是还需要人工去check一遍老文章，看看自动转换的格式有没有问题，顺便回顾一下以前写的东西，有需要修改补充的就更新一下。</p>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>软件团队工作空间再设计</title>
    <url>/blog/2012/06/30/redesign-of-software-development-workspace/</url>
    <content><![CDATA[<p>软件团队的办公室空间可以分为三大类：团队工作空间，会议空间，公共区域。</p>
<p>敏捷团队在工作过程中需要有比较多沟通，团队工作空间需要为此准备必要的设施，例如带有白板的讨论区域，这样就不需要讨论一些事情都要跑很远找会议室；供张贴东西的墙面；公共信息显示屏，显示CI状态之类。</p>
<p>每个人的座位当然是越宽敞越好，即使条件限制，最低限度也需要保证可以增加一个人并排坐一起结对编程或讨论问题。因此应该用长条型的桌子，而不是曲尺型的桌子。</p>
<p>不同团队之间的空间有一定的隔离，减少相互影响，因为团队内的讨论对他人是噪音。并且，空间的尺度对心理也有影响，需要合适的尺度，过大的大厅一排排整齐排列的桌子的心理效果不好。</p>
<p>将公共区域，例如休息区、茶水间、打印机等，放在各个区域空间的交汇点，一方面是方便各个区域的人的到达，另外是形成汇聚点，成为人们的交流场所。公司里面需要创造让不同团队成员见面交流的机会。公共区域特别应该是开放性的，不带有物理边界，才能彰显公共属性，例如茶水间休息区与走廊不应该设墙，让它们融合起来，这样大家路过的时候就能够打个招呼聊上几句。休息家具款式可以多样化，颜色也可选择鲜明多彩的，让空间生动有活力。</p>
<p>其实不仅是公共区域，团队区域之间也应该是柔性边界。柔性边界会鼓励人们进入不同的区域，在软件公司里并没有什么理由要为员工进入一个普通区域造成障碍。人从一个大厅进入另一个大厅，心理不会有异样感，但如果要穿过一个门进入一个坐了人的封闭的房间，那他必须是有专门目的才会这样做。</p>
<p>会议室相对团队空间来说，私密性会强一些。在软件公司里开会，白板是很重要的，会议室的白板（或者用玻璃）的面积应该尽量的大，越大越好，画不下要擦掉影响思路，有可能的话将整面墙都做白版。会议室面积小，密闭空间的压抑感会特别严重，用玻璃做墙面可以改善空间感。由于团队工作空间是开放性的，需要多留一些小会议室(quite room)，或者半开放小隔间作为不受干扰的环境来临时使用。</p>
<p>人喜欢在窗户旁边工作：与外界空间的连通感，扩大心理空间，不会有幽闭压抑感；自然采光与通风。因此有窗的空间应该留作给人长时间活动的空间，而不是用作偶然才有人使用的用途，如果用作储物、机房就更浪费了。</p>
<p><em>后记：</em></p>
<p><em>差不多两年前在荷兰工作的时候，对于欧洲的办公环境深有感触，回到国内后就有了这些想法，不过一直没有动笔写下来。期望在国内有类似欧洲的环境在目前显然是不现实的，但如果是在一开始设计办公环境的时候考虑更多人的因素，其实在不增加成本的情况下也能有所改善。最重要的是观念。</em></p>
<p><em>另外还有更早的一篇 <a href="/blog/2006/05/12/Each-have-independent-office-with-the-Windows/" title="每人都有带窗户的独立办公室">每人都有带窗户的独立办公室</a>，是在瑞典工作的时候写的。</em></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Idea</tag>
        <tag>Architecture</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring bean reference injection definition by external configuration</title>
    <url>/blog/2012/07/07/spring-bean-reference-injection-definition-by-external-configuration/</url>
    <content><![CDATA[<p>当使用 Spring 作为 IoC framework 的时候，有时会利用 property placeholder 来将bean的注入属性做成可配置化。但是，一般很少会将 reference bean id 也用 property placeholder 代替，有人甚至以为这是不允许的。</p>
<p>利用Spring Framework的property placeholder，将bean依赖关系配置抽离Spring XML文件，就能在产品发布部署后，通过配置选项来选定不同的实现，可用于集成接口、特定业务逻辑打开关闭等。</p>
<p><a href="http://www.oodesign.com/adapter-pattern.html">Adaptor pattern</a> is widely used at the point where our product integrates with external system. Product will provide several adapters to adapt to different external system interface.<br>We deliver our product in uniform installation package for all customers. A mechanism is required to configure which adapter to be used after system is installed.</p>
<p><a href="http://www.oodesign.com/factory-pattern.html">Factory pattern</a> can be used to create the specific adapter by configuration property. But by this way we need to create factory for each kind of adapters.</p>
<p>Actually Spring Framework already supports it. With property placeholder, it is able to use placeholder in bean reference and resolve the bean name from properties. The bean definition XML file is not allowed to be modified when product is released, because it’s packaged in war&#x2F;ear. But properties can be modified as long as it’s store outside of the package, e.g. on file system or in configuration management (extend the PropertyPlaceholderConfigurer class).</p>
<p>Here is a sample code snippet:</p>
<script src="//gist.github.com/2934603.js"></script>]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>SpringFramework</tag>
      </tags>
  </entry>
  <entry>
    <title>《简约至上》读书笔记</title>
    <url>/blog/2012/07/14/simple-first/</url>
    <content><![CDATA[<p><a href="http://book.douban.com/subject/5394309/">简约至上</a>，原作名为 Simple and Usable Web,Mobile,and Interaction Design，不错的关于交互设计的书籍。</p>
<p><img src="/blog/2012/07/14/simple-first/mindmap.png"></p>
]]></content>
      <tags>
        <tag>UX</tag>
        <tag>Reading</tag>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>Xperia U 刷机</title>
    <url>/blog/2012/07/21/flashing-xperia-u/</url>
    <content><![CDATA[<p>昨天中午拿到国行 <a href="http://www.sonymobile.com/global-en/products/phones/xperia-u/">Sony Xperia U</a> (ST25i) 手机，开机试了一下，索尼(原来的索尼爱立信)在Android 2.3基础上的定制系统做得还可以，但大陆行货里好多功能都被阉割得不成样子。Google系列的任何东西都去掉了就不用说了，很奇怪的是居然系统里没有自带任何应用市场，国内的山寨市场也没有。可以想象一个不熟悉IT的用户买到手机后就会局限在预装的那几个应用，连升级都没有途径。比较一下SonyMobile英文与中文网站对这款手机的介绍，就会发现中文产品介绍缩水不少，好多卖点都没有了。</p>
<p>这样的智能手机简直就是残废，于是下班后就开始研究怎么刷机。先是在国内的一些论坛上搜索，但国内论坛真是很没有营养，里面的信息的价值很低。Android hacker的大本营在XDA，相关问题还是要到<a href="http://www.xda-developers.com/">XDA论坛</a>找靠谱。</p>
<p>关于Xperia系列刷机需要了解的基础知识，这篇 <a href="http://forum.xda-developers.com/showthread.php?t=1526866">All that u need to know before u begin</a> 讲得比较清楚。</p>
<p>无论要刷什么，前提条件是先将 bootloader 解锁。关于解锁的教程很多，SonyMobile网站上就有详细步骤，XDA上的 <a href="http://forum.xda-developers.com/showthread.php?t=1527159">Xperia S&#x2F;P&#x2F;U&#x2F;Sola Bootloader Unlocking &amp; Relocking</a> 附带了所需工具的下载。还有一个国产软件，号称是一键自动解锁。</p>
<p>但是，就在第一步，将手机boot到fastboot模式，就花了我好几个小时。按教程，手机在关机状态按着音量+键的同时将USB连接上电脑，就会进入fastboot模式，并且亮起蓝灯。但是无论我怎么反复重试，手机都不会亮起蓝灯，电脑上弹出对话框提示安装驱动程序，但当我选择操作时它又说USB设备已经断开，显示这样的错误信息：s1boot fastboot device unplugged。网上搜索，有人说是驱动没有装好的原因，最后还是从XDA里找到了<a href="http://forum.xda-developers.com/showthread.php?t=1554632">解决方案</a>。原来，Xperia手机在进入fastboot模式时，会检测电脑是否已经装上了正确的驱动程序，如果没有，就会退出fastboot模式。而电脑端刚刚提示用户安装驱动，就发现手机已经关闭了连接，就取消了驱动的安装。这种问题可以用来做经典反面案例了。XDA帖子里的解决方法还是要拼手快：预先打开设备管理器，一插上手机后，里面会出现s1boot这个设备，赶紧鼠标右键选择升级驱动，升级驱动的对话框打开后，即使设备断开了还是可以继续进行驱动程序的安装。终于看到传说中的蓝灯了，原来是在下面透明发光条发出很亮的蓝光，我之前还一直以为是右上角摄像头旁边的小灯。</p>
<p>接下来就非常顺利了，解锁bootloader后，用fastboot安装了ROM和Kernel。我都没有另外用其他工具了，感觉fastboot用起来就很简单，很多人不喜欢可能是因为命令行操作吧。关于fastboot使用，推荐看cyanogenmod的wiki里的<a href="http://wiki.cyanogenmod.com/wiki/Fastboot">介绍</a>。</p>
<p>我刷的ROM是<a href="http://forum.xda-developers.com/showthread.php?t=1684062">KA02 Xperia SSpeed</a>， 还是Android 2.3.7，Sony还没有为Xperia U 提供Android 4.0 ICS。Kernel是<a href="http://forum.xda-developers.com/showthread.php?t=1688147">Advanced Stock Kernel</a>。刷完开机，见到熟悉Google账号绑定，然后Gmail、通信录、日历同步、Google Play都回来了。Root也有了，收工。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Xperia U 上手</title>
    <url>/blog/2012/07/22/xperia-u/</url>
    <content><![CDATA[<img src="/blog/attachments/2012/7/xperia-u.png" class="">

<p><a href="http://en.wikipedia.org/wiki/Nexus_One">Nexus One</a> 手机用了两年多，升过几次系统，到现在用起来还是挺满意，但唯一的问题是内部存储(ROM)太小了，只有512M，留给安装应用的空间不足200M，而现在的应用又越来越大，已经到了当想装新应用必须先卸载其他一些的地步了。尝试过A2SD，效果不大理想，卡顿感比较明显，也可能因为我的TF卡速度不够高。</p>
<p>现在换的这个 <a href="http://www.sonymobile.com/global-en/products/phones/xperia-u/">Sony Xperia U</a> 属于 <a href="http://www.xperiablog.net/2012/03/07/xperia-nxt-specifications-compared-%E2%80%93-xperia-p-vs-xperia-s-vs-xperia-u/">Xperia NXT</a> 系列，称为Sony下一代智能手机，包括 Xperia S, Xperia P 和 Xperia U，档次由高至低。Xperia U 在配置上其实跟 Nexus One 变化不算大（<a href="http://geekaphone.com/compare/Sony-Xperia-U-vs-HTC-Nexus-One">对比</a>），主要区别是CPU双核(频率相同)，内部存储容量4G，而其他的如屏幕之类都不相上下。不过，两个产品发布时间差了2年，Nexus One在当年算是旗舰级别，而现在Xperia U只是中端机型，在现在的手机大混战中一点都不起眼。这也正符合我目前的需要，相当于一个内存升级版的Nexus One。之前考虑过人称Google三儿子的Galaxy Nexus，样样都满意，不过有些特性我倒用不着，例如4.6寸大屏幕。</p>
<p>玩了几天，跟我的期望比较一致，总体满意。有些经验记录下来。</p>
<h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><p>参考前一篇 <a href="/blog/2012/07/21/flashing-xperia-u/" title="Xperia U 刷机">Xperia U 刷机</a>。</p>
<h2 id="透明发光条"><a href="#透明发光条" class="headerlink" title="透明发光条"></a>透明发光条</h2><p>在屏幕下方软按键处有一条称为 illuminating transparent band 的发光条，晚上环境光线暗的时候，那条光带有点刺眼，干脆不要亮好了，找到一个应用 <a href="https://play.google.com/store/apps/details?id=com.haxor">Screen Filter</a> 可以将soft-key backlight关闭。另外，在 Google Play 搜索“illumination bar”可以找到一些应用能够将这个发光条用作未接来电、未读短信、邮件的提醒灯。</p>
<h2 id="USB连接电脑"><a href="#USB连接电脑" class="headerlink" title="USB连接电脑"></a>USB连接电脑</h2><p>Xperia NXT 系列的USB连接采用<a href="http://en.wikipedia.org/wiki/Media_Transfer_Protocol">MTP</a> (Media Transfer Protocol) 模式，而不是通常的MSC(Mass Storage)模式。在Windows里，USB连上后，会显示成一个没有盘符的设备，可以在explorer中访问，但在Mac OS X中，就根本看不到。XDA上有人做了个应用<a href="http://forum.xda-developers.com/showthread.php?t=1606940">SDCARD Mounter</a>，装在手机上后（需要root），能够将Xperia S&#x2F;U&#x2F;P的内部存储空间用MSC模式mount起来，这样在电脑上就能够像U盘一样访问了。</p>
<p>如果手机没有root，那么Mac OS X还可以安装<a href="http://www.android.com/filetransfer/">Android File Transfer</a>来访问手机存储，不过我没有试过是否可行。重要的是，Android File Transfer只能在它的窗口中看到手机的文件，而不是挂载在文件系统上，在finder和shell中都访问不了，这是因为MTP模式下文件系统并不是由电脑端管理，而是在设备端管理。我需要用script来控制传输文件，因此只能用MSC模式。</p>
<h2 id="DLNA"><a href="#DLNA" class="headerlink" title="DLNA"></a>DLNA</h2><p>用Xperia自带应用播放音乐、视频或者浏览照片时，菜单里有一个选项叫做”Play on device”，说明是 find &amp; connect to DLNA device。</p>
<p>DLNA是什么呢，上网查了一通，原来这是一个类似Apple的AirPlay的规范，通过网络在设备之间共享数字媒体播放。准确的说，<a href="http://en.wikipedia.org/wiki/Digital_Living_Network_Alliance">DLNA</a>的功能集比AirPlay要广很多，定义了 media server，media player，media renderer，media controller 等多种设备（实际上一种设备可以身兼多职），现在应用广泛的有两种模式：</p>
<ul>
<li><p><strong>播放媒体服务器上的音频视频（pull）</strong>。在一个设备(media player)上，浏览和播放另外一台设备(media server)上的资源。这时，用户是在播放设备上进行操作的，例如在手机上播放电脑里保存的视频。</p>
</li>
<li><p><strong>将媒体推送到另外一个设备远程播放（push）</strong>。如将在手机上正在看的视频推送到大电视上播放，这时手机是media controller，电视机是media renderer，media server看情况，可能是手机也可能是其他设备，要看媒体源在哪里。跟另一种模式的区别是，用户并不是在播放设备上进行操作的，手上的设备就像一个遥控器。这也是AirPlay能做的事情。</p>
</li>
</ul>
<p>Xperia U 的 play on device 就是push模式。但我家里没有支持DLNA的电视机，有没有办法推送到电脑，用电脑的显示器来播放呢？如果是Win7就很好办，Win7带的Media Player内置支持DLNA，将媒体库菜单里的“允许远程控制我的播放器”选中就可以了。但是我的电脑用的是Mac OS X，这种办法走不通。后来发现大名鼎鼎的<a href="http://xbmc.org/">XBMC</a>也支持 DLNA renderer 功能，在network setting里面将 Allow control of XBMC via UPnP 选上，手机 play on device 菜单里果然就出现了XBMC可供选择。另外，还惊喜的发现 XBMC 还有 Allow XBMC to receive AirPlay content 选项，测试过能够将iPad的视频推送到XBMC中播放。太好了，那就可以用 Thunderbolt Display 来看了。</p>
<p>Xperia U 还可以充当 DLNA media server，试过在电脑上用<a href="http://www.videolan.org/vlc/">VLC</a>可以浏览手机上的所有视频、音乐、照片。需要在手机的 Connected devices 应用中enable。</p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><ul>
<li><a href="/blog/2010/05/11/Nexus-One-/" title="Nexus One 到手，以及刷机过程">Nexus One 到手，以及刷机过程</a></li>
</ul>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>apigee</title>
    <url>/blog/2012/07/31/apigee/</url>
    <content><![CDATA[<p><a href="http://apigee.com/">Apigee</a> is hot recently. It has raised $20 million in its fifth round of funding. What magic it has? I spent some time today to have a look at it.</p>
<p>Apigee is an API management platform and services company. It benefits both API providers and developers who build their apps with APIs.</p>
<h2 id="Apigee-Enterprise"><a href="#Apigee-Enterprise" class="headerlink" title="Apigee Enterprise"></a>Apigee Enterprise</h2><p>Apigee Enterprise product is an API proxy plus developer portal.</p>
<p>Usually when an organization open its internal services or data to external, it develops the API and exposure it, with necessary document published. Application developers learn the API by reading the document, and then code to use the API.</p>
<img src="/blog/attachments/2012/7/api.png" class="">

<p>Apigee helps API provider by providing API management, security, analytics etc. It provides developer portal for API provider to management developer onboarding, and also help developer to learn the API by playing with it.</p>
<img src="/blog/attachments/2012/7/api_with_apigee.png" class="">


<h2 id="Console-To-Go"><a href="#Console-To-Go" class="headerlink" title="Console To-Go"></a>Console To-Go</h2><p>Apigee Enterprise features are not available to free subscriber of Apigee, excepts the console that let developer learn an API by playing with it. Apigee opens this service to free subscriber as Console To-Go.</p>
<p>I try to create my own Console To-Go:</p>
<p>Create an API on Google Application Engine: <a href="http://api-playground.appspot.com/time">time API</a> , it simply return the current time since epoch.</p>
<p>Write the WADL for the API.</p>
<script src="//gist.github.com/3214300.js"></script>

<p>Create a new console on <a href="https://apigee.com/togo">Apigee Console To-Go</a>, upload the WADL file for my playground API.</p>
<p>That’s all I need to do. Now the console is ready and anyone can try my time API on the console. This is a snapshot of API request-response:</p>
<iframe src="https://snap.apigee.com/NRNmNb" width="800" height="300" frameborder="0" scrolling="no"></iframe>

<h2 id="Usergrid"><a href="#Usergrid" class="headerlink" title="Usergrid"></a>Usergrid</h2><p>A cloud-based <strong>data service</strong> for application developer, especially for mobile application developer. It provides a core set of <em>commonly used social media application objects</em>, including a rich user model, as well as the ability to create new objects. </p>
<p>REST API is provided, with data model in JSON.  </p>
<p>Features includes:</p>
<ul>
<li><p><em>User model</em>. Organize users into groups, teams or other structures. User authentication via Facebook, Twitter or other OAuth services. User profile synchronization.</p>
</li>
<li><p><em>Collections</em>. Any type of application data in JSON. Data sharing between users and applications.</p>
</li>
<li><p><em>Messages and activities</em>. Automates user interaction e.g. status updates, check-ins, comments in the form of activity streams. Support messaging (application internal) and notifications by delivering activities to connected users.</p>
</li>
<li><p><em>Data analytics</em>. Log events generated by application. Store, search and analyze at any level of scale.</p>
</li>
</ul>
]]></content>
      <tags>
        <tag>Web</tag>
      </tags>
  </entry>
  <entry>
    <title>Understanding WebLogic WorkManager</title>
    <url>/blog/2012/08/10/understanding-weblogic-workmanager/</url>
    <content><![CDATA[<p>Since WebLogic Server 9.0, new concepts for workload management is introduced. WorkManager replaces execute queue as defined in earlier releases.</p>
<p>All WorkManagers share a common thread pool and a priority-based queue. The size of the thread pool is determined automatically by the kernel and resized as needed.  Priority of the requests is dynamic and computed internally to meet the stated goals. </p>
<p>The thread pool is so-called self-tunning. It monitors the overall throughput every two seconds and uses the collected data to determine if thread count needs to change. Present thread count, the measured throughput, and the past history is taken into account by the algorithm to determine if the thread count needs to increase or decrease, and new threads are automatically added to the pool or removed, as needed.</p>
<p>It’s no longer have to (and is unable to) configure thread counts on a WorkManager nor the common thread pool. However, it’s possible to affect how server prioritizes work and allocates threads by parameters defined in WorkManager. Each WorkManager can contain following types of components:</p>
<ul>
<li>Request class <ul>
<li>Fair-share</li>
<li>Response-time goal</li>
<li>Context based</li>
</ul>
</li>
<li>Constraints<ul>
<li>Minimum threads constraint</li>
<li>Maximum threads constraint</li>
<li>Capacity</li>
</ul>
</li>
</ul>
<p>Request class affects how requests are prioritized. Fair-share request class changes thread usage weight of a WorkManage, which is by default 50. Response-time goal request class specifies the response-time goal in milliseconds. Context-based request class is a compound request class that provides a mapping between the request context and the above two request classes. With context-based request class, it’s possible to specify different request classes for the same servlet invocation depending on the user associated with the invocation.</p>
<p>A constraint defines minimum and maximum numbers of threads allocated to execute requests and the total number of requests that can be queued or executing before WebLogic Server begins rejecting requests. Constraint is referenced in WorkManager by constraint name. So a constraint can be shared by several WorkManagers and set the common limit.</p>
<p>Minimum threads constraint makes sure that during periods of high workloads, there would still be a certain number of threads from the self-tuning thread pool available to process work requests for all work managers that reference the minimum threads constraint. Using the minimum threads constraint could result in some side-effects. Users should consider adding a minimum threads constraint to a work manager configuration when it is critical that progress must be made for an application even when the WLS server is under very heavy load, such as work that would have resulted in server-to-server deadlock if not being processed promptly. It is not to be used as a mean of prioritizing workload among different work managers. </p>
<p>The maximum threads constraint limits the number of threads in the self-tuning thread pool that can be used for executing work for all work managers that references the same constraint. The maximum threads constraint is not designed as a mean to prioritize workloads among different work managers. It is most useful when there are other known limitations where a hard upper limit should be put on the number of threads that should be assigned for processing work requests, and that allocating more threads for processing the workload would not increase the overall throughput.</p>
<p>A typical use case of maximum threads constraint is to take a data source connection pool size as the max constraint.</p>
<pre><code>&lt;max-threads-constraint&gt;
  &lt;name&gt;MyConstraint&lt;/name&gt;
  &lt;pool-name&gt;MyDataSource&lt;/pool-name&gt;
&lt;/max-threads-constraint&gt;
</code></pre>
<p>The capacity constraint defines the maximum number of requests that can be queued (waiting for thread) or are executing. Overload action, e.g. refuse with HTTP response code 503, is taken after the capacity is reached. </p>
<p>I draw a picture to show the threadpool and queue. Requests dispatched with different WorkManager are in different color.</p>
<img src="/blog/attachments/2012/8/workmanager.jpg" class="">

<ul>
<li>Self-tuning thread pool thread allocation ratio amoung WorkManagers is affected by request class. </li>
<li>Minimum threads constraint limits: never queue request, unless <code>executing &gt;= min-threads-constraint.count</code></li>
<li>Maximum threads constraint limits: <code>executing &lt;= max-threads-constraint.count</code></li>
<li>capacity contraint limits: <code>executing + queued &lt;= capacity.count</code></li>
</ul>
<p>WorkManager can be created for a specific application or module (ejb&#x2F;war), which is called application-scoped WorkManager. If there is no special requirement on individual application or module, you can create global Work Managers that are available to all applications and modules. An application uses a globally-defined Work Manager as a template. Each application creates its own instance, this means that each application has its own default WorkManager that is not shared with other applications. WebLogic Server provides a built-in default Work Manager which may be sufficient for most application requirements.</p>
<p>Reference:</p>
<ul>
<li><a href="http://www.oracle.com/technetwork/articles/entarch/workload-management-088692.html">Workload Management in WebLogic Server 9.0</a></li>
<li><a href="https://blogs.oracle.com/WebLogicServer/entry/threads_constraints_in_work_ma">Threads Constraints in Work Managers</a></li>
<li><a href="http://docs.oracle.com/cd/E15051_01/wls/docs103/config_wls/self_tuned.html">Using Work Managers to Optimize Scheduled Work</a></li>
</ul>
]]></content>
      <tags>
        <tag>WebLogic</tag>
        <tag>AppServer</tag>
      </tags>
  </entry>
  <entry>
    <title>广州跑步路线: 麓湖</title>
    <url>/blog/2012/09/09/running-route-luhu/</url>
    <content><![CDATA[<img src="/blog/attachments/2012/9/luhu_sat.jpg" class="">

<p>麓湖的跑步路线是环绕着湖一周的路。路面包括木栈道、柏油车道、砖铺人行道，麓湖路属于绿道系统的部分有木栈道，其余环湖路线的人行道很窄，可以跑到车道边上，但有来车时需要注意安全。</p>
<p>麓湖是广州为数不多的大湖泊，比一般公园的湖要大很多，周边都是山头绿地，环境和景色都不错。可惜环湖的车道虽然不是主干道，但来往车辆还是不少，汽车尾气导致空气还是一般。</p>
<p>虽然周边环境偏僻些，但白天游人不少，路上也不时会见到跑友，安全不成问题。我没有晚上去跑过，估计会比较僻静，安全上需要小心。附近麓景路、麓湖路都有公交车站。</p>
<p>环湖一圈约3.5km，总上升59m，基本上不算多大起伏。</p>
<img src="/blog/attachments/2012/9/luhu_elevation.jpg" class="">

<p>总体来说是不错的跑步路线，推荐。</p>
<img src="/blog/attachments/2012/9/luhu_map.jpg" class="">

<p>其他跑步路线介绍：<a href="/blog/2012/09/09/running-route/" title="广州跑步路线：索引">广州跑步路线：索引</a></p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>广州跑步路线：索引</title>
    <url>/blog/2012/09/09/running-route/</url>
    <content><![CDATA[<p>这一系列博文记录我跑过的路线。</p>
<ul>
<li><a href="/blog/2012/09/09/running-route-luhu/" title="广州跑步路线: 麓湖">广州跑步路线: 麓湖</a></li>
<li><a href="/blog/2012/09/10/running-route-ersha/" title="广州跑步路线：二沙岛">广州跑步路线：二沙岛</a></li>
</ul>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>广州跑步路线：二沙岛</title>
    <url>/blog/2012/09/10/running-route-ersha/</url>
    <content><![CDATA[<img src="/blog/attachments/2012/9/ersha_sat.jpg" class="">

<p>环岛一周约4.4km，其实只能算环半岛，因为岛西面一大段的沿江堤岸是公众不能进入的。车道大部分是沥青路面，晴澜路段水泥路面，人行道是铺石路面。环岛道路汽车不多，在注意安全的前提下可以靠边跑车道。</p>
<p>虽然算不上有什么景观，但二沙岛上的都是别墅和高级会所，环境幽静，江边视野开阔，跑起来挺舒服。</p>
<p>晚上晴波路音乐厅美术馆一段江边比较热闹点，有游客、玩单车和玩音乐的，其他路段都比较僻静，特别的北面晴澜路段。但每隔一段距离就有保安坐在路旁，毕竟这里是富人区，治安有保障。</p>
<p>岛中央是几个大草坪，上面有橡胶铺设的步道，跑步也不错，但就是拐弯多，断断续续，总长度也不够长。</p>
<p>岛中央大通路&#x2F;烟雨路有公交车途经。往东过广州大桥可以接着跑珠江新城临江大道，往西沿大通路过桥也可以接着沿江边跑，因此二沙岛可以作为沿珠江跑路线的一段。</p>
<p>总体来说也是可以推荐的跑步路线。</p>
<img src="/blog/attachments/2012/9/ersha_map.jpg" class="">

<p>其他跑步路线介绍：<a href="/blog/2012/09/09/running-route/" title="广州跑步路线：索引">广州跑步路线：索引</a></p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>色彩管理 (2)</title>
    <url>/blog/2012/09/15/color-management-2/</url>
    <content><![CDATA[<p>色彩管理的<a href="/blog/2004/11/12/Color-management-1/" title="色彩管理 (1)">第一篇</a>是在2004年写的，当时本来想连续写，可写了一篇就没有下文了。现在再来继续色彩的话题，不过这次的主题其实不算色彩管理，而是看看色彩的本质是什么。</p>
<p>颜色是什么？学物理的时候说太阳光通过菱镜会分离成彩色的光带，不同颜色的光的波长是不一样的。这给我们一个印象：颜色就是可见光波长这个物理量的反映。但是问题来了，白色对应什么波长的光？为什么红光和绿光混合在一起变成了黄光，难道混合后波长产生变化了？原因在于，颜色并不是某一個物理量的直接反映，而是人对光线的心理反映，称之为色觉。</p>
<img src="/blog/attachments/2012/9/eye.jpg" class="right"> 

<p>人眼有三种色彩感受器（视锥细胞），每种感受器可以感应不同波长范围的光，分别的感受峰值波长为：420nm，534nm，564nm，差不多相当于蓝、绿、红三色光的波长。对于某一种光谱，三种感受器得到三组信号送往大脑，大脑根据这三组信号值的不同组合感知到不同的色彩。</p>
<p>现实世界中的光线通常都不会是单一波长的（只有激光光源产生的才是单一波长的光吧，要么是经过分光镜得到的），而是不同波长组合的混合光。视觉感受器并不能区分这些光谱，反正各种感受器只对自己能感应的波长范围内的光作出反应，最后大脑拿到的就是三组信号而已。不同的光谱组合的光线，可能对三种视觉感受器产生的刺激恰好是一样的，这样大脑就会将它们感受为同一种颜色，术语称为“异谱同色”。例如波长600nm左右的光线人感受是黄色，而波长540nm绿光和700nm红光一定强度比例的混合，人感觉到的也是黄色。</p>
<p>我曾经在之乎问过一个问题：人眼若多一种新的视椎细胞可感应可见光范围内的另外一个波长的光，人看到的色彩会有什么变化吗？看到的颜色更多？ 后来我想明白了，是会看到更多的颜色的，准确的说，是能够分辨出更多不同的颜色。在只有三种感受器时，有些不同波长组合的混合光产生的刺激是一样的，大脑区分不出，将它们当作同样的颜色，但假若增加另一种波长的感受器后，这个感受器感应到的刺激不同，就能够分辨为不同色彩了。至于这个颜色是什么？我们不可能知道，因为颜色仅仅是一种心理反应。如此类推，不同动物看到的色彩也是不一样的，因为不同动物眼睛的视锥细胞的波长响应曲线不同，而且数量也不一定一样。假如有某种外星人有四种甚至更多的色彩感受器，那他们会认为地球人全是色盲，地球人到他们的世界里可能连分辨交通灯都有问题——如果他们还用交通灯。另外，所谓三原色，也是针对人而言的。</p>
<p>既然色彩只是种心理反应（感觉），那为了准确描述色彩和进行分析，就需要建立色彩模型。根据关注的角度不同，不同的研究者拿出了不同的色彩模型，例如孟塞尔颜色立体模型、CIE L* a* b* 模型。其中 CIE XYZ 模型应该是最能反映人的颜色视觉的，因为它的制定就是通过大量实验来测定人对三种特定波长光线S、M、L（约对应于红绿蓝）的刺激值X，Y，Z。实验方式是让人同时观察目标色光线和SML三组标准光的混合光，调节S&#x2F;M&#x2F;L的光强，使得人眼感觉混合光和目标色光线的颜色完全一样，从而得出目标色的XYZ值。CIE XYZ色彩空间是色彩管理的基础。</p>
<p>CIE XYZ定义了一个三维空间，展现起来不如二维图形直观。经常用来表示色彩空间大小的二维马蹄型图称为CIE xy色度图，如下图。它的纵横座标xy是根据XYZ推导出来的，x&#x3D;X&#x2F;(X+Y+Z), y&#x3D;Y&#x2F;(X+Y+Z), z&#x3D;Z&#x2F;(X+Y+Z), x+y+z&#x3D;1。彩色的马蹄形范围表示人眼可见的全部色彩范围。在数码相机和电脑显示中使用的RGB色彩空间在CIE xy色度图中反映为三角形范围，三个顶点分别为R&#x2F;G&#x2F;B三原色。</p>
<img src="/blog/attachments/2012/9/gamut.jpg" class="">

<p>不考虑印刷，摄影爱好者一般会接触到的色彩空间也就是AdobeRGB和sRGB。从图中可见，AdobeRGB的色域比sRGB广，特别是在蓝绿色系方面，AdobeRGB能够表现的色彩比sRGB丰富很多。我查找不到资料描述各种数码相机的感光元件能够记录下来的色域有多大，但一般的说法是一般数码单反所能记录的色彩范围都比sRGB广，接近或大于AdobeRGB。因此，专业的摄影都会选择AdobeRGB色彩空间来保存图像文档。但问题是，我们的显示器并不能展现这么广的色域，民用型号通常都只能再现sRGB色彩空间或更小一点（广色域显示器会比sRGB大，但一般还是达不到AdobeRGB），因此照片中记录的部分颜色是无法在显示器上原汁原味的再现出来的（这里先不考虑显示器没有校准导致偏色问题），超出设备色彩空间的颜色只能用接近的来替换，例如翠绿色的海水就没有那么漂亮了。另外一个问题是有些软件，例如不是最新版本的浏览器，是不支持色彩管理的，它不会将照片的色彩空间映射到显示器的色彩空间以保持在可显示范围内的颜色一致，而是将照片中的RGB值当作设备色彩空间的值来直接显示。如果照片用的是sRGB还好，因为显示器本身大致符合sRGB，颜色偏差不会太多，但若照片是用色域更广的AdobeRGB的，色彩偏差就严重了。所以数码相机的说明书上一般会建议如果照片仅在电脑上观看最好选择sRGB。</p>
<p>不过，数码相机的色彩空间设置仅仅是针对JPG格式的，如果用RAW格式，保存的是传感器得到的原始值，实际上是数码相机设备色彩空间，而不是任何标准色彩空间。当在电脑中用RAW处理软件打开时，会将照片由设备色彩空间映射到软件设定的工作空间。我用Apple Aperture打开Nikon的RAW，看到它是被标识为AdobeRGB色彩空间。用数码单反的话，最好还是选择RAW格式，因为记录的信息多，后期处理的余地就大很多。</p>
<p>See also:</p>
<p><a href="/2004/11/12/Color-management-1">色彩管理(1)</a></p>
]]></content>
      <tags>
        <tag>ImageProcessing</tag>
      </tags>
  </entry>
  <entry>
    <title>Android: 在應用中設定locale</title>
    <url>/blog/2012/10/06/change-locale-in-android-application/</url>
    <content><![CDATA[<p>近幾天把以前做的跑步步频训练软件 <a href="https://play.google.com/store/apps/details?id=leoliang.runningcadence">RunningCadence</a> 加上了多語言支持，可以在應用中設定界面以及語音播報所用的語言。</p>
<p>對多語言的支持，Android已經做得很完善，開發者只需要在應用中加入各種locale的資源文件。但是，應用只會使用系統全局設置的locale，而要在應用自己的設定中選擇locale，以及要讓設定立即生效，就需要開發者自己去實現了。</p>
<p>本來，一般應用並沒必要自己提供語言設定，用系統全局設定就好了。但這個 RunningCadence 使用了語音合成(TTS)功能，而一般手機上安裝的TTS引擎支持的語言都有限，如果TTS不支持系統locale的語言，那就聽不到聲音了，所以需要花力氣去搞這個應用內的語言選擇。</p>
<h2 id="讓應用啓動時使用自己設定的locale，而非系統locale"><a href="#讓應用啓動時使用自己設定的locale，而非系統locale" class="headerlink" title="讓應用啓動時使用自己設定的locale，而非系統locale"></a>讓應用啓動時使用自己設定的locale，而非系統locale</h2><p>開發應用時要爲不同locale準備不同的資源，在應用中通過 <a href="http://developer.android.com/reference/android/content/res/Resources.html">Resources</a> 類來加載資源，各個界面組件的構建都需要用到資源。而具體資源如何選擇是受 <a href="http://developer.android.com/reference/android/content/res/Configuration.html">Configuration</a> 影響的，Configuration帶有設備的硬件相關配置信息（如屏幕分辨率，屏幕方向）和系統全局配置信息（如locale），由系統底層框架提供。</p>
<p>應用啓動時，Configuration中的locale會被設置爲系統locale。應用若要使用自己的locale，就必須在創建界面之前，將Resources裏的Configuration更改。</p>
<p>這個更改在application的 onCreate() 裏面做最合適，對應用全局生效，因爲它在任何activity創建之前就執行了，不再需要在各個activity裏做任何事情。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">    setLocale();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setLocale</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> getLocaleFromPref();</span><br><span class="line">    Locale.setDefault(locale);</span><br><span class="line">    <span class="type">Configuration</span> <span class="variable">config</span> <span class="operator">=</span> getBaseContext().getResources().getConfiguration();</span><br><span class="line">    overwriteConfigurationLocale(config, locale);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">overwriteConfigurationLocale</span><span class="params">(Configuration config, Locale locale)</span> &#123;</span><br><span class="line">    config.locale = locale;</span><br><span class="line">    getBaseContext().getResources()</span><br><span class="line">            .updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>加了這段代碼後，應用啓動時就會根據 getLocaleFromPref() 返回的語言來顯示了，但是你會發現如果將手機屏幕轉一下，例如豎屏變爲橫屏，界面又會變回系統缺省語言，爲什麼呢？</p>
<p>系統底層框架會在configuration發生了變化時通知應用[^1]。對application是調用 Application.onConfigurationChanged() 方法。對activity的處理採用那種方式，就與manifest文件中&lt;Activity&gt;的 android:configChanges 屬性配置相關：</p>
<ul>
<li>如果發生的是configChanges中指定的事件，調用 Activity.onConfigurationChanged()，不重啓activity；</li>
<li>否則重啓activity。</li>
</ul>
<p>[^1]: 詳細機制見 <a href="http://developer.android.com/guide/topics/resources/runtime-changes.html">Handling Runtime Changes</a></p>
<p>屏幕的旋轉就是一種 runtime change，缺省情況下會觸發activity的重啓，也就是銷毀並重新創建activity[^2]，重新創建時使用的是新的Configuration，裏面帶的又是系統locale，因此就造成了界面變回系統缺省語言。</p>
<p>[^2]: 在 <a href="/blog/2010/12/16/Android-activity-lifecycle-in-UML-state-machine-diagram/" title="Android activity lifecycle in UML state machine diagram">Android activity lifecycle in UML state machine diagram</a> 文中的狀態圖可以見到configChanged引發的狀態遷移。</p>
<p>爲了避免這種情況，需要在Application的 onConfigurationChanged() 裏面也對Configuration做修改。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onConfigurationChanged</span><span class="params">(Configuration newConfig)</span> &#123;</span><br><span class="line">    <span class="type">Locale</span> <span class="variable">locale</span> <span class="operator">=</span> getLocaleFromPref();</span><br><span class="line">    Locale.setDefault(locale);</span><br><span class="line">    overwriteConfigurationLocale(newConfig, locale);</span><br><span class="line">    <span class="built_in">super</span>.onConfigurationChanged(newConfig);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>做了這些後，應用就能使用自己的locale設定，而不是系統locale了。完整代碼例子可以參考RunningCadence源碼 <a href="https://github.com/aleung/RunningCadence/blob/c658e00bd24a23bd95369bf6e3d87254776ae2cb/RunningCadence/src/leoliang/runningcadence/Application.java">Application.java</a>。</p>
<h2 id="讓應用preference中的locale設定修改立即生效"><a href="#讓應用preference中的locale設定修改立即生效" class="headerlink" title="讓應用preference中的locale設定修改立即生效"></a>讓應用preference中的locale設定修改立即生效</h2><p>應用通常會使用 Preference API 來構造用戶設定界面，在上一步完成後，用戶可以在應用preference裏設置locale，在應用重新啓動時會使用選定的locale。但是用戶在preference裏修改locale後是不會立即生效的，因爲修改沒有反映到 configuration 中去，而且對於已經存在的activity，界面組件都已經創建好了，界面上的文字不可能自動改變。</p>
<p>一種方案是讓整個應用重新啓動，所有資源都重新加載，所有界面都重新創建。我留意了一下，大部分提供應用內語言設定的應用都是這樣做的——在彈出對話框裏選擇語言並確認後，不會返回到設定頁面，而是顯示應用的入口界面——應用已經重啓了。在 RunningCadence 中，我不想用這種方法，因爲用戶體驗會不好——用戶在修改語言後，通常還要選擇另一個選項進行語音合成測試，看看TTS對新選擇的語言能否正常工作——如果應用重啓返回主界面，用戶就得再進入設定界面才能進行測試，一方面是操作麻煩了，另一方面界面無緣無故跳轉也會帶來困惑。</p>
<h3 id="在用戶修改設定後，更新Configuration"><a href="#在用戶修改設定後，更新Configuration" class="headerlink" title="在用戶修改設定後，更新Configuration"></a>在用戶修改設定後，更新Configuration</h3><p>更新Configuration的方法跟應用啓動時的做法一樣，可以重用 setLocale() 方法，問題是要能在合適的時機去調用。使用SharedPreference的修改通知機制可以做到這點。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PreferenceActivity</span> <span class="keyword">extends</span> <span class="title class_">android</span>.preference.PreferenceActivity <span class="keyword">implements</span></span><br><span class="line">        <span class="title class_">OnSharedPreferenceChangeListener</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onSharedPreferenceChanged</span><span class="params">(SharedPreferences sharedPreferences, String key)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (key.equals(<span class="string">&quot;pref_language&quot;</span>)) &#123;</span><br><span class="line">            ((Application) getApplication()).setLocale();</span><br><span class="line">            restartActivity();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        addPreferencesFromResource(R.xml.preferences);</span><br><span class="line">        getPreferenceScreen().getSharedPreferences().registerOnSharedPreferenceChangeListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onStop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onStop();</span><br><span class="line">        getPreferenceScreen().getSharedPreferences().unregisterOnSharedPreferenceChangeListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>要注意這個listener的寫法，如果按照通常Android程序風格，使用匿名內部類來實現，就會發生詭異的問題，總是不會被回調。這個問題花了我好長時間，誤打誤撞解決了也沒明白什麼回事，寫這篇文章時才看見StackOverflow上有這個問題的<a href="http://stackoverflow.com/a/3104265/94148">根源解答</a>。</p>
<h3 id="將已經存在的界面按照新locale重新顯示"><a href="#將已經存在的界面按照新locale重新顯示" class="headerlink" title="將已經存在的界面按照新locale重新顯示"></a>將已經存在的界面按照新locale重新顯示</h3><p>先分析哪些activity是需要重新顯示的，這需要對應用的 <a href="http://developer.android.com/guide/components/tasks-and-back-stack.html">task stack</a> 結構有一個審視。要知道在locale更改的時刻，哪些activity還在生存着，會在後續操作中重新變爲可見狀態，這些activity的界面需要重建。在RunningCadence裏比較簡單，就是PreferenceActivity本身和調用它的主activity。</p>
<p>要讓activity的界面按新locale重新顯示，最簡單的方法應該就是讓它重啓，這比起對每個界面元件都用重新加載資源去重設要簡單得多。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">restartActivity</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">    finish();</span><br><span class="line">    startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>PreferenceActivity的重啓是在OnSharedPreferenceChangeListener得知設定發生了改變的時候進行，在上面的代碼例子裏已經顯示出來了。而主activity的重啓是在當用戶從PreferenceActivity中返回到主activity時，在onActivityResult() 中觸發。</p>
<p>完整代碼例子可以參考RunningCadence源碼 <a href="https://github.com/aleung/RunningCadence/blob/f0cdb98b42a94caa5c7e2cec1a8aa6abf91e73b9/RunningCadence/src/leoliang/runningcadence/PreferenceActivity.java">PreferenceActivity.java</a>。</p>
<h2 id="總結"><a href="#總結" class="headerlink" title="總結"></a>總結</h2><p>現在將思路理清了寫下來，感覺不算複雜，但是在做的過程中費了好多腦筋繞了不少彎路，邊上網查資料邊嘗試。Android的API Guides在ICS發佈後改進了好多，很多內容重寫過更清晰容易理解了，另外一個非常有價值的資源是<a href="https://stackoverflow.com/">StackOverflow.com</a>。</p>
<p>我感覺，對於一般應用沒有太大必要去實現應用內的語言選擇。系統裏所有應用都使用統一的locale本來就挺好的。</p>
<p>如果應用的task stack結構複雜，需要重新顯示的activity很多，可能用重啓整個應用的方法更簡單一些。我不知道重啓應用是怎麼做到的，Android API裏面沒有現成的方法。不過若實現了應用重啓，應用內部各個Activity都不需要做任何額外處理了。</p>
<p><em>Update</em>: 感謝guanyc網友的留言，給出重啟應用的方法：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">PendingIntent</span> <span class="variable">intent</span> <span class="operator">=</span> PendingIntent.getActivity(</span><br><span class="line">    <span class="built_in">this</span>.getBaseContext(), </span><br><span class="line">    <span class="number">0</span>, </span><br><span class="line">    <span class="keyword">new</span> <span class="title class_">Intent</span>(getIntent()), </span><br><span class="line">    getIntent().getFlags());</span><br><span class="line"><span class="type">AlarmManager</span> <span class="variable">mgr</span> <span class="operator">=</span> (AlarmManager) getSystemService(Context.ALARM_SERVICE);</span><br><span class="line">mgr.set(AlarmManager.RTC, System.currentTimeMillis() + <span class="number">500</span>, intent);</span><br><span class="line"><span class="comment">// this.finish()?</span></span><br><span class="line"><span class="comment">// this.saveSettings();</span></span><br><span class="line">System.exit(<span class="number">2</span>);</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>我的首個半馬拉松</title>
    <url>/blog/2012/12/11/my-first-half-marathon/</url>
    <content><![CDATA[<p>11月18日，廣州首屆馬拉松賽，也是我跑的第一次半馬拉松。過去大半個月了，還是記錄一下吧。</p>
<p>看回以前寫的blog，應該是在2005年底開始跑步的，也不記得當時爲什麼突然有了要經常性跑步的想法。那時傍晚下班後在天河公園跑，跑步是作爲鍛鍊和放鬆，一次跑半小時左右，最多5、6公里，根本不敢想象自己能跑21公里的半馬拉松。雖然跑了好多年，但都是斷斷續續，有時一停就幾個月，跑的頻率也低，最多一週兩次，一直都是維持在只能連續跑5公里左右水平。</p>
<p>2008年下半年腰椎間盤突出，最嚴重時連走路都一瘸一瘸的，當時真害怕恢復不了，沒法再做運動了。幸好恢復得很快，11月起可以慢跑鍛鍊，那兩三個月跑得比較頻密，到年底跑的狀態還不錯，同樣的距離比之前跑得更輕鬆。</p>
<p>2009年開始嘗試跑長一點的距離，跑了幾次8到10公里左右，但也沒堅持訓練。10月份Nike在廣州舉辦10公里跑，第一次參加了正式的長跑活動，成績58:30，完成了自己跑進1小時的目標(<a href="/blog/2009/09/25/Prepare-10-km-run/" title="准备10km跑">准备10km跑</a>)。試過後覺得參加跑步活動很好玩，打算以後都繼續參與。</p>
<p>2010年亞運會，Nike沒有辦跑步活動，2011年11月，Nike又舉辦10公里跑，這次賽前就比較認真的做了兩個月的訓練計劃，專門練習了提高步頻，效果還是比較顯著的，成績比預想的好不少，48:29，步速邁進了5分鐘每公里大關(<a href="/blog/2011/11/15/Nike-Lunar-Run-10-/" title="Nike Lunar Run 10公里跑总结">Nike Lunar Run 10公里跑总结</a>)。</p>
<p>那時還報名了2012年2月的香港半程馬拉松，接下來幾個月跑的狀態都很好，週末訓練跑了幾次17、18公里，又跑了上白雲山的路線(<a href="/blog/2011/12/26/Baiyun-mountain-running/" title="白云山跑步">白云山跑步</a>)，感覺信心很足，心中還在盤算着目標定在兩小時還是2:15合適。誰知臨近比賽前兩天開始出現感冒跡象，週六中午到了香港，去領取選手包後就開始發燒，下午晚上都在酒店燒得迷迷糊糊的。週日早上病好了，但也不能去跑步了，第一次半馬拉松就這樣錯過。然後對跑步的興趣又一次陷入低谷，一週跑不了一次。</p>
<p>2012年初就看到廣州11月要舉辦馬拉松賽的消息，但一直到九月初都沒有見到正式籌備工作開展，正在想是否搞不成的時候，官方報名消息就出來了。接下來就維持了一個多月的訓練，11月18日開跑，總的來說比較輕鬆的完成了首次半馬拉松。</p>
<p>跑完時比較興奮，發了好幾條tweets：</p>
<blockquote>
<p>我的首个半马拉松，官方計時1:51:23，完成了两小时内的目标。前十公里留力比较多，下次可以不用那么保守。</p>
</blockquote>
<blockquote>
<p>參加大規模長跑活動的感覺跟平常自己跑很不一樣，喜歡跑步的朋友都值得嘗試一下，無所謂速度，能在關門時間前跑完就行了。很多人一起跑，興奮度高很多，超過自己平常速度也會覺得很輕鬆；寬闊的馬路車輛全不見了，讓你暢快的跑在路中心；路旁觀衆的鼓勵讓你心中充滿溫暖。</p>
</blockquote>
<blockquote>
<p>马拉松赛道上，视障参赛者由引导员陪同赛跑，两人的手用带子系在一起。路上见到好多组，男女都有。看到他们，我觉得很感动，我们跑步，再困难也难不过他们。</p>
</blockquote>
<p>跑完後，又沒有了目標了。不知道以後會不會去跑個全馬，半馬跟全馬的區別還是挺大的，對我來說最重要的是不要把膝蓋跑傷了，享受跑步的樂趣，而不是追求成績。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>四儿子无望，粗粮也好吧</title>
    <url>/blog/2012/12/23/mi2/</url>
    <content><![CDATA[<img src="/blog/attachments/2012/12/mi2_focus_01s.jpg" class="">

<p>Xperia U 手機用了半年，<a href="/blog/2012/07/22/xperia-u/" title="Xperia U 上手">開始感覺</a>還不錯，可是升級到ICS之後就慢得不行，歸咎下來應該還是因為RAM太小只有512M。於是動了換機的念頭。本來看中的是人稱Google四兒子的 Nexus 4，高配置白菜價，還有Google最新系統的保證，可是開賣以來奇貨可居，市場價炒到上三千。幾個月內都是沒什麼希望買到了。本來我是沒有關注小米2的，偶然的機會朋友可以買到現貨，問我要不要，上網查了一輪，發現小米2也不錯，於是就買了。用了10天，感覺挺滿意。</p>
<p>對於國產手機，最關心的是能不能用Google服務，有沒有ROM可以刷。行貨的閹割系統對於我來說是根本不能用的。小米做得還不錯，保留了Google Service Framework，可以添加Google帳號同步，Google Play等應用自己裝上就可以了。小米手機不算開放，沒有找到任何第三方的ROM，但好在小米除了MIUI外還是提供了原生Android系統ROM，如果不喜歡MIUI還是可以用回native Android。小米2的操作系统已經超越了ICS，是Android 4.1 Jelly Bean，除了四儿子是4.2，小米2也算是版本最高的一款Android手机了吧。手機到手後，刷了個MIUI開發版，因為穩定版不提供root權限。個人感覺MIUI的定製的度把握得比較合適，把很多系統級的有用的功能集成進去了，例如來電短信攔截，LBE的權限管理，通知欄開關等等，而又沒有像其他廠商那樣內置一大堆用不著又刪不掉的應用。因此我試了一下還是決定保留MIUI。</p>
<p>唯一不喜欢的是MIUI的launcher。仿照iOS将图标全平铺在桌面上，用起来不方便；它为第三方应用的图标都缩小并加上一块灰绿色背景，难看死了，本来应用精心设计的透明背景图标都被它搞成一块块牛粪。MIUI的设计风格不错的，真不知道为什么这个launcher会搭配得那么丑，即使自己创建主题将那个灰绿背景改成透明，图标还是被缩小了不好看。我另外找到了一個launcher：<a href="https://play.google.com/store/apps/details?id=com.dlto.atom.launcher">Atom Launcher</a>，界面風格簡潔，功能細節也很好，這下就完美了。</p>
<p>小米2給我最大的感受是显示非常细腻，特别是低磅数的Roboto字体特别干净秀气。342ppi的屏幕达到视网膜屏的标准，其实现在新出的好多手机都是视网膜屏了，只不过现在已经不再新鲜，厂商也不会拿这来做特别宣传。Android从ICS起缺省的是Holo蓝色主题，MIUI换成了自己标志性的亮橙色，大片白色背景，黑色&#x2F;灰色字体加上亮橙的点缀，整个风格很现代和清新。</p>
<p>剛到手時，對尺寸不太適應，讓我覺得蘋果說的3.5寸是最適合的手機屏幕尺寸不無道理。現在慢慢有些習慣了，但是單手操作始終還是有些彆扭，比如用右手操作，左上角和右下角的按鈕都不容易按到，還是雙手會方便些。</p>
<p>當然啦，新手機最爽的事情就是2G的RAM，運行的順暢程度跟舊手機比真是一個天一個地，看到什麼應用都想裝就裝啦。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样在OSX上adb连接小米2</title>
    <url>/blog/2012/12/30/mi2-usb-debug-on-osx/</url>
    <content><![CDATA[<p>小米2手机在Mac OSX上，adb识别不到设备，Eclipse的DDMS也连不上设备，这样手机就不能用来开发了。实际上，只有在Windows上才需要安装USB驱动程序，在Linux、OSX上并不需要，设别不到小米2手机是因为adb不知道这手机的USB Vendor ID。Android SDK<a href="http://developer.android.com/tools/device.html">文档</a>里就列出了一些Android设备厂商的vendor ID，不过当然不包括小米，因此要自己找出小米的vendor ID。用IORegistryExplorer（据说是包含在Developer Tool里，反正我的机器上装了）可以查看连接上的USB设备的信息。选择IOUSB，可以看到名为“MI 2”的设备，idVendor是0x2717。</p>
<p>将这个Vendor ID作为独立一行加进文件 ~&#x2F;.android&#x2F;adb_usb.ini 中。装了Android SDK这个目录和文件应该就存在的，如果不存在就自己创建。修改完adb_usb.ini后执行 adb kill-server 重启adb，再执行 adb devices，就能看到小米2手机了。再打开Eclipse，也能够正常设别到手机，一切OK。</p>
<img src="/blog/attachments/2012/12/osx_usb.jpg" class="">
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>人體工學鍵盤鼠標組合</title>
    <url>/blog/2013/01/08/keyboard-and-mouse/</url>
    <content><![CDATA[<p>作為悲催的程序猿，每天的大部份時間都是陪伴鼠標鍵盤度過的，一套合適的鼠標鍵盤非常重要，可以降低得職業病的機率。尋找人體工學的鼠標鍵盤並不容易，現在這套用了好些時間了，感覺很滿意。</p>
<img src="/blog/attachments/2013/1/keyboard_mouse.jpg" class="">

<p>先說鍵盤，普通鍵盤其實並不符合雙手自然的角度，如果要能讓雙手自然，左右手鍵盤需要分離。因此，理想的鍵盤大概是這個樣子的：</p>
<img src="/blog/attachments/2013/1/kb_adv-pro.jpg" class="">

<p>這個是Kinesis Advantage Pro，我在荷蘭公司見過有同事用，在網上程序員社區也受到推薦。</p>
<p>還有這個怪樣子的DataHand，手指已經不僅是向下敲鍵盤了，而是每個手指上下左右各個方向都是不同的鍵。</p>
<img src="/blog/attachments/2013/1/datahand.jpg" class="">

<p>上面說的鍵盤不僅僅怪異，也买不起。前者$359，後者更是近千美元。更何況即使有錢，在國內也買不到。因此我只能選擇還算中規中矩的<a href="http://www.microsoft.com/hardware/en-us/p/natural-ergonomic-keyboard-4000">微軟人體工學鍵盤4000</a>，這款鍵盤算是評價不錯，價錢也可接受，國內可以直接買到。它的左右手鍵盤區並沒有分離得很遠，但剛好分開一個夾角，跟雙手自然擺放時的角度一樣。左右手分開鍵盤區要求指法一定要正確，還好我到手後在一個下午裏就已經適應了。</p>
<img src="/blog/attachments/2013/1/microsoft-mouse-6000.jpg" class="right"> 鼠標我開始用的是[微軟人體工學霸雷鯊6000](http://www.microsoft.com/hardware/en-us/d/natural-wireless-laser-mouse-6000)（已經停產），它的好處是傾斜的表面讓手腕不需要向內旋轉。但是用了一段時間感覺還是未達理想程度，主要問題是我移動鼠標時通常前臂放在桌面上是不動的，僅靠手腕的活動，時間長了手腕還是覺得累。

<p>後來在網上看了不少資料，軌跡球可能可以解決這個問題，不需要手腕的動作，依靠手指移動就可以了。但是，對於軌跡球的評價好壞很極端，要麼說很好用要麼說根本沒用，估計這個東西的適應比較困難。但要真正用起來才會知道是否適合，最後還是下定決心買一個來試一下。軌跡球始終屬於小眾產品沒有推廣開來，產品甚至越出越少，市場上現在可買到的沒幾款，相對鼠標來說價錢也貴不少（其實結構、元件都差不多）。最終買的是<a href="http://www.kensington.com/kensington/us/us/p/1444/K64325/expert-mouse%C2%AE.aspx">Kensington Expert Mouse</a>（淘寶有售），明明是trackball要叫做mouse，可見trackball不受落。選擇這個是因為球體夠大，而且是可以用食指中指來滾動球體。Logitech M570 本來也不錯，但聽說拇指球用起來不夠靈活，拇指也容易累。中置球體的另外一個好處是左右手通用，我本來習慣用右手的，但那個鍵盤實在太霸氣了，把軌跡球放右邊，手在鍵盤和軌跡球間切換要移動很遠，於是就換用左手了。剛買回來，球滾動不大順滑，有點澀的感覺，真有些失望，但用了一兩個星期後就好很多了，現在操作起來絲柔順滑，阻尼感恰到好處，應該是球的三個支撐點需要一段時間磨合。軌跡球剛用起來確實不是那麼容易上手，操作會比較笨拙，比用鼠標慢很多，但是多花些時間適應，大概幾天到一周就可以上手了。</p>
<p>總之，現在對這套組合非常滿意。</p>
]]></content>
      <tags>
        <tag>Gadget</tag>
      </tags>
  </entry>
  <entry>
    <title>R初略学习笔记</title>
    <url>/blog/2013/02/09/beginning-r/</url>
    <content><![CDATA[<h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><p>从CRAN安装一个包：<code>install.packages(&quot;pkg_name&quot;)</code></p>
<p>加载包：<code>library(package)</code></p>
<h2 id="R的基本数据类型"><a href="#R的基本数据类型" class="headerlink" title="R的基本数据类型"></a>R的基本数据类型</h2><p>在R里面一个元素的基本数据类型称为 mode。每个对象都有mode属性。</p>
<p>基本数据类型包括：数值(实数) numeric，复数 complex，字符(串) character，逻辑(布尔) logical 和 raw。NA表示没有值。</p>
<p>基本数据类型之间的转换通过 as.<em>something</em>() 函数进行，例如 <code>as.character()</code>, <code>as.integer()</code>。</p>
<h2 id="R的数据对象类型"><a href="#R的数据对象类型" class="headerlink" title="R的数据对象类型"></a>R的数据对象类型</h2><h3 id="向量-vector"><a href="#向量-vector" class="headerlink" title="向量 vector"></a>向量 vector</h3><p>向量由一组相同类型的元素组成。</p>
<p>用函数 c() 可以构造出向量：</p>
<pre><code>x &lt;- c(10.4, 5.6, 3.1, 21.7)
</code></pre>
<p>如果要生成元素为序列的向量，简单的方法是用冒号，如 1:7，复杂的方法是函数 seq()。另外，函数 rep() 可以根据已有向量的元素重复来生成新向量。</p>
<p>向量中的某个元素通过 [] 访问，如 <code>x[3]</code>，注意，下标从1开始！方括号中下标位置放的可以是向量，称为索引向量 index vector，这时候会根据索引取出特定元素构成新的向量。例如 <code>x[1:10]</code> 取出x的前10个元素。</p>
<p>对向量做运算，是对向量的每个元素做独立运算，结果是一个相同元素个数的新向量。</p>
<h3 id="因子-factor"><a href="#因子-factor" class="headerlink" title="因子 factor"></a>因子 factor</h3><p><strong>TODO</strong>：没懂</p>
<h3 id="数组-array"><a href="#数组-array" class="headerlink" title="数组 array"></a>数组 array</h3><p>数组是多维的一组相同类型数据。特别地，二维数组称为矩阵 matrix。</p>
<p>通过指定维度属性 dim，向量可以转换为数组。例如z为有1500个元素的向量，<code>dim(z) &lt;- c(3, 5, 100)</code> 将z变作3<em>5</em>100的三维数组。另外一种构造数组的方法是用函数 array()： <code>Z &lt;- array(data_vector, dim_vector)</code>。向量中元素是按照首下标优先的顺序来遍历的，如 <code>z[1,1,1], z[2,1,1], …, z[2,5,100], z[3,5,100]</code>。</p>
<p>可以通过 <code>a[2,,]</code> 这样的方法访问子数组，得到的是指定了第一维为2后剩余维数的数组。正如可以用向量为下标来访问向量，也可以用索引矩阵 index matrix 作为下标来访问数组，这样可以根据索引矩阵的值为下标取出数组中的特定一组元素。</p>
<p>通过 <code>as.vector(X)</code> 或者 <code>c(X)</code> 可以将数组X变回向量。</p>
<h3 id="列表-list"><a href="#列表-list" class="headerlink" title="列表 list"></a>列表 list</h3><p>文档里叫list，但实际上更象其他语言里的map，或者叫hash。列表里的每个元素是一个对象，称为组件 componet，列表里的组件的类型不需要一致。</p>
<p>生成列表的方法：<code>Lst &lt;- list(name_1=object_1, …, name_m=object_m)</code>。组件名字是可忽略的。构成列表的对象会复制一个副本到列表里面，而不是引用。</p>
<p>用 <code>[[n]]</code> 来访问列表中的第n个组件。如果组件有名字，用 <code>list$component_name</code> 的方法更简便。组件名可以简写为名字的前几个字母，只要不引起歧义就行。</p>
<h3 id="数据帧-data-frame"><a href="#数据帧-data-frame" class="headerlink" title="数据帧 data frame"></a>数据帧 data frame</h3><p>数据帧是特殊的列表：</p>
<ul>
<li>组件为向量(数值型,字符形,逻辑型)，因子，数值矩阵，列表或其他数据帧</li>
<li>数据帧中作为变量的向量结构必须具有相同的长度,而矩阵结构应当具有相同的行大小</li>
</ul>
<p>很多情况下,数据帧会被当作各列具有不同模式和属性的矩阵。</p>
<p>数据帧同样可以用下标来获取子集，例如看前三行数据：<code>data[1:3,]</code>，根据某列的值做过滤：<code>filtered_frame &lt;- full_frame[full_frame$country==&quot;cn&quot;,]</code></p>
<p>通过 <code>as.matrix(X)</code> 将数据帧转换为矩阵。</p>
<h2 id="读取数据"><a href="#读取数据" class="headerlink" title="读取数据"></a>读取数据</h2><p>函数 <code>read.table()</code> 读取文本文件的数据，产生一个数据帧。更常用的是 <code>read.csv()</code> 和 <code>read.delim()</code>，它们是 read.table() 的缺省参数版本，后者读取tab分隔的文件。文件的每个列被保存到数据帧的一个组件中，组件名字就是列的名字，如果列名里有空格会被转换成句点。</p>
<h2 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h2><h3 id="高级绘图函数"><a href="#高级绘图函数" class="headerlink" title="高级绘图函数"></a>高级绘图函数</h3><p>下面是R中高级绘图函数的概括:</p>
<table>
<thead>
<tr>
<th align="left">函数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">plot(x)</td>
<td align="left">以x的元素值为纵坐标、以序号为横坐标绘图</td>
</tr>
<tr>
<td align="left">plot(x, y)</td>
<td align="left">x(在x-轴上)与y(在y-轴上)的二元作图。根据type参数可以画出多种类型的图。</td>
</tr>
<tr>
<td align="left">sunflowerplot(x,y)</td>
<td align="left">同上 但是以相似坐标的点作为花朵,其花瓣数目为点的个数</td>
</tr>
<tr>
<td align="left">pie(x)</td>
<td align="left">饼图</td>
</tr>
<tr>
<td align="left">boxplot(x)</td>
<td align="left">盒形图(“box-and-whiskers”)</td>
</tr>
<tr>
<td align="left">stripchart(x)</td>
<td align="left">把x的值画在一条线段上,样本量较小时可作为盒形图的替代</td>
</tr>
<tr>
<td align="left">coplot(x~y|z)</td>
<td align="left">关于z的每个数值(或数值区间)绘制x与y的二元图</td>
</tr>
<tr>
<td align="left">interaction.plot(f1, f2, y)</td>
<td align="left">如果f1和f2是因子,作y的均值图,以f1的不同值作为x轴, 而f2的不同值对应不同曲线;可以用选项fun指定y的其他的统计量(缺省计算均值,fun&#x3D;mean)</td>
</tr>
<tr>
<td align="left">matplot(x,y)</td>
<td align="left">二元图,其中x的第一列对应y的第一列,x的第二列对应y的第二 列,依次类推。</td>
</tr>
<tr>
<td align="left">dotchart(x)</td>
<td align="left">如果x是数据框,作Cleveland点图(逐行逐列累加图)</td>
</tr>
<tr>
<td align="left">fourfoldplot(x)</td>
<td align="left">用四个四分之一圆显示2X2列联表情况(x必须是dim&#x3D;c(2, 2, k)的数组,或者是dim&#x3D;c(2, 2)的矩阵,如果k &#x3D; 1)</td>
</tr>
<tr>
<td align="left">assocplot(x)</td>
<td align="left">Cohen–Friendly图,显示在二维列联表中行、列变量偏离独立性 的程度</td>
</tr>
<tr>
<td align="left">mosaicplot(x)</td>
<td align="left">列联表的对数线性回归残差的马赛克图</td>
</tr>
<tr>
<td align="left">pairs(x)</td>
<td align="left">如果x是矩阵或是数据框,作x的各列之间的二元图</td>
</tr>
<tr>
<td align="left">plot.ts(x)</td>
<td align="left">如果x是类”ts”的对象,作x的时间序列曲线,x可以是多元的, 但是序列必须有相同的频率和时间</td>
</tr>
<tr>
<td align="left">ts.plot(x)</td>
<td align="left">同上,但如果x是多元的,序列可有不同的时间但须有相同的频 率</td>
</tr>
<tr>
<td align="left">hist(x)</td>
<td align="left">x的频率直方图</td>
</tr>
<tr>
<td align="left">barplot(x)</td>
<td align="left">x的值的条形图</td>
</tr>
<tr>
<td align="left">qqnorm(x)</td>
<td align="left">正态分位数-分位数图</td>
</tr>
<tr>
<td align="left">qqplot(x, y)</td>
<td align="left">y对x的分位数-分位数图</td>
</tr>
<tr>
<td align="left">contour(x, y, z)</td>
<td align="left">等高线图(画曲线时用内插补充空白的值),x和y必须为向量 ,z必须为矩阵 , 使得dim(z)&#x3D;c(length(x), length(y))(x和y可以省略)</td>
</tr>
<tr>
<td align="left">filled.contour (x,y, z)</td>
<td align="left">同上,等高线之间的区域是彩色的,并且绘制彩色对应的值的图 例</td>
</tr>
<tr>
<td align="left">image(x, y, z)</td>
<td align="left">同上,但是实际数据大小用不同色彩表示</td>
</tr>
<tr>
<td align="left">persp(x, y, z)</td>
<td align="left">同上,但为透视图</td>
</tr>
<tr>
<td align="left">stars(x)</td>
<td align="left">如果x是矩阵或者数据框,用星形和线段画出</td>
</tr>
<tr>
<td align="left">symbols(x, y, …)</td>
<td align="left">在由x和y给定坐标画符号(圆,正方形,长方形,星,温度计式 或者盒形图),符号的类型、大小、颜色等由另外的变量指定</td>
</tr>
<tr>
<td align="left">termplot(mod.obj)</td>
<td align="left">回归模型(mod.obj)的(偏)影响图</td>
</tr>
<tr>
<td align="left">heatmap(x)</td>
<td align="left">热度图</td>
</tr>
</tbody></table>
<h4 id="需要工具包支持的高级绘图"><a href="#需要工具包支持的高级绘图" class="headerlink" title="需要工具包支持的高级绘图"></a>需要工具包支持的高级绘图</h4><p><strong>板块层级图 tree map</strong></p>
<p>用矩形面积来表示数值，可用于分析磁盘空间占用</p>
<pre><code>library(portfolio)
map.market(id, area, group, color)
</code></pre>
<p><strong>平行坐标图</strong></p>
<pre><code>library(lattice)
parallel(data)
</code></pre>
<h3 id="低级绘图命令"><a href="#低级绘图命令" class="headerlink" title="低级绘图命令"></a>低级绘图命令</h3><p>R里面有一套绘图函数是作用于现存的图形上的:称为低级作图命 令(low-level plotting commands)。下面有一些主要的:</p>
<table>
<thead>
<tr>
<th align="left">函数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">scatter.smooth(x, y, …)</td>
<td align="left">LOESS(局部加权散点平滑)拟合曲线</td>
</tr>
<tr>
<td align="left">points(x, y)</td>
<td align="left">添加点(可以使用选项type&#x3D;)</td>
</tr>
<tr>
<td align="left">lines(x, y)</td>
<td align="left">同上,但是添加线</td>
</tr>
<tr>
<td align="left">text(x, y, labels,…)</td>
<td align="left">在(x,y)处添加用labels指定的文字;典型的用法是: plot(x, y, type&#x3D;”n”); text(x, y, names)</td>
</tr>
<tr>
<td align="left">mtext(text,side&#x3D;3, line&#x3D;0,…)</td>
<td align="left">在边空添加用text指定的文字,用side指定添加到哪一边(参照 下面的axis());line指定添加的文字距离绘图区域的行数</td>
</tr>
<tr>
<td align="left">segments(x0, y0,x1, y1)</td>
<td align="left">从(x0,y0)各点到(x1,y1)各点画线段</td>
</tr>
<tr>
<td align="left">arrows(x0, y0,x1, y1, angle&#x3D; 30,code&#x3D;2)</td>
<td align="left">同上但加画箭头,如果code&#x3D;2则在各(x0,y0)处画箭头,如 果code&#x3D;1则在各(x1,y1)处画箭头,如果code&#x3D;3则在两端都画箭头; angle控制箭头轴到箭头边的角度</td>
</tr>
<tr>
<td align="left">abline(a,b)</td>
<td align="left">绘制斜率为b和截距为a的直线</td>
</tr>
<tr>
<td align="left">abline(h&#x3D;y)</td>
<td align="left">在纵坐标y处画水平线</td>
</tr>
<tr>
<td align="left">abline(v&#x3D;x)</td>
<td align="left">在横坐标x处画垂直线</td>
</tr>
<tr>
<td align="left">abline(lm.obj)</td>
<td align="left">画由lm.obj确定的回归线(参照第五章)</td>
</tr>
<tr>
<td align="left">rect(x1, y1, x2, y2)</td>
<td align="left">绘制长方形,(x1, y1)为左下角,(x2,y2)为右上角</td>
</tr>
<tr>
<td align="left">polygon(x, y)</td>
<td align="left">绘制连接各x,y坐标确定的点的多边形</td>
</tr>
<tr>
<td align="left">legend(x, y, legend)</td>
<td align="left">在点(x,y)处添加图例,说明内容由legend给定</td>
</tr>
<tr>
<td align="left">title()</td>
<td align="left">添加标题,也可添加一个副标题</td>
</tr>
<tr>
<td align="left">axis(side, vect)</td>
<td align="left">画坐标轴,side&#x3D;1时画在下边,side&#x3D;2时画在左边,side&#x3D;3时画在上边,side&#x3D;4时画在右边。可选参数at指定画刻度线的位置坐标</td>
</tr>
<tr>
<td align="left">box()</td>
<td align="left">在当前的图上加上边框</td>
</tr>
<tr>
<td align="left">rug(x)</td>
<td align="left">在x-轴上用短线画出x数据的位置</td>
</tr>
<tr>
<td align="left">locator(n, type&#x3D;”n”, …)</td>
<td align="left">在用户用鼠标在图上点击n次后返回n次点击的坐标(x, y);并可以在点击处绘制符号(type&#x3D;”p”时)或连线(type&#x3D;”l”时),缺省情 况下不画符号或连线</td>
</tr>
</tbody></table>
<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ul>
<li>R for Beginners</li>
<li>An Introduction to R</li>
</ul>
]]></content>
      <tags>
        <tag>Statistics</tag>
        <tag>DataVisualization</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么处理Android耗电严重的问题</title>
    <url>/blog/2013/03/10/which-app-is-draining-your-android-bettery/</url>
    <content><![CDATA[<p>Android用户常常会被耗电问题困扰，明明手机没怎么使用，电量却不停的掉，半天就耗光了。有些人会寻求kill应用的方法——而Android系统的设计原则是用户不需要关心进程的启停的。其实大多数情况下，这都跟系统无关，而是安装的某些应用的问题。合理设计的应用，即使有后台进程，也只会在必要的时候唤醒进行短时间工作。但有些应用开发者不懂怎么合理设计应用后台任务，造成耗电问题。</p>
<p>要解决耗电问题，首先得找出是那个应用耗电。Android 4.0以上系统已经能够显示出系统各模块以及各个应用的耗电比例（设置－电量使用情况），不过细节信息还是不够多，往往不足以判定是什么原因耗电严重，这时候就要用到这个应用：<a href="https://play.google.com/store/apps/details?id=com.gsamlabs.bbm">GSam Battery Monitor</a>。就像Android系统的电量使用情况，GSam可以列出系统各模块（系统、电话、屏幕、Wifi等）以及各应用的耗电比例，但它可以看到每项更细节的信息，如某一应用使用各传感器的时间、屏幕不同亮度分布使用时间等等，可以帮助判断是什么模块／应用耗电严重，以及耗电的具体原因。GSam还有更多的功能，用起来也不太复杂，自己摸索一下就行。</p>
<p>找到罪魁祸首后，最简单处理手段就是卸载它。但如果这个应用非装不可没有替代品，怎么办？Kill不是办法，若应用因后台服务而耗电，后台服务kill掉也能自动重启的。每次用完都要去kill用起来也不方便。这时 <a href="https://play.google.com/store/apps/details?id=com.oasisfeng.greenify">Greenify</a> 就派上用场了，当你将一个应用加入greenify列表中，它能够在你不使用这个应用时将它进入冬眠状态，但又不影响其正常使用。除了用来对付耗电应用，对付耗内存应用也不错，当应用冬眠时，也不会占用内存(RAM)。至于它的工作原理，作者没有透露过，我还没有见到有解释。Greenify只能用于Android 3.1+，需要root。Android手机要玩好，root基本上是不可少的。</p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Batch deploy artifacts to Maven repository</title>
    <url>/blog/2013/03/19/maven-batch-deploy-artifacts/</url>
    <content><![CDATA[<p>I need to migrate a Maven repository from <a href="http://www.jfrog.com/home/v_artifactory_opensource_overview">Artifactory</a> to <a href="http://www.sonatype.org/nexus/">Nexus</a>. Nexus’s migration <a href="http://www.sonatype.com/people/2009/03/migrating-from-artifactory-to-nexus/">solution</a> uses its migration plugin. But our Nexus service is managed by IT team and I don’t want to bother to ask them to install a plugin.</p>
<p>Artifactory is able to export a whole repository into file system as local repository layout (like .m2&#x2F;repository folder). So I looked for import feature in Nexus, but failed.</p>
<p>Searched on Google then I found <a href="http://stackoverflow.com/a/3304212/94148">this answer</a> on StackOverflow. Sean provided a pom with embedded Groovy script to upload (deploy) a hierarchy of files to a Maven repository. However Sean’s solution handles groupId, artifactId and version in a way differ to what I want. It requires to specify groupId and version in pom as fixed value.</p>
<p>I modify the Groovy script a bit to handle local repository folder layout. GroupId, artifactId and version are parsed from path of file. Here is my modified version:</p>
<script src="//gist.github.com/5194777.js"></script>

<p>Before using it, modify the setting in &lt;deploy.basefolder&gt; and &lt;distributionManagement&gt;. Make sure you have removed all non-artifact files e.g. *.sha1, *.lastUpdated from your import directory. Or you may enhance the script to filter those files out.</p>
<p>Suppose your import folder is ~&#x2F;.m2&#x2F;repository, put this pom.xml at ~&#x2F;.m2. Run <code>cd ~/.m2; mvn install</code> then everything is done.</p>
<p>Usually you should configure your repository to allow redeploy of an existing artifact. Otherwise you’ll get error if an artifact you want to import already exist in repository.</p>
<p><strong>Update</strong> 2013-3-29:</p>
<p>There is a more simple way to import artifacts into Nexus, if you have privilege to access its data folder. Just copy the files into the storage location of the repository (the path can be found in repository configuration tab on Nexus web UI), change owner and group of the copied directories and files. After that, on Nexus web UI right click the folder and choose rebuild metadata. After a while everything will be ready.</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>站立工作环境</title>
    <url>/blog/2013/03/18/stand-up-desk/</url>
    <content><![CDATA[<p>坐姿，特别是不正确的坐姿，对腰椎间盘的压力是站姿的2到3倍，长期在电脑前工作的人很容易得腰椎间盘突出等腰椎疾病。因此现在IT工作者逐渐流行站立工作。但是，长期站立也会带来其他的问题，如下肢静脉曲张等。一个比较理想的方案是使用可升降的办公桌，坐姿站姿交替。</p>
<p>2011年我花了不少时间寻找国内哪里可以买到可升降办公桌，但都没有找到。网上搜索倒是有不少信息，但都是厂家寻求批发订货的，电话问过几个本地厂商，基本都说不做，做的也没有现货不零售。唯一的是淘宝上有个泠泠岛，做个人客户，当时价格很高，外地购买也不方便，而且我对它的质量不是很放心。最终放弃了购买升降桌的念头，改为自行DIY站立工作桌。</p>
<p>2012年初用IKEA的BRODER系统加一个VIKA桌面搭建了一个站立工作桌。BRODER归属在重型储物系列里，本来用途是储物架，钢柱杆和钢网搁板很牢固，最大的搁板深度基本足够做桌面了，在上面垫上一块木桌面刚刚好。用IKEA的东西好处是你有很大发挥的空间，这个<a href="http://www.wretch.cc/blog/ikeameatball/12392137">IKEA的居家生活部落格</a>里就有不少BRODER各种应用的照片。但刚刚查IKEA中国网站，已经找不到BRODER，不知是否不卖了。</p>
<img src="/blog/attachments/2013/3/desk.jpg" class="">

<p>就这样用了一年，但长期站立工作也不好，于是想配一张高脚凳也许就差不多了。桌面高度是按站立工作而定的，按照我的身高桌面高度也偏高，一般市面上卖的高脚凳（酒吧凳）座高都不够。最后在淘宝上找到了一款，高度比较合适。今天到货刚刚装起来了。其实这凳子做工、质量都不算很好，组装也不够方便，如果IKEA有合适的我绝对不会选择它的（虽然说IKEA的东西质量也只算一般，但还是要比这淘宝货强）。</p>
<img src="/blog/attachments/2013/3/desk_chair.jpg" class="">

<p>关于工作台面、座椅以及显示器的合适高度，在<a href="http://book.douban.com/subject/11652185/">Human Factors in Engineering and Design</a>一书的 chapter 13. Applied Anthropometry, Work-Space Design and Seating 中对站姿与坐姿工作环境有很好的描述。我在决定台面高度与椅子高度的时候参考了此书中给出的研究数据。</p>
<p>顺便说说，上面提到那本书是<a href="http://zh.wikipedia.org/wiki/%E4%BA%BA%E5%9B%A0%E5%B7%A5%E7%A8%8B%E5%AD%A6">人因学</a>的经典好书，国内有<a href="http://book.douban.com/subject/3746065/">中文翻译版</a>。</p>
<p>另外再推荐阅读：美国职业健康和安全管理局(OSHA)工作区健康与安全指南<a href="http://www.youliv.com/ErgoStandard/WSGoodPositions.aspx">中文翻译</a>。</p>
]]></content>
      <tags>
        <tag>DIY</tag>
        <tag>Life</tag>
      </tags>
  </entry>
  <entry>
    <title>Clean aged artifacts from Artifactory</title>
    <url>/blog/2013/03/22/clean-aged-artifacts-from-artifactory/</url>
    <content><![CDATA[<p><a href="http://www.jfrog.com/home/v_artifactory_opensource_overview">Artifactory</a> has no feature to automatically remove old artifacts from local repository. Once the disk is full, manually remove unused artifacts is painful. Moveover, you’re not sure which artifacts are unused and can be safely deleted.</p>
<p>Artifactory has a set of <a href="http://wiki.jfrog.org/confluence/display/RTF/Artifactory's+REST+API">REST API</a>. One of the API is to search artifacts not downloaded since a specified date. In our projects, there are CI jobs which keep building the software for each branch. If a SNAPSHOT artifact hasn’t been downloaded for a time, we can make sure that this artifact is no use any more, a newer version should be existing.</p>
<p>I made a Ruby script to do the clean up job automatically. It searches artifacts which weren’t downloaded in specific days and deletes them. It can be invoked in a CI job to run periodically. </p>
<script src="//gist.github.com/5203736.js"></script>

<p>The script can also be used to clean unused release (non-SNAPSHOT) artifacts. However a good practice is to keep releases forever. </p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Solving Maven unique and non-unique snapshot conflict</title>
    <url>/blog/2013/03/30/maven-unique-non-unique-snapshot-conflict/</url>
    <content><![CDATA[<p>Recently I changed an Artifactory repository configuration from storing non-unique snapshots to unique snapshots (as described <a href="http://wiki.jfrog.org/confluence/display/RTF/Local+Repositories">here</a>). After that, “Unable to download the artifact” error happened on some artifacts.</p>
<p>When both unique snapshot and non-unique snapshot of the same version of an artifact exists, there will be problem to download it. For example, in a repository if under folder <code>/com/mycompany/test/foo/1.0.0-SNAPSHOT/</code> there are <code>foo-1.0.0-SNAPSHOT.pom</code> and <code>foo-1.0.0-20130329-231102-1.pom</code>, then downloading <code>com.mycompany.test:foo:1.0.0-SNAPSHOT:pom</code> will get error. You have to delete either the file with SNAPSHOT in name or all the files with time stamp in name.</p>
<p>Before I changed the configuration, there were SNAPSHOT artifacts in the repository. After configuration changed, the continuous integration jobs running on CI server redeployed artifacts to the repository, and those new files have time stamp in file names, and the version is the same. That caused the problem.</p>
<p>To solve the problem, I should delete the *-SNAPSHOT file, if and only if there are both unique snapshot and non-unique snapshot of the same version.</p>
<p>I wrote a Ruby script to do that. It scans all recent deployed artifacts (they have time stamp in file name because of the new configuration) and try to delete the same version non-unique snapshot (-SNAPSHOT) file if any. It uses Artifactory’s REST API. This script need to be run periodically till all artifacts have been rebuilt and deployed to repository. </p>
<script src="//gist.github.com/5260512.js"></script>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>笔记本充满电后，是否应该拔掉电源</title>
    <url>/blog/2013/03/30/should-i-keep-plugged-in-after-my-notebook-is-fully-charged/</url>
    <content><![CDATA[<p>在豆瓣小组里，有人问笔记本充满电后，是否应该拔掉电源用电池。我的回答是“否”，在有电源时应该插着电源，以延长电池寿命。我的回答遭到了某些疑似文科生的质疑（抱歉我对文科生的不敬）。现在很多中文网站、论坛的东西都是东抄西抄，以讹传讹。为此我科普了一把。</p>
<hr>
<p>看看Apple的网站吧： </p>
<ul>
<li><a href="http://www.apple.com/batteries/">http://www.apple.com/batteries/</a> </li>
<li><a href="http://www.apple.com/batteries/notebooks.html">http://www.apple.com/batteries/notebooks.html</a></li>
</ul>
<blockquote>
<p>A charge cycle means using all of the battery’s power, but that doesn’t necessarily mean a single charge. For instance, you could listen to your iPod for a few hours one day, using half its power, and then recharge it fully. If you did the same thing the next day, it would count as one charge cycle, not two, so you may take several days to complete a cycle. </p>
</blockquote>
<blockquote>
<p>Lithium-ion polymer batteries need to be used for maximum performance. If you don’t use your device often, be sure to complete a charge cycle at least once a month. </p>
</blockquote>
<p>电池的放电循环是累计的（原文里有图），不是说要一次性用光所有的电。 </p>
<p>如果你一个月用电池用不够一个放电循环，那就需要专门去把电池的电耗掉再充满。但如果你平常不时需要移动使用电脑的话，一般一个月都能用够一个电池放电循环，就没有必要专门去耗用电池的电了。 </p>
<p>锂电池的正常使用寿命大概在500～1000次放电循环左右。<a href="http://support.apple.com/kb/ht1519">这里</a>有Apple官方声称的电池寿命数值，新款MBP，MBA都是1000次。 </p>
<p>而且有说法是浅放电比起深放电有利于延长电池寿命[<a href="http://batteryuniversity.com/learn/article/how_to_prolong_lithium_based_batteries">来源</a>] 。特别是，过放电会严重损害电池。电脑有保护，不会让电池过放，电量低到一定程度就自动关机，但是若关机后依然长期不充电，电池的自放电也会最终使电池过放电。 </p>
<p>我的MBP用了接近两年，按照有电源时就插电源的用法，现在电池也已经用了131个周期了。要知道，电脑休眠也是耗电的。 </p>
<p>还有<a href="http://forums.macrumors.com/showpost.php?p=9875442&postcount=23">这里</a>也整理了很多与Apple Notebook电池相关的知识。</p>
]]></content>
      <tags>
        <tag>Hardware</tag>
      </tags>
  </entry>
  <entry>
    <title>读书摘录 - 与艺术相伴</title>
    <url>/blog/2013/06/16/Living-with-Art/</url>
    <content><![CDATA[<p>周末早餐时读上一段，前后一年时间，终于把这本<a href="https://book.douban.com/subject/6522008/">《与艺术相伴》</a>读完了。</p>
<blockquote>
<p>艺术家的作品源于一生的经历、思考和情感；其余任何人都无法精确地复制它们。艺术品拥有多重含义。如果一些艺术品对某个人来说有某种意义，而他自己的经历、思考和情感也在其中找到了合适的位置，那么就可以说他赋予了艺术品生命。</p>
<p>艺术家的任务是实践自己的艺术观，表达自己的观点、见解和感情，以及在内心需要的命令下进行创作。</p>
</blockquote>
<blockquote>
<p>美脫離功能而存在。欣賞美時無功利性的成分在內。</p>
</blockquote>
<blockquote>
<p>自然主義：具象，再次呈現可見世界，可被感官感知的外在物質現實;</p>
<p>抽象：被想像力感知的內在精神現實</p>
<p>位于自然主义和抽象之间的是程式化。“程式化”（stslized）形容的是这样一种具象艺术：它遵照某种早已确定的风格或套路来描绘世界。</p>
</blockquote>
]]></content>
      <tags>
        <tag>Reading</tag>
        <tag>ArtCulture</tag>
      </tags>
  </entry>
  <entry>
    <title>看老罗的锤子发布会</title>
    <url>/blog/2013/04/03/my-opinion-on-smartisan-os/</url>
    <content><![CDATA[<p>两个小时，演讲太啰嗦，时间压缩一半可能会精炼很多，乔布斯有这么多废话吗？另外就是老罗一贯的自恋。我突然想找小米首次发布会来看看，看雷布斯的表现如何。老罗已经是名嘴，雷布斯更惨不忍睹？</p>
<p>从发布会的信息上看，锤子是一个做了UI &#x2F; HI (Human Interface) 优化的Android系统：</p>
<ol>
<li>更换了System UI（风格基调是iOS的）</li>
<li>提供以九宫格无背景为特色的Launcher（Android UI优点之一的widget无处容身了）</li>
<li>替换了所有应用自带的图标</li>
<li>提供了一些重新设计的系统自带应用，如相机、通讯录、拨号等（里面加入不少体贴用户的细节）</li>
<li>语音控制功能的整合（还没做好）</li>
</ol>
<p>这样看来，锤子做的事情跟很多基于Android的定制系统是一个层面的，类似的系统太多太多了：最早但死掉的中国移动OMS，各手机厂商为自己手机定制的系统（HTC SenseUI，联想乐OS，魅族Flyme），已经放弃的点心OS，很火的MIUI……。顺便说一下，MIUI为应用图标硬加的圆角矩形背景极为难看，希望被老罗炮轰一下后能改过来。</p>
<p>从整体设计风格来说，锤子追随的是iOS的UI风格和人机界面设计规范，从各个UI组件的样子可以看得出来，还有交互操作的方式，也包括拟物化的设计、仿真的视觉反馈等。</p>
<p>对于一些操作细节的打磨，带来更人性化的体验，是很多人对锤子称道的地方。的确是做得不错，但演示到的几乎每一个改进／做法，都能够在其他系统／第三方应用中找到已经真实应用的范本。老罗团队做得好是在于关注到需要改进的地方，将它们集中到一起。发现哪里操作细节需要改进比起作出改进更难。</p>
<p>因此，看完两个小时的发布会，这个锤子系统没有带来什么耳目一新的感觉。老罗太高调了，说什么要做最好的手机系统，吹嘘的跟现实的落差太大。也许这是营销手段，反正我就不喜欢这种营销了。</p>
<p>发布会最后一段，老罗说得很清楚：锤子将会是一个极其封闭的系统，因为只有封闭，才能为小白用户提供最完美、一致的用户体验。听起来很耳熟是不？这不就是苹果说的吗？但是，智能手机系统更重要的角色是一个平台，各种应用才是上面的主角。应用的图标跟系统风格不搭配，锤子给出的解决方案是给你换掉，可是进入应用后，应用的UI、操作方式呢？这才是更重要的。UX不仅仅是美工，是整个人机交互。苹果是怎么做到的？苹果制定了一套系统详尽的人机界面设计规范(HIG)，苹果有很强的控制力，它可以通过App Store发布审核制度强制要求只有符合的应用才能上架。我看不到锤子能有这样的能力去控制第三方应用，也不觉得一个团队有能力(和有必要)在系统里自带所有主要的功能而抛弃第三方应用，因此觉得锤子找的这个提供更佳用户界面的切入点恐怕走不了多远。</p>
<p>在手机平台这个层面的用户体验上，要作出革新，非小打小闹可以做到。我虽然不做用户交互端的开发，但也有关注移动应用的UX的发展。真正意义的智能手机应用自iPhone革命性发布开始，并没有好多年的时间，这些年来，UX design在迅猛发展。iOS以高度拟物仿真的特点一直独领风骚，但走入了过分繁杂的极端；Android一路在摸索，历年Google IO都带出新的UI&#x2F;UX design pattern，每次都推翻之前的方案，但可以看到一路在改善，到了Android 4.x，已经有一整套成熟的设计规范；微软的Metro UI可以称得上是一个大的革新。近年的设计趋势都是简约化，去年底苹果工业设计师的更替后，苹果的设计理念也许也会往这个方向走。在我看来，大气的设计是定义出一整套设计语汇，自成体系，并且背后要有设计哲学所支撑（Metro的定位是一种设计语言）。读完iOS的HIG，Android SDK文档里的设计指南，Windows phone的设计指南，就有所体会。另外顺便说说Android应用，普遍比较丑的原因不在于Android自己的设计理念，而是应用开发者没有跟随这个理念，不少依照Android 4.x的设计风格的应用都很漂亮很好用的。</p>
<p>最后总结我看到的锤子：老罗崇尚苹果的整套理念，另外也看到了一些可以改进的地方（例如他说的iPhone设计上的妥协），于是要将它搬到Android平台上来，按照自己的理解重现实现一遍。这将是一个很有趣的尝试，期望能为国内手机应用UX僵化老土的设计带来新鲜的风气。只是别把自己过分拔高就好了。</p>
]]></content>
      <tags>
        <tag>UX</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>今年首次长跑训练</title>
    <url>/blog/2013/07/27/first-long-run/</url>
    <content><![CDATA[<p>去年底跑完广州马拉松半程后，一直都没有怎么认真跑步，经常一停就几个星期。转眼间到了7月中，算一下离今年广州马拉松不够四个月了，是时候开始训练。用miCoach做训练计划，选择了全程马拉松，居然第一次训练就是要2小时long run，太狠了。想着之前已经隔天跑，跑了一个半星期，身体应该能承受，那就按计划来吧。</p>
<p>半小时左右，跑到二沙岛过广州大桥，开始有累感。然后是各种累各种想停下的感觉，但好歹步速还在五分多六分多左右。</p>
<p>经过广州塔，江堤上很多游人，景色不错。五十多分钟时过猎德桥，过完桥就开始回程了。<br>猎德大桥上竟然铺了橡胶，但太软了跑起来反而不好用力。</p>
<p>下桥后停下来吃了根蕉，这一停不得了，再也跑不动了，真是宁可慢不可停。跑了几百米，虽然很慢，但都还是恢复不了跑步状态，大腿小腿都动不起来。才刚回程这样的状态不是办法，只好再停下来做了一轮腿部拉伸。拉伸完之后跑步的状态恢复了，虽然腿还是累。</p>
<p>然后水袋饮水软管和耳机线又在胸前晃来晃去，每跑一步就拍一下身体，很不舒服。前半程卡在背包带上好好的，后面就总卡不稳了，可能是累了后身体晃动厉害了。又得停下来倒弄一番，还不小心把软件弄停了，后面都没有了记录。</p>
<p>这时候刚好跑了一小时。手机不再有跑速语音提醒了，不知道自己的速度。但即使软件不断提醒我要提高速度到绿区，也加不了速了。这时候把步伐稳定下来，控制着小步幅，自我感觉姿态还是保持住的，但步频就提不上去了。一路跑一路在默念着：宁可慢，不可停。一旦停下来，就很难很难再恢复回跑的状态了。我的目标只是时间，不是距离。</p>
<p>就这样默念着，不知不觉也就跑完了花城广场到广州大桥一段，上广州大桥到二沙岛。其实也不远，就两公里。跑着跑着就开始考虑起路线的问题了。先是想：一定要按计划跑够两小时！然后想，按这速度，两小时估计回不到家了，大概到江湾酒店。那么就跑到江湾就停吧。随着疲劳感一波一波袭来，思想斗争不断：看来跑不了这么远了；不行！起码也要到江湾；就到海印吧；现在先别想，撑过下一个路口再说！天啊，这么累，怎么可能跑马拉松啊。在差不多到音乐厅的前一个路口，思想还是放弃了，就坚持跑到二沙中医院的公交车站吧。</p>
<p>当我跑步时，我在想些什么——哪有那么多人生哲理思考，想得只有一件事：什么时候可以停下来！</p>
<p>其实最后步姿还不错，膝盖等关节状态良好，呼吸也还可以，就是大腿抬不起，要坚持在身体上应该还可以的，就是没有战胜自己。有人跑完马拉松后总结：在你感觉已经崩溃的时候，其实至少还可以再跑已经跑过的一半的距离。如果不是出现伤痛，唯一决定性的就是自己的意志。</p>
<p>回家在地图上测了路线距离，大约13.5公里，1小时30分钟，算下来pace 6’40”。同以前的成绩比慢了不少。但这是恢复训练一周半后的第一次long run，算正常，本应该先跑个一小时循序渐进的。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>软件设计之度</title>
    <url>/blog/2013/10/21/du-of-software-design/</url>
    <content><![CDATA[<p>上个月在公司里分享的主题。Slideshare上看不到页面的动画效果，页面里的东西混一起了，要下载原PowerPoint文件看才行。</p>
<iframe src="http://www.slideshare.net/slideshow/embed_code/26482993" width="595" height="487" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC;border-width:1px 1px 0;margin-bottom:5px" allowfullscreen></iframe>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>2013广州马拉松半程小结</title>
    <url>/blog/2013/12/01/2013-gz-half-marathon/</url>
    <content><![CDATA[<p>11月23日，参加了2013广州马拉松的半程赛事，这是我第二次跑半程马拉松，赛会成绩1:55:11，自己按过出发点的计时是1:52:50。这个成绩比上一年要差了一些，2012广州半马的自己计时是1:49:57。但还是完成目标了，我赛前预订的是两小时内完成。</p>
<p>今年的训练是从7月中旬开始的（见： <a href="/blog/2013/07/27/first-long-run/" title="今年首次长跑训练">今年首次长跑训练</a>），最开始的目标是全程马拉松，但是训练断断续续了好多回：八月初去大辣甲岛坐快艇颠伤了腰；九月中旬肠胃炎病了一回体重一下掉了两公斤；十月中旬出差；十月中旬到十一月中旬咳嗽了一个月。总之一直都没有跟上训练计划，训练强度没有上去，跑全马没有可能了，报名时还是选择半马。咳嗽延续了很长时间，严重到胸口肋骨痛，虽然训练没有完全停止，但很担心这样的身体状态连半马都跑不下来了，幸好到了十一月中旬，赛前两周咳嗽逐步好转。一直都没有怎么跑长距离，都是平常的30分钟，十一月开始才将每次跑量增加到12km左右。11月16日（赛前一周）晚遇上Nike的夜跑活动，那次跑得非常轻松，13km步速5:27，就对完赛非常有信心了。赛前一周内减量，周二周四跑了两次慢速短时间维持运动状态。</p>
<p>从周训练量图上看得出来：太少了，很多时候每周2小时都不够。</p>
<img src="/blog/attachments/2013/12/run-history-weekly.png" class="">

<p>今年的路线比去年好多了，都是沿着江边跑。半程路线没有经过老城区，时间也早，观众没有那么多，但气氛也还是比去年好，观众都在热情的叫喊，特别是跑到路边跟一溜的观众一一击掌，兴奋度立马提高，特别有动力。</p>
<img src="/blog/attachments/2013/12/marathon-route.png" class="">

<p>早上七点半起跑，我6:40到珠江新城地铁站，一出站到处都是跑手，看到这个场景人就开始有点兴奋了，虽然平日这个时间还在床上呼呼大睡。在歌剧院外面的广场脱了外套和长裤，当天气温比较暖和，没有热身也不怎么冷。跟朋友回合，时间已到7:10，看着出发区密密麻麻的人群，有点心急。幸好今年的存包工作做得很好，不需要排队，然后上厕所，倒是排了上十分钟，一切妥当已经接近起跑时间。广马的出发点空间过于狭窄，只有一条半车道的宽度，早就已经挤满了人。有人在人堆里往前钻，我也跟在他后面钻，好歹往前挪了几十米。离起跑线还是很远很远，也不知道是什么时候鸣枪的，总之听到前面有人欢呼，然后又等了好一会发现人群开始往前移动了。人群基本还是走，我已经是尽量在人缝中钻了，走走停停，到起跑线时已经两分半钟。过了起跑线，还是跑不起来，跑了一小段前面又堵住了，又得走。一直过了大半公里，路面宽了之后，才可以真正跑起来。</p>
<p>起跑后几公里都没有把握好速度。按照2小时内完赛的目标，我给自己预定的配速是5’20”~5’30”之间。路面宽阔后，大家的速度都加上去了，一听 miCoach pacer 报速度，步速已经到 5’10” 左右了，于是就把速度降下来。在赛事中跟自己平常训练很不一样，平常起跑的速度都比较慢，要跑上十来分钟速度才加得上去，而在赛事中兴奋度高了，跟着其他人一下子就跑得比较快，自己一点感觉都没有，还以为慢。怕跑快，控制速度后，又压得太慢了，降到了5’40”。在四五公里左右还感觉右小腿肌肉有点僵硬感。</p>
<img src="/blog/attachments/2013/12/first5k.png" class="">

<p>过了前半小时，大概跑顺了进入状态。特别是车陂路第一个折返点后，一路都跑得很顺畅，步速基本上都在5’20”以上。回到珠江新城路段，沿路观众也多起来，我也喜欢回应一下观众，跑近路旁，挥挥手，甚至击掌，观众喝彩得更热烈，自己也更加兴奋，明显速度会跑快一点。五公里开始有水站，以前跑我不喜欢拿运动饮料，觉得甜了反而不解渴，但这次还是都选择了喝运动饮料，因为可以补充点能量。跟去年不一样，今年饮料是用纸杯分发的，确实这样更合理不浪费，只不过一边跑一边喝的难度不小，估计是喝一半撒了一半。实际上并不感觉渴，喝一两口感觉就可以了，但每5公里的饮料站我都去拿了，而且都全喝完，以保证不缺水，毕竟当天的温度对长跑来说比较高。</p>
<img src="/blog/attachments/2013/12/6-12km.png" class="">

<p>10km处有计时显示，已经忘了是多少，当时估算了一下，2小时内完成没什么问题了。12km开始进入猎德大桥路段，感觉依然很轻松。我记到去年到10km时也是感觉非常轻松的，但过了不久就开始疲累，因此也不敢大意。后面这一段路的速度在图上看波动比较大：12~13km猎德大道这短短一段路几个小上下坡：过猎德涌两次；13.5km左右路段是爬猎德大桥的上坡，14km左右是冲下坡；15.5km处磨碟沙隧道下坡又是一轮猛冲，16km是隧道上坡。速度下降得很厉害的地方都是饮水站或者降温海绵站。</p>
<p>在猎德-花城大道折返处拐弯的时候突然听到有人喊我的名字，一看是小春天，举着写上『Leo加油』的一张纸。有点惊喜，没想到她在这里，原来我是让她们在过桥后15、16km路段等的。因为是在拐弯处，当我看到她的时候已经几乎跑过了，匆匆一眼印象中一身很灰的衣服，所以啦啦队也要穿抢眼的衣服啊。然后开始上猎德大桥，虽然比较高，坡度还算是平缓的，减速保持步频上坡，终于过了最高点了，前面有大堆摄影师拦在路上拍照，很多人经过时都摆些pose好上镜，我当时没有意识到这里是一个官方摄影点，只是一心想着下坡可以冲快些。绕过了那群摄影师，突然又听到有人喊我的名字，一看是清风在旁边，也只是来得及挥挥手就冲过去了。一长段下坡，放开脚步狂奔。</p>
<p>疲累感大概是在16km后出现的，冲完磨碟沙隧道下坡后上坡感觉有点吃力了，然后后面的路程就开始没有轻松的感觉，不过这时剩下的路程已经没有多少，看着对面折返的跑全马的跑手，心想：我再跑几公里就完成了，要跑全马的话还要再跑一倍多的距离，多痛苦啊。后面的路程开始一边跑一边默算着剩下的公里数，不过状态也还是不差，可能就是心理上觉得差不多到了失去了动力。</p>
<img src="/blog/attachments/2013/12/13-18km.png" class="">

<p>琶洲大桥脚折返后，剩下最后两公里，开始加速做最后冲刺。因为最后有个小弯，一直没有看到终点门楼，有点觉得维持不住速度，直到最后一两百米左右看到终点，这时来劲了还猛冲了一下。</p>
<img src="/blog/attachments/2013/12/sprint.png" class="">

<p>全程的心率在缓慢的上升，大概10km后进入黄区(159-165BPM)，除了最后冲刺，基本维持在黄区内。冲线时最高心率175BPM。</p>
<img src="/blog/attachments/2013/12/heart-rate.png" class="">

<p>下面是全程的步速与步频曲线，粗线是步频。可以看出速度虽然有波动但全程平均差别不是太大，但前半程的步频基本在180以上，而后半程就下降到180以下了，说明体力下降步伐没有那么轻快了。</p>
<img src="/blog/attachments/2013/12/stride-rate.png" class="">

<p>几点总结：</p>
<ul>
<li>训练量不足；</li>
<li>体能储备上，半程没有问题，但跑更长距离估计余量不多了，需要增加长距离训练；</li>
<li>配速不够平稳。miCoach pacer 只能靠语音播报，不像手表可以随时看到数值，定时播报的间隔时间有点长，在没有把握时应该多让它报一下步速。</li>
</ul>
<p>最后感谢亲友团的支持鼓励！希望明年一起跑！</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>拦截Android应用HTTPS通讯内容</title>
    <url>/blog/2013/12/08/intercept-android-https-traffic/</url>
    <content><![CDATA[<p>昨天在捣弄 <a href="http://micoach.adidas.com/">miCoach</a> 到 <a href="http://nikeplus.nike.com/">Nike+</a> 的数据迁移，到了最后一步发现调用 Nike+ API 需要传送client_id和client_secret，这两个信息是用来认证客户端的，但Nike并没有公开开放API，因此无法申请到client_id。看 <a href="https://github.com/angusws/tcx2nikeplus">tcx2nikeplus</a> 的作者说他是通过查看iPhone应用发送的请求来拿到这两个信息的。但是 Nike+ API 都是走HTTPS的，普通方式的截包看不到加密传输的数据。</p>
<p>要嗅探加密传输，必须通过<a href="http://zh.wikipedia.org/wiki/%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB">中间人攻击</a>的方式才行。上网搜索一下看看有没有现成工具，果然一搜就找到了：<a href="http://portswigger.net/burp/">Burp Suite</a>。它是一个安全测试工具，功能好像有不少，我这里用它做代理，从中监控应用到服务器的通讯内容。</p>
<p>下面记录大致操作过程。</p>
<p>在PC上安装运行Burp，设置 Proxy - Options - Proxy Listeners，让它监听合适的地址和端口，并且选择 “Generate CA-signed per-host certificates”。</p>
<p>将浏览器代理指向Burp proxy，访问任意一个https地址，Burp这时是中间人，它会用自己的根证书(PortSwiggerCA)签发一个目标服务器的证书，替换了真正服务器的证书。浏览器应该会有安全报警，因为系统并不信任签发这个证书的CA。查看证书详细信息，选择根证书并且信任这个根证书，就会把PortSwiggerCA的证书加入到系统的信任列表中。</p>
<p>要将这个根证书装进Android，需要先从系统 key chain 里将它导出到文件（.pem格式），然后执行下面的命令将它转换为DER格式后缀为.crt的文件。</p>
<pre><code>openssl x509 -in PortSwiggerCA.pem -inform PEM –out PortSwiggerCA.crt -outform DER
</code></pre>
<p>接下来，将 PortSwiggerCA.crt 放入Android的sdcard，在系统安全菜单中安装证书。证书安装后，Android系统就会信任所有Burp签发的证书了。</p>
<p>在Android的WLAN设置代理指向Burp。但很多Android应用都不理会系统的代理设置，不使用系统指定代理，遇到这种情况就要用 <a href="https://play.google.com/store/apps/details?id=org.proxydroid">ProxyDroid</a> 来设置GlobalProxry（手机要root）。设置好了，在Burp里面就能够拦截到Android应用的HTTPS通信明文了。</p>
<img src="/blog/attachments/2013/12/burp.png" class="">

<p><em>注意：为确保安全，测试完之后要将 PortSwiggerCA 这个根证书从PC和Android系统信任列表中删除。如果不是临时使用，应该要用自己的证书代替Burp提供的证书。</em></p>
<p>这个故事告诉我们，中间人攻击并不是那么复杂的事情。特别是终端应用开发者，不可寄望于通过加密传输来隐藏应用到服务器的协议细节，要逆向工程是很容易的。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Text to UML diagram</title>
    <url>/blog/2014/01/20/text-to-uml-diagram/</url>
    <content><![CDATA[<p>Usually I used <a href="http://astah.net/">Astah</a> to draw UML diagram to put into design document in MS Word or PowerPoint format. The separation of the source and generated file making management of the UML model file a problem. And also it’s annoying to adjust a large amount of elements by dragging with mouse whenever you add something in the diagram. For a coder, typing on keyboard is faster than drawing with mouse.</p>
<p>Now I switch to <a href="http://plantuml.com/">PlantUML</a>. Just write UML in its <a href="http://en.wikipedia.org/wiki/Domain-specific_language">DSL</a> and PlantUML generates the diagram. It supports most of the frequent used UML diagrams, which I use most are sequence diagram, class diagram and state diagram. Then I paste the generated diagram into slides (design document) and keep the “source” in note. No need to wonder where to find original UML model file when I need to update the diagram.</p>
<p>The core of PlantUML is simply a jar file. It parses the text input and depends on <em>dot</em> tool from <a href="http://www.graphviz.org/">Graphviz</a> for graph generation (except sequence diagram). </p>
<p>There are <a href="http://www.plantuml.com/running.html">a bunch of ways</a> to run PlantUML. I highlight some of them I prefer:</p>
<ul>
<li>Online editor. Best choice if you’re too lazy to install anything on your computer.</li>
<li>Desktop (Windows): <a href="https://code.google.com/p/plant-uml-file-watcher/">PlantUML File Watcher</a></li>
<li>Embedded into Octopress blog platform. The below examples are using it.</li>
<li>IDE plugin. Easy way to keep UML together with source code.</li>
</ul>
<p>The syntax of PlantUML’s DSL is quite intuitional, you can start to use it by following example.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package ConsentObject &lt;&lt;Rect&gt;&gt; &#123;</span><br><span class="line">  Consent : id</span><br><span class="line">  Scope : key</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">Client - User</span><br><span class="line">(Client, User) . Consent</span><br><span class="line"> </span><br><span class="line">Consent - &quot;*&quot; Scope</span><br><span class="line"> </span><br><span class="line">Consent &quot;1&quot; -- &quot;1..*&quot; AccessToken</span><br></pre></td></tr></table></figure>

<p>The generated diagram:</p>
<img  src=http://www.plantuml.com/plantuml/svg/K-0gI4pEJanFLN3EpojEpIlnJyfAJIvHiB490b9sTWhLN0emAGKhXSmK83SuERyW5SZ9JgtagkLIu7BEoGJ9wYg45gSMSMb0k3fWdgQ27amtI27K75q59IqbY358eag6IWgwG2b3FJsWh6DoScfnSKX-TceU0000> 

<p>A sequence diagram example:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title OAuth 2.0 Authorization Code Grant</span><br><span class="line"></span><br><span class="line">actor    UserAgent       as UA</span><br><span class="line">participant Application     as APP</span><br><span class="line">participant OAuthServer     as OAuth</span><br><span class="line">participant ResourceServer  as RS</span><br><span class="line"></span><br><span class="line">== Application requests authorization from user ==</span><br><span class="line">UA-&gt;APP: </span><br><span class="line">APP--&gt;UA:redirect to OAuth Server</span><br><span class="line">UA-&gt;OAuth: GET /authorize?response_type=code</span><br><span class="line">ref over UA, OAuth: user authentication\nuser confirms reqest</span><br><span class="line">OAuth--&gt;UA: redirect to App with authorization_code</span><br><span class="line">UA-&gt;APP: authorization_code</span><br><span class="line"></span><br><span class="line">== Application retrieve access token ==</span><br><span class="line">APP-&gt;OAuth: POST /token with authorization_code</span><br><span class="line">ref over APP, OAuth: client authentication</span><br><span class="line">APP&lt;--OAuth: access_token</span><br><span class="line"></span><br><span class="line">== Application access protected resource ==</span><br><span class="line">APP-&gt;RS: getResource with access_token</span><br><span class="line">RS-&gt;OAuth: validateToken(access_token)</span><br><span class="line">RS--&gt;APP: result</span><br></pre></td></tr></table></figure>

<img  src=http://www.plantuml.com/plantuml/svg/TP9FJuGm4CNl_HHpr4JKU2IYQOpPusvWkPbicZAxDh8KfyCQ_VIsfP35Fnm8RT_C-xsXRBX5MCk1N-7k-XR2XoNpfTZO3fviWx0YrR4GIhCb69_Q8Sa3TfpMoa4jHQ-8ZJQzbuFi-zReiKjIoCrc8Occ5T89QPB4hOMeH6S7qZZflAYiX2YAXGFX-u2E7QW5_fxi4GRF2aKXQfazU8GSX7zdsKCjSyB646e6jca4eqtKneqSLizRk9dQuYEXwstdSCUVFHRQpqSGxi46k5fUGQgAfg7ApoX1ldHnKzjkR-Ze0hD75h5Wn85p7XyFFen7MaJQHSSvoXzdlqV3PF24eBH6vtphD-p2FC8Kff2RTULJZaV_cSunVU6SKxSct89bqj3wFikIPFJTnUO_uH9JJvPzR6myxVYxPy2ook60F5s3H7VUigpc62VLcaOnRiF1nRdgCiZIqBp7qF8t>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title>Pebble</title>
    <url>/blog/2014/03/15/pebble/</url>
    <content><![CDATA[<img src="/blog/attachments/2014/3/pebbles.jpg" class="">

<p><a href="http://getpebble.com/">Pebble手錶</a>戴了兩個星期，如果用一句話來總結感受，那就是：基本滿意，但還沒到愛不釋手的程度，沒有帶來驚喜。</p>
<span id="more"></span>

<p>首先，Pebble真的是一隻手錶，可以看時間。如果你有幸用過各種『智能手環』，就會明白為什麼這麽說了。我戴過<a href="https://jawbone.com/up">Jawbone UP</a>一段時間，試過好多次下意識的擡起手腕來看，然後才想起那貨是沒有任何顯示的。</p>
<p>佩戴舒適度上說，Pebble還過得去，塑料錶帶的柔軟度不錯，反正我已經習慣了24小時戴在手腕上的感覺。在這之前，我都有十幾年沒有戴過手錶了吧。</p>
<p>外形應該是我最不在意的一項了，但不得不說 Pebble 外形上太普通。我的黑色版本，正面看弧形表面，與黑白顯示屏融為一體，還算有點現代感，但側面看就很『薯鈍』的樣子 —— 厚，按鈕粗曠，左邊還有很突兀的幾個充電觸點。</p>
<p>手錶用的是 144x168 的低分辨率黑白e-paper屏幕，在現在手機電腦都視網膜屏的時代，這個分辨率真是超低了。E-paper的對比度很高，無論什麼光線條件下都非常清晰，雖然分辨率低，實際顯示文字的效果還是不差的。圖像？就算了吧，除了像素少，這個屏還連灰度都顯示不了。不知道這個e-paper跟Kindle之類閱讀器的屏是不是同樣的技術，但看起來還是有區別：Pebble屏的像素邊緣很銳利，顯示直接改變沒有殘影，不像Kindle要全屏反色刷一次。</p>
<p>Pebble 可以安裝 app，當然了，否則就對不起 smart watch 這個名字。App 分為 watchface 和 watchapp 兩大類，無論是那種也不管大小，總共最多安裝8個，不知道它內部怎麼管理空間的。Watchface 只有一屏顯示信息，不能接受按鍵控制，最常見用途是顯示時間，當然也可以顯示其他信息，例如天氣、日曆之類。Watchapp就是可以與用戶交互的應用，可以有多屏，用戶通過菜單、控制按鈕來操作。</p>
<p>Pebble 的方便之處是它作爲手機的一個延伸的信息終端，手機可以將實時的信息推送到手表上，或者是在手表上顯示濃縮的手機應用的某些信息。前者例如，我以前經常會漏接電話或者漏看短信，因爲手機放袋裏聽不到聲音，現在戴著 Pebble 就不會了，因爲手表會振動提醒。後者例如一些跑步應用，能在 Pebble 上顯示速度、距離等關鍵信息，就不用拿手機出來看。</p>
<p>Pebble 最大的問題是操控不方便。表上有四個按鈕：上&#x2F;下&#x2F;Enter&#x2F;ESC，沒有觸摸屏，任何操作都只能靠按鍵選擇菜單項，因此經常要按好多次按鈕才能完全想要的操作。而 Pebble 的按鈕按起來又不算是特別方便，總之我是不會想在手表上做按超過一兩次按鈕的操作的。這種操控的不方便限制了app可以做的事情，感覺這個比起屏幕和表的硬件處理能力的限制還要大。Pebble 也不支持 app 後台運行，要求在手錶上跑多任務，電池撐不住吧，但沒有多任務也造成一些類型的 app 沒法做了。</p>
<p>至于耗電，目前還不至于很大問題。官方宣傳可以用5-7天，我實際用下來只有3天，也不知道是軟件問題還是硬件問題。但3天其實還是可以接受的。</p>
<p>最後介紹一下我現在常用的app：</p>
<h5 id="Watchface"><a href="#Watchface" class="headerlink" title="Watchface"></a>Watchface</h5><img src="/blog/attachments/2014/3/postage_watchface.png" class="right">
<img src="/blog/attachments/2014/3/agenda_watchface.png" class="right">

<p>Agenda Watchface</p>
<p>: 在辦公室或者需要按日程做事的時候會用這個watchface，一眼就能看到當前時間和接下來的日程安排。</p>
<p>Postage</p>
<p>: 當我不需要看日程安排的時候，喜歡用這個face，夠簡潔，外圍的黑色與黑色表身融為一體。實際看起來比截圖好看很多。</p>
<h5 id="Watchapp"><a href="#Watchapp" class="headerlink" title="Watchapp"></a>Watchapp</h5><img src="/blog/attachments/2014/3/pebbleauth.png" class="right">

<p>PebbleAuth </p>
<p>: 二步認證的token生成器，相當於 Google Authenticator 運行在手錶上，這樣更加安全啦。現在除了 Google，LastPass 和 EverNote 都支持二步認證了。</p>
<p>Sleep as Android</p>
<p>: 我買 Pebble 就是因為看到 Sleep as Android 支持 Pebble 了，才動了心的。這個應用利用 Pebble 上的運動傳感器監控睡眠的深淺度，早上能夠在合適的淺睡眠週期通過振動叫醒。我以前就在用 Sleep as Android，但要用手機的運動傳感器，所以手機要放在床墊上，現在戴著手錶就行了，手機可以放遠一些。</p>
<img src="/blog/attachments/2014/3/sleepaspebble.png" class="">

]]></content>
      <tags>
        <tag>Gadget</tag>
      </tags>
  </entry>
  <entry>
    <title>中國電子地圖偏移</title>
    <url>/blog/2014/04/03/zhong-guo-di-tu-pian-yi/</url>
    <content><![CDATA[<p>幾年前我寫過對Google中國地圖偏移規律的分析(<a href="/blog/2009/12/26/Google-China-Map-offset-1/" title="Google中国地图偏移">1</a>)(<a href="/blog/2009/12/27/Google-China-Map-offset-2/" title="Google中国地图偏移 (续)">2</a>)，根據抓取到的偏移量數據，大概看出呈現了<code>sin(a)+sin(3a)</code>這樣的函數曲線規律，並且這個函數以不同頻率和幅度疊加了兩次。當時我推導出函數及其係數，利用它去校正偏移，在百公里範圍的區域內已經非常理想，但是在全國大範圍的不同區域，係數需要有點不同，也就是擬合函數還是差了一些低頻率的細節。不過當時的分析細節我也不敢在博客裏面寫，後來我也沒有再搞地圖方面的應用開發了，就把這個放下。</p>
<p>實際上這個地圖偏移並不是Google自己搞的算法，而是國家測繪局以立法的形式統一要求加的，稱為地形图非线性保密处理，所有從事國內電子地圖的廠商應該都得到了這個算法，實際上並起不到什麼所謂保護國家安全和國家利益的作用（保護行業壟斷者利益倒是真的），但是這個地圖偏移對地理信息處理和GPS技術的民用化起到了巨大的阻礙作用，近年各種與地理位置相關的應用如雨後春筍般湧現，但都為中國地圖的偏移而頭痛不已，後來由於下面提到的算法的流傳，問題得以解決，但增加很多不必要的複雜性和浪費開發、數據處理的人力。在我看來，這個地圖非線性加密處理在地理信息領域就像GFW在互聯網信息領域一樣，浪費了大量社會財富來對技術發展與應用進行封鎖。<a href="http://baike.baidu.com/view/2356807.htm#2_2">李成名</a>，你真的成名了。</p>
<p>感謝Internet，感謝open source，現在這個偏移算法在網上已經可以輕松找到了。</p>
<p>網上流傳的原始算法是<a href="http://emq.googlecode.com/svn/emq/src/Algorithm/Coords/Converter.java">這個Java文件</a>，然後有人整理過代碼，接力開發出多種語言版本。在『A Fork of Stuffs』博客裏，<a href="http://blog.csdn.net/coolypf/article/details/8686588">地球坐标系 (WGS-84) 到火星坐标系 (GCJ-02) 的转换算法</a>給出了C#實現，這個博客另外一篇<a href="http://blog.csdn.net/coolypf/article/details/8569813">火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换算法</a>也很有用。而使用比較方便應該是下面的github代碼庫：</p>
<ul>
<li><a href="https://github.com/googollee/eviltransform">googollee&#x2F;eviltransform</a>: C, go, JavaScript, php語言版本</li>
<li><a href="https://github.com/Leask/EvilTransform">Leask&#x2F;EvilTransform</a>: Java和C#語言版本，似乎就是將前面介紹的代碼收集到github裏面，沒有改動。</li>
</ul>
<p>另外，github裏還有一個項目 <a href="https://github.com/fourcels/lbs">fourcels&#x2F;lbs</a> 是用查表法來糾偏的，裏面的偏移數據（共9M）說不定就是早期從Google地圖服務上抓下來的。但現在有了算法，查表法的價值就不大了。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
      </tags>
  </entry>
  <entry>
    <title>跑步日記</title>
    <url>/blog/2014/06/21/run/</url>
    <content><![CDATA[<p>今天難得的陰天，早上下過雨，溫度30℃出頭，沒有早幾天那麽酷熱，也有點風。<br>磨磨蹭蹭，早上10點半才出發。熱身段過後，按5’30”配速，從江灣橋過河南，沿江邊一直往東跑。</p>
<p>過了廣州塔，就到獵德大橋，大概10km位置。這時我面臨著一個艱難的選擇：上橋，就過到珠江新城然後沿江邊往回走，穿過二沙島回家，這是跑過好多次的路線，大概十七八公里左右。如果直走，就一直要到琶洲大橋才能過橋，到了北岸往回跑，要到家路程估計有近30公里，這時我從沒有跑過的距離。在我的大腦還在激烈思想鬥爭的時候，雙腿肌肉已經作出了決定——直走。</p>
<p>考慮到前路漫漫，將速度下降到5’50”。這時接近正午時分，雖然沒有太陽直射，人也比較熱，心率上升到接近160。找賣水的地方，但琶洲一帶很荒蕪，估算著也撐到過了琶洲橋後也沒問題。</p>
<p>13.5km處上橋，這橋真長，足足一公里。過了琶洲大橋下來，14.6km，去超市買運動飲料喝，停了幾分鐘。這麽一停下來，就沒法重新跑起來了，完全不想動。繼續跑後氣喘得很厲害，隔夜風爐都吹得著，腳擡不起，步頻下降了很多。將速度下降到6’30”了，希望能夠慢慢適應過來。堅持了一段，毫無起色，終於在過了華南大橋底，到了17km處放棄了。不清楚為什麼買水停了一下後狀態會突然變得那麽差，看回數據，過橋前的速度還是保持得比較平穩的5’50”左右。以前我也有經驗是不能停，一旦停下就很難重新回復狀態，但慢慢適應一段時間後還是可以的，這次完全不行。</p>
<p>找不到廁所，鑽進樹叢裏面尿尿。舒暢完後渾身酥軟，一轉身沒站穩跟身後樹幹長滿刺的木棉樹來了個親密接觸。</p>
<p>沿著江邊走，中午很寧靜，人不多，只有知了在不知疲倦的叫。突然覺得這個環境很舒服，享受一下時光吧，在榕樹陰下的石凳坐下，冰冷的石頭冷卻著大腿的肌肉，涼風吹拂身上的汗水。出來跑步什麼都沒有帶，不用再習慣性的拿手機來看，就讓時間的碎片留白，就是那樣靜坐著，看著開闊的江面，感覺那TMD不就是幸福麽。所以人都是自己感動自己的，要不哪來那麽多感人的事情。</p>
<p>歇了一會，將運動飲料全喝完了，感覺恢復了一些，起來繼續跑一下，邊跑盤算著後面還能再跑多遠。但是，跑累了的時候就是靠內心去堅持的，原來一直習慣了喘著氣的狀態，可以一直跑下去，一旦享受過停下休息的舒服後就承受不了之前那種苦了。最後跑到珠江新城地鐵站收官，累計20.5km。後面這段其實心率還在正常範圍，肌肉沒有不適，就是步頻慢了，按理說這個狀態還可以繼續跑上好一段距離的。</p>
<p>另一方面，今天跑的狀態看來確實不是那麽好，跑完幾個小時的感覺比以往跑這個距離要累。<br>回來看數據，感覺步頻似乎是反應體力狀態的一個直觀指標，從8.4km起步頻明顯下降了一個台階，而14.6km買水後步頻更是嚴重下降。另一方面，心率跟狀態有什麼關聯也還不是很清晰，每次跑步隨著疲勞累積，心率都是不斷升高的。但看以往的記錄，心率到160多速度依然保持的也有。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>Getting the Hang of Web Typography</title>
    <url>/blog/2014/08/23/getting-the-hang-of-web-typography/</url>
    <content><![CDATA[<p>读书笔记摘抄：《<a href="http://book.douban.com/subject/25741532/">众妙之门——网页排版设计制胜秘诀</a>》</p>
<h1 id="版式设计"><a href="#版式设计" class="headerlink" title="版式设计"></a>版式设计</h1><p>正文字号常见为12~14px。</p>
<p>标题与正文字号（font-size）的比例，比较流行的平均值是1.96。也就是将正文文字字号乘以2，就得到标题文字的字号。字号从传统值（6,7,8,9,10,11,12,14,16,18,21,24,36,48,60,72）或者斐波那契数列（8,13,21,34,55）中选择，可以得到更自然的版式效果。</p>
<p>计算行宽的简单方法：行宽&#x3D;字号*30。如果字号是10px，行宽就是300px，差不多等于一行65个字。</p>
<p>行高（line-height）受多种因素的影响：字体、字号、粗细、样式、行宽、字距等。行宽越宽，行高就需越大；字号越大，行高就需要越小。比较流行的行高与字号的比例是1.5。</p>
<p>段间距通常是行高的75%左右。</p>
<h1 id="字体分类"><a href="#字体分类" class="headerlink" title="字体分类"></a>字体分类</h1><p>网页设计中大多数字体可以分为五大类别：</p>
<h3 id="Geometric-Sans-无衬线几何字体"><a href="#Geometric-Sans-无衬线几何字体" class="headerlink" title="Geometric Sans 无衬线几何字体"></a>Geometric Sans 无衬线几何字体</h3><img src="/blog/attachments/2014/8/geometric.jpg" class="">

<p>这个类别实际包括了几何风格（Geometric）、现实风格（Realist）和奇异风格（Grotesk）三类字体。它们基于精准几何形体，每个字母笔画的宽度都是一样的，这种设计生动体现了“少即是多”的极简派的设计思想。</p>
<ul>
<li>运用得当：干净、感性、现代而通用；</li>
<li>运用不当：冰冷、理性、枯燥。</li>
</ul>
<p><em>Examples of Geometric&#x2F;Realist&#x2F;Grotesk Sans:</em> Helvetica, Univers, Futura, Avant Garde, Akzidenz Grotesk, Franklin Gothic, Gotham.</p>
<h3 id="Humanist-Sans-无衬线人文字体"><a href="#Humanist-Sans-无衬线人文字体" class="headerlink" title="Humanist Sans 无衬线人文字体"></a>Humanist Sans 无衬线人文字体</h3><img src="/blog/attachments/2014/8/humanist.jpg" class="">

<p>由手写体衍化而来，它们中的一些可能看上去干净而现代，但仍旧保留了一些手写体的特点。一般具有更多细节、更少的一致性，而且字体较窄笔画偏粗。</p>
<ul>
<li>运用得当：既现代又人文；</li>
<li>运用不当：缺乏力度，不够权威。</li>
</ul>
<p><em>Examples of Humanist Sans:</em> Gill Sans, Frutiger, Myriad, Optima, Verdana.</p>
<h3 id="Old-Style-古体字"><a href="#Old-Style-古体字" class="headerlink" title="Old Style 古体字"></a>Old Style 古体字</h3><img src="/blog/attachments/2014/8/old-style.jpg" class="">

<p>特点是粗细笔画间的对比微妙，还有字母的弧度朝左偏。</p>
<ul>
<li>运用得当：古典，传统而易读；</li>
<li>运用不当：依然是古典和传统（与其他不协调）。</li>
</ul>
<p><em>Examples of Old Style:</em> Jenson, Bembo, Palatino, Garamond(尤其显得传统)</p>
<h3 id="Transitional-and-Modern-过渡体和现代体"><a href="#Transitional-and-Modern-过渡体和现代体" class="headerlink" title="Transitional and Modern 过渡体和现代体"></a>Transitional and Modern 过渡体和现代体</h3><img src="/blog/attachments/2014/8/trans.jpg" class=""><img src="/blog/attachments/2014/8/modern.jpg" class="">

<p>这两类字体是启蒙思想的产物，字体设计师尝试改变平凡而低调的古体字的字形，使其变得更具几何特点、更锐利、更艺术。</p>
<ul>
<li>运用得当：展现出力量感、时尚感和活力；</li>
<li>运用不当：不伦不类——若说古典，又过于显眼和繁复；若说现代，又显得有点俗气。</li>
</ul>
<p><em>Examples of transitional typefaces:</em> Times New Roman, Baskerville.</p>
<p><em>Examples of Modern serifs:</em> Bodoni, Didot.</p>
<h3 id="Slab-Serifs-带衬线的板式字体"><a href="#Slab-Serifs-带衬线的板式字体" class="headerlink" title="Slab Serifs 带衬线的板式字体"></a>Slab Serifs 带衬线的板式字体</h3><img src="/blog/attachments/2014/8/slab.jpg" class="">

<p>笔画与其他衬线字体很像（形式简洁，笔画粗细对比相对微弱），但较为特别的是笔画末端有又方又硬的衬线。</p>
<p>这类字体可以传达出一种权威感，如Rockwell字体的粗体；也可以展现出友好的感觉，如Archer。独特的块状衬线能为版面带来特别的气息，不过一旦用错也尤为显眼。</p>
<p><em>Examples of Slab Serifs:</em> Clarendon, Rockwell, Courier, Lubalin Graph, Archer.</p>
<h3 id="Reference"><a href="#Reference" class="headerlink" title="Reference:"></a>Reference:</h3><ul>
<li><a href="http://www.smashingmagazine.com/2010/12/14/what-font-should-i-use-five-principles-for-choosing-and-using-typefaces/">What Font Should I Use?</a></li>
<li>Making Sense of Type Classification (<a href="http://www.smashingmagazine.com/2013/04/17/making-sense-type-classification-part-1/">part 1</a>) (<a href="http://www.smashingmagazine.com/2013/06/19/making-sense-of-type-classification-part-2/">part 2</a>)</li>
</ul>
<h1 id="CSS-Font-Stack"><a href="#CSS-Font-Stack" class="headerlink" title="CSS Font Stack"></a>CSS Font Stack</h1><p>创建字体栈的基本公式：最佳字体 + 次佳字体 + 常见的相似字体 + 相似的网页安全字体 + 通用字体。</p>
<p>在字体栈中要注意字体的字形比例。例如网页安全字体中，Verdana字形很宽，Arial&#x2F;Helvetica相对较窄，它们不应该同时存在于版式中；Times和Georgia也是同理。</p>
<p>常见的字体栈参看 <a href="http://www.smashingmagazine.com/2009/09/22/complete-guide-to-css-font-stacks/">Guide to CSS Font Stacks</a></p>
]]></content>
      <tags>
        <tag>UX</tag>
        <tag>Reading</tag>
        <tag>Design</tag>
      </tags>
  </entry>
  <entry>
    <title>PlantUML 简介</title>
    <url>/blog/2014/08/23/plantuml/</url>
    <content><![CDATA[<p>关于PlantUML的简介。</p>
<iframe src="//www.slideshare.net/slideshow/embed_code/38238529" width="597" height="486" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/aleung/plantuml" title="PlantUML" target="_blank">PlantUML</a> </strong> from <strong><a href="http://www.slideshare.net/aleung" target="_blank">aleung</a></strong> </div>]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>UML</tag>
      </tags>
  </entry>
  <entry>
    <title>是灰霾吗？</title>
    <url>/blog/2014/09/16/smog/</url>
    <content><![CDATA[<img src="/blog/attachments/2014/9/smog.png" class="">

<p>看 Google Maps 上面的卫星图，珠江新城一带一片灰蒙蒙，但是有个奇怪的现象：高层建筑的楼顶似乎会清晰一些。</p>
<span id="more"></span>

<p>在图上最显眼的超高层建筑就是东塔和西塔了，东塔目前仍在建（好像已经封顶了），不知道卫星图是什么时候的，看起来也起码建得跟西塔一样高了。查了一下西塔（IFC-广州国际金融中心）的高度是440米。在图上看出西塔的2&#x2F;3高度以下要灰一些，另外在建的东塔和旁边一个同样在建但高度只有1&#x2F;3左右的建筑的屋顶的清晰度也有对比。是不是因为接近地面的灰霾影响了通透度，而灰霾主要沉积在距离地表二三百米以内的低空？</p>
]]></content>
      <tags>
        <tag>Misc</tag>
        <tag>EnvironmentalProtection</tag>
      </tags>
  </entry>
  <entry>
    <title>2014广马数据分析</title>
    <url>/blog/2014/11/26/2014-guangzhou-marathon-analysis/</url>
    <content><![CDATA[<p><em>Updated 2014-11-27: 之前漏了一些号码段，重新补上更新了。</em></p>
<p>2014广州马拉松在网上可以根据号码查询成绩和名次了，但是没有开放完整成绩册的数据下载。出于好奇，想知道成绩的分布：跑330以内的有多少人？400呢？有多少人最后关门一刻才冲线的？于是写了个程序把数据抓下来分析。</p>
<img src="/blog/attachments/2014/11/groups.png" class="right">

<p>数据不包含号码以0开头的专业选手（大概几十人）。由于不知道确切号码段，没完赛选手的数据有可能有误。</p>
<p>首先是各组的人数，男女比例全马约8:1，半马约3.6:1。跑步的妹子相对还是比较少，女子只要完赛了，总能够拿到个几百名的名次的 :)</p>
<p>然后看成绩分布。</p>
<p>半程组里有15%男选手和22%女选手未能完成比赛，而全程组不能完赛的男女选手比例分别是14%和21%。不一定是女子毅力不行，是相同的关门时间对女子更困难些吧。但有意思的是虽然全程更痛苦，但完成率跟半程是基本上一样的。</p>
<p>半马组，一半的男选手在2:30内跑完，一半的女选手在2:45内跑完。全马组，这个数字是男子5:00，女子5:20。有能力5小时内跑完全程的，已经强过一半的人了。</p>
<p>有几十人是过了关门时间才冲线的，依然有成绩，看来组委会还不是那么不近人情。</p>
<img src="/blog/attachments/2014/11/half-marathon.png" class="">

<img src="/blog/attachments/2014/11/marathon.png" class="">

<p>能跑330是什么水平？400呢？看看下面的表格，比例是表示有多少人在这个时间内完赛。</p>
<ul>
<li>男子全程</li>
</ul>
<table>
<thead>
<tr>
<th align="right">时间</th>
<th align="right">比例</th>
</tr>
</thead>
<tbody><tr>
<td align="right">3:30</td>
<td align="right">4.0%</td>
</tr>
<tr>
<td align="right">4:00</td>
<td align="right">15.6%</td>
</tr>
<tr>
<td align="right">4:30</td>
<td align="right">32.1%</td>
</tr>
<tr>
<td align="right">5:00</td>
<td align="right">52.0%</td>
</tr>
<tr>
<td align="right">5:30</td>
<td align="right">67.2%</td>
</tr>
<tr>
<td align="right">6:00</td>
<td align="right">85.5%</td>
</tr>
</tbody></table>
<ul>
<li>女子全程</li>
</ul>
<table>
<thead>
<tr>
<th align="right">时间</th>
<th align="right">比例</th>
</tr>
</thead>
<tbody><tr>
<td align="right">3:30</td>
<td align="right">1.3%</td>
</tr>
<tr>
<td align="right">4:00</td>
<td align="right">5.7%</td>
</tr>
<tr>
<td align="right">4:30</td>
<td align="right">17.1%</td>
</tr>
<tr>
<td align="right">5:00</td>
<td align="right">38.6%</td>
</tr>
<tr>
<td align="right">5:30</td>
<td align="right">58.0%</td>
</tr>
<tr>
<td align="right">6:00</td>
<td align="right">78.2%</td>
</tr>
</tbody></table>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>API metrics demo</title>
    <url>/blog/2014/12/14/api-metrics-demo/</url>
    <content><![CDATA[<p>This demo uses Graphite and Grafana to store and present API metrics. The demo environment is installed on Ubuntu.</p>
<h2 id="Graphite"><a href="#Graphite" class="headerlink" title="Graphite"></a>Graphite</h2><p>Graphite has two major components. </p>
<p>The first is <code>carbon-cache</code>, which is a daemon process to receive metrics data from client through TCP connection and store into filesystem via <code>whisper</code> database library.</p>
<p>Another one is a webapp. It provides HTTP API for generating graphs and retrieving raw data.</p>
<p>Since Ubuntu 14.04, it’s easy to install graphite with <code>apt-get</code>:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install graphite-web graphite-carbon</span><br></pre></td></tr></table></figure>

<p>Both <code>carbon</code> and <code>graphite-web</code> are installed as python module. </p>
<p>Start carbon:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo service carbon-cache start</span><br></pre></td></tr></table></figure>

<p>Graphite-web is base on django framework. Read <code>/usr/share/doc/graphite-web/README</code> for how to setup graphite-web. A major steps is to create database and default data:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo graphite-manage syncdb</span><br><span class="line">sudo <span class="built_in">chown</span> _graphite:_graphite /var/lib/graphite/graphite.db</span><br></pre></td></tr></table></figure>

<p>For testing Graphite, you can start Graphite with the Django lightweight Web server for development:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo -u _graphite /usr/bin/django-admin runserver --settings graphite.settings 0.0.0.0:8080</span><br></pre></td></tr></table></figure>

<p>To install on Apache, follow the guide in <code>/usr/share/doc/graphite-web/README</code>. </p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get install libapache2-mod-wsgi</span><br><span class="line">sudo <span class="built_in">cp</span> /usr/share/graphite-web/apache2-graphite.conf /etc/apache2/sites-available/graphite-web.conf</span><br><span class="line">sudo a2ensite graphite-web</span><br><span class="line">sudo service apache2 restart</span><br></pre></td></tr></table></figure>

<p>Graphite-web 0.9.12 only works under URL root path, it conflict with Apache default site setting. I modify <code>/etc/apache2/sites-enabled/graphite-web.conf</code> to make it work in a virtual host on port 81.</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Listen</span> <span class="number">81</span></span><br><span class="line"><span class="section">&lt;VirtualHost *<span class="number">:81</span>&gt;</span></span><br><span class="line"> ...</span><br><span class="line"><span class="section">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></table></figure>

<p>Reference:</p>
<ul>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-graphite-on-an-ubuntu-14-04-server">https://www.digitalocean.com/community/tutorials/how-to-install-and-use-graphite-on-an-ubuntu-14-04-server</a></li>
</ul>
<h2 id="Grafana"><a href="#Grafana" class="headerlink" title="Grafana"></a>Grafana</h2><p>Download grafana package and extract to a directory. Configure Apache web server to make the grafana directory accessable.</p>
<p>Edit <code>config.js</code> (copy from <code>config.sample.js</code>) to enable graphite as datasource.</p>
<p>Because graphite-web is hosting on virtual host on port 81, which is different than where grafana is hosting, there is cross site script access restriction. Have to enable CORS (cross origin resource sharing) on graphite-web side.</p>
<p>Enable Apache mod_headers:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo a2enmod headers</span><br></pre></td></tr></table></figure>

<p>Add into <code>/etc/apache2/sites-enabled/graphite-web.conf</code>:</p>
<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">Header</span> set Access-Control-<span class="literal">Allow</span>-Origin <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="attribute">Header</span> set Access-Control-<span class="literal">Allow</span>-Methods <span class="string">&quot;GET, OPTIONS&quot;</span></span><br><span class="line"><span class="attribute">Header</span> set Access-Control-<span class="literal">Allow</span>-Headers <span class="string">&quot;origin, authorization, accept&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h2><p>Elasticsearch is used by Granfan as a database to persistent dashboard configuration. Search and analystics features of Elasticsearch isn’t used in this case. Without Elasticsearch Grafana still works, but unable to save any change to dashboard design. You have to export dashboard JSON and import next time you want to use it.</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.4.1.deb</span><br><span class="line">sudo dpkg -i elasticsearch-1.4.1.deb</span><br></pre></td></tr></table></figure>

<p>Elasticsearch is not starting on bootup by default. To setup as service, run:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo update-rc.d elasticsearch defaults 95 10</span><br></pre></td></tr></table></figure>

<p>To start manually, run:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/elasticsearch start</span><br></pre></td></tr></table></figure>

<p>To enable CORS (cross origin resource sharing), add below into <code>/etc/elasticsearch/elasticsearch.yml</code>:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p>The scala script <code>feed_graphite.scala</code> generates mock API metrics data for demo. The Grafana portal is defined as <code>api.json</code>. Both files are stored in this <a href="https://gist.github.com/aleung/1ec7e56bfa9448af920b">gist</a>.</p>
<p><img src="/blog/2014/12/14/api-metrics-demo/api-metrics-demo.png"></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>DataVisualization</tag>
      </tags>
  </entry>
  <entry>
    <title>Getting start with sbt</title>
    <url>/blog/2014/12/26/getting-start-with-sbt/</url>
    <content><![CDATA[<p>A shortened sbt tutorial for beginner and quick reference.</p>
<h2 id="Directory-structure"><a href="#Directory-structure" class="headerlink" title="Directory structure"></a>Directory structure</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lib/</span><br><span class="line">project/</span><br><span class="line">  Build.scala</span><br><span class="line">  plugins.sbt</span><br><span class="line">src/</span><br><span class="line">  main/</span><br><span class="line">    resources/</span><br><span class="line">    scala/</span><br><span class="line">    java/</span><br><span class="line">  test/</span><br><span class="line">built.sbt</span><br></pre></td></tr></table></figure>

<p>Source code can be placed in the project’s base directory. But usually people organize them into directory structure.</p>
<p>sbt by default uses the same directory structure as Maven for source files, all under <code>src/</code>.</p>
<p>sbt build definition files include <code>build.sbt</code> in project’s base drectory and other <code>.sbt</code> or <code>.scala</code> files in <code>project/</code> subdirectory.</p>
<p>The <code>project</code> directory <em>is another project embedded</em> which knows how to build the outer project. So it may have its <code>build.sbt</code> and <code>project</code> directory structure, which is recursive. <em>The build definition is an sbt project.</em></p>
<h2 id="Running"><a href="#Running" class="headerlink" title="Running"></a>Running</h2><p>Common sbt commands:</p>
<ul>
<li>clean</li>
<li>compile</li>
<li>test</li>
<li>testOnly &lt;testcase&gt;*</li>
<li>run &lt;argument&gt;*</li>
<li>package</li>
<li>reload</li>
</ul>
<p>sbt can ran in interactive mode or batch mode. In batch mode, specifying a space-seperated list of commands. For commands that take arguments, enclosing the command and arguments in quotes.</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sbt clean compile <span class="string">&quot;testOnly TestA TestB&quot;</span></span><br></pre></td></tr></table></figure>

<p>Prefixing a command with <code>~</code> will make the command run when any source files change. Press enter to stop watching for changes.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt; ~ compile</span><br></pre></td></tr></table></figure>

<h2 id="Build-definition"><a href="#Build-definition" class="headerlink" title="Build definition"></a>Build definition</h2><h3 id="sbt-build-definition-basic"><a href="#sbt-build-definition-basic" class="headerlink" title=".sbt build definition basic"></a>.sbt build definition basic</h3><h4 id="Project"><a href="#Project" class="headerlink" title="Project"></a>Project</h4><p><code>build.sbt</code> defines one or more <code>Project</code>s, which hold a list of Scala expressions called <code>settings</code>.</p>
<p>Top-level objects and classes are not allowed in <code>build.sbt</code>. Those should go in the <code>project/</code> directory as full Scala source files.</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> commonSettings = <span class="type">Seq</span>(</span><br><span class="line">  organization := <span class="string">&quot;com.example&quot;</span>,</span><br><span class="line">  version := <span class="string">&quot;0.1.0&quot;</span>,</span><br><span class="line">  scalaVersion := <span class="string">&quot;2.11.4&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> root = (project in file(<span class="string">&quot;.&quot;</span>)).</span><br><span class="line">  settings(commonSettings: _*).</span><br><span class="line">  settings(</span><br><span class="line">    name := <span class="string">&quot;hello&quot;</span></span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<p>On the left, <code>name</code>, <code>version</code> and <code>scalaVersion</code> are <em>keys</em>. Keys have a method called <code>:=</code>, which returns a <code>Setting[T]</code>, where <code>T</code> is the value type.</p>
<h4 id="Keys"><a href="#Keys" class="headerlink" title="Keys"></a>Keys</h4><p>There are three flavors of key: <code>SettingKey[T]</code>, <code>TaskKey[T]</code> and <code>InputKey[T]</code>.</p>
<p>A <code>TaskKey[T]</code> is said to define a <em>task</em>. </p>
<p>A <code>InputKey[T]</code> defines a <em>input task</em>, which parses user input and produce a task to run.</p>
<p>For a setting, the value will be computed once at project load time. For a task, the computation will be re-run each time the task is executed.</p>
<p>Built-in keys are fields in object <code>sbt.Keys</code>, which are implicitly imported so can be directly referred.</p>
<p>Custom keys may be defined with their respective creation methods: <code>settingKey</code>, <code>taskKey</code>, and <code>inputKey</code>. </p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> hello = taskKey[<span class="type">Unit</span>](<span class="string">&quot;An example task&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> root = (project in file(<span class="string">&quot;.&quot;</span>)).</span><br><span class="line">  settings(</span><br><span class="line">    hello := &#123; println(<span class="string">&quot;Hello!&quot;</span>) &#125;</span><br><span class="line">  )</span><br></pre></td></tr></table></figure>

<h3 id="Bare-sbt-build-definition"><a href="#Bare-sbt-build-definition" class="headerlink" title="Bare .sbt build definition"></a>Bare .sbt build definition</h3><p><em>Bare .sbt build definition</em> is an old style which is not recommended to use.</p>
<p>Bare .sbt build definition doesn’t explicitly define a <code>Project</code>, it implicitly deines one based on the location of the <code>.sbt</code> file. The <code>.sbt</code> file consists of a list of <code>Setting[_]</code> expressions.</p>
<p>Before sbt 0.13.7, settings must be separated by blank lines.</p>
<h2 id="Library-dependencies"><a href="#Library-dependencies" class="headerlink" title="Library dependencies"></a>Library dependencies</h2><p>To add unmanaged dependencies, simplily drop jar files in <code>lib/</code>.</p>
<p>Managed dependencies are specified by <code>libraryDependencies</code> key in <code>build.sbt</code>.</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">libraryDependencies += groupID % artifactID % revision % configuration</span><br></pre></td></tr></table></figure>

<p>If you use double %% between the groupID and artifactID, sbt will add your project’s Scala version to the artifact name.</p>
<p>Assuming the scalaVersion for your build is 2.11.1, the following adds <code>org.scala-tools:scala-stm_2.11.1:0.3</code>:</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">libraryDependencies += <span class="string">&quot;org.scala-tools&quot;</span> %% <span class="string">&quot;scala-stm&quot;</span> % <span class="string">&quot;0.3&quot;</span></span><br></pre></td></tr></table></figure>

<p>By default, if omitted, configuration is “compile”. A common used value is “test”.</p>
<p>sbt uses Apache Ivy to implement managed dependencies. Advanced usage of revision and configuration can follow Ivy document.</p>
<p>sbt uses the standard Maven2 repository by default. To add additional repository, add a <code>resolver</code>:</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">resolvers += <span class="string">&quot;Local Maven Repository&quot;</span> at <span class="string">&quot;file://&quot;</span>+<span class="type">Path</span>.userHome.absolutePath+<span class="string">&quot;/.m2/repository&quot;</span></span><br><span class="line"></span><br><span class="line">resolvers += <span class="string">&quot;Sonatype OSS Snapshots&quot;</span> at <span class="string">&quot;https://oss.sonatype.org/content/repositories/snapshots&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="Multiple-projects"><a href="#Multiple-projects" class="headerlink" title="Multiple projects"></a>Multiple projects</h2><p>Multiple projects can be grouped under one project. </p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> root = (project in file(<span class="string">&quot;.&quot;</span>)).</span><br><span class="line">  aggregate(util, core)</span><br><span class="line"></span><br><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> util = project</span><br><span class="line"></span><br><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> core = project</span><br></pre></td></tr></table></figure>

<p>Each sub-project has its own directory. In above example the directory name is same as the project’s ID. The following is a more explicit way: </p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> core = project in file(<span class="string">&quot;core&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>If a project is not defined for the root directory in the build, sbt creates a default one that aggregates all other projects in the build. </p>
<p>A project may depend on other projects:</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">lazy</span> <span class="keyword">val</span> core = project.dependsOn(util, api)</span><br></pre></td></tr></table></figure>

<p><code>foo dependsOn(bar)</code> means that the <code>compile</code> configuration in foo depends on the <code>compile</code> configuration in bar. You can declare other configuraiton dependency, for example, <code>dependsOn(bar % &quot;test-&gt;test;compile-&gt;compile&quot;)</code>.</p>
<h2 id="Using-plugins"><a href="#Using-plugins" class="headerlink" title="Using plugins"></a>Using plugins</h2><p>Declares the plugin dependency in <code>project/plugins.sbt</code>. The file name can be different, you may create one sbt file for one plugin.</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">addSbtPlugin(<span class="string">&quot;com.typesafe.sbt&quot;</span> % <span class="string">&quot;sbt-site&quot;</span> % <span class="string">&quot;0.7.0&quot;</span>)</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Scala</tag>
      </tags>
  </entry>
  <entry>
    <title>Ivy Introduction for Maven User</title>
    <url>/blog/2014/12/26/ivy-introduction-for-maven-user/</url>
    <content><![CDATA[<p>由于 sbt 使用 Ivy 做依赖管理，必须了解一下 Ivy 的基础知识。这里从熟悉 Maven 的用户的角度简单描述一下 Ivy。</p>
<h2 id="共同点"><a href="#共同点" class="headerlink" title="共同点"></a>共同点</h2><p>Maven的功能要比 Ivy 多很多，Maven 既管 build 也管依赖，而Ivy 仅仅是负责依赖管理。但就在依赖管理方面，两者在概念、模型、功能等方面都还是比较相似的。</p>
<p>对于 artifact 的标识，都是使用 groupID, artifactID, version 三元组，不过 Ivy 叫它们为 organization, module name, revision。Ivy 兼容 Maven 2 metadata，可以直接使用 Maven 2 repository。</p>
<h2 id="Configuration-x2F-Scope"><a href="#Configuration-x2F-Scope" class="headerlink" title="Configuration &#x2F; Scope"></a>Configuration &#x2F; Scope</h2><p>Ivy 有个重要的概念叫 configuration，在 Maven 里类似的对应是 scope，但是 Ivy 的 configuration 比 Maven 的 scope 要灵活得多。</p>
<p>一个模块可以有多个 configuration，每个 configuration 包含一组外部模块依赖的声明（实际的配置是反过来的，每个依赖声明会标识自己在那种 configuration 中生效）。Configuration 可以是跟 Maven scope 类似的 compile, runtime 和 test，也可以任意定义。例如，某个模块既可以支持 Oracle 也可以支持 MySQL，当使用不同数据库时，需要依赖的模块是不同的，就可以分别在 oracle 和 mysql 两个 configuration 中定义各自需要的依赖。</p>
<p>Ivy 的 configuration 在依赖传递管理方面，比 Maven 要强。除了可以定义在一个 configuation 中需要依赖某个模块，还可以定义依赖这个模块时，会使用它的哪个 configuration，只有指定的 configuration 中的依赖才会传递进来。这个机制称为 configuration mapping。</p>
<p>下面的例子中，声明了在 default configuration 中需要依赖 hibernate，并且包含 hibernate 的 proxool 和 oscache 这两种 configuration 中的依赖。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span> <span class="attr">org</span>=<span class="string">&quot;hibernate&quot;</span> <span class="attr">name</span>=<span class="string">&quot;hibernate&quot;</span> <span class="attr">rev</span>=<span class="string">&quot;2.1.8&quot;</span> <span class="attr">conf</span>=<span class="string">&quot;default-&gt;proxool,oscache&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>Configuration 可以扩展（继承）另一个 configuration，可以设置外部可见性。</p>
<h2 id="Repository"><a href="#Repository" class="headerlink" title="Repository"></a>Repository</h2><p>Maven 的 repository 必须是网络服务（local 除外，local repository 本质上相当于 cache），Ivy 除了支持Maven 2 repository，也支持指定文件系统路径作为repository，还有各种各样其他的存储方式。</p>
<p>Maven 当配置了多个 repository 时，是按照配置的顺序一一查找，找到 artifact 为止。Ivy 的 artifact 查找是由 resolver 来负责，一个 resolver 对应一个 repository，有些特殊的 resolver 可以将多个 resolver 组合起来使用，例如 chain resolver 和 dual resolver。缺省的 resolver 就是一个 chain resolve，按照 local, shared, public的顺序去访问这些 repository。Ivy 的组织要比 Maven 更灵活一些。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Trouble shooting: Windows响应缓慢</title>
    <url>/blog/2014/12/30/windows-troubleshooting/</url>
    <content><![CDATA[<p>最近一个星期，电脑出现了缓慢的现象：打开任何应用，窗口都要等待上一段时间才能出现。</p>
<p>在 <a href="http://technet.microsoft.com/en-us/sysinternals/bb896653">Process Explorer</a> 中看到进程已经出现，也没有什么CPU占用，但窗口就是不出来，好像是要等到什么操作超时。这里如果能够查看调用栈，应该就能知道程序卡在什么地方。</p>
<p>上网搜索一下，看到一些文章提到 troubleshoot Windows 问题，都用到了 WinDbg 来分析进程调用栈。这篇<a href="http://www.codeproject.com/Articles/6084/Windows-Debuggers-Part-A-WinDbg-Tutorial">文章</a>简要介绍了 WinDbg 的使用方法（不过可能文章年代过于久远，有些细节已经对不上了）。于是安装相应软件，实操一下。</p>
<p>只是用到 WinDbg 的一些皮毛功能，包括这些命令：</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td>~</td>
<td>列出所有线程</td>
</tr>
<tr>
<td>k <em>5</em></td>
<td>显示当前线程的stack trace，如果附带数字则限制打印条数</td>
</tr>
<tr>
<td>kb</td>
<td>显示stack trace，包含前三个调用参数</td>
</tr>
<tr>
<td>~n[cmd]</td>
<td>对n号线程执行 <em>cmd</em> 操作</td>
</tr>
<tr>
<td>~*[cmd]</td>
<td>对所有线程执行操作，如 <code>~*k 5</code></td>
</tr>
<tr>
<td>~ns</td>
<td>切换到n号线程</td>
</tr>
</tbody></table>
<p>WinDbg 可以 attach 到一个执行中的进程。但我只是想看看某个时刻那个进程在干什么，用 Process Explorer 创建进程的 minidump 更加简单，在 GUI 中选择进程，右键菜单选择 dump 就能创建出 dump 文件，可以多 dump 几次，然后用WinDbg 打开 dump 文件查看。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Loading Dump File [C:\tmp\2014-12\notepad++.dmp]</span><br><span class="line">User Mini Dump File: Only registers, stack and portions of memory are available</span><br><span class="line"></span><br><span class="line">Symbol search path is: srv*c:\LocalSymbols* http://msdl.microsoft.com/download/symbols</span><br><span class="line">Executable search path is:</span><br><span class="line">Windows 7 Version 7601 (Service Pack 1) MP (4 procs) Free x86 compatible</span><br><span class="line">Product: WinNt, suite: SingleUserTS</span><br><span class="line">Machine Name:</span><br><span class="line">Debug session time: Tue Dec 30 15:53:27.000 2014 (UTC + 8:00)</span><br><span class="line">System Uptime: not available</span><br><span class="line">Process Uptime: 0 days 0:00:06.000</span><br></pre></td></tr></table></figure>

<p>这是 notepad++ 启动6秒钟后的 dump，看看这时有些什么线程，分别在干什么：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0:000&gt; ~*k 6</span><br><span class="line"></span><br><span class="line">.  0  Id: 1894.d54 Suspend: 0 Teb: 7efdd000 Unfrozen</span><br><span class="line">ChildEBP RetAddr </span><br><span class="line">00137980 74c314ab ntdll!NtWaitForSingleObject+0x15</span><br><span class="line">001379ec 764b1194 KERNELBASE!WaitForSingleObjectEx+0x98</span><br><span class="line">00137a04 764b1148 kernel32!WaitForSingleObjectExImplementation+0x75</span><br><span class="line">00137a18 74a5098c kernel32!WaitForSingleObject+0x12</span><br><span class="line">00137a28 74a4fcdc msctf!CCicEvent::Wait+0x15</span><br><span class="line">00137ca4 74a4fbd9 msctf!CAssemblyList::LoadFromCache+0x94</span><br><span class="line"></span><br><span class="line">   1  Id: 1894.107c Suspend: 0 Teb: 7efda000 Unfrozen</span><br><span class="line">ChildEBP RetAddr </span><br><span class="line">WARNING: Frame IP not in any known module. Following frames may be wrong.</span><br><span class="line">00b4ff88 764b338a 0x1e02d1</span><br><span class="line">00b4ff94 76ecbf32 kernel32!BaseThreadInitThunk+0xe</span><br><span class="line">00b4ffd4 76ecbf05 ntdll!__RtlUserThreadStart+0x70</span><br><span class="line">00b4ffec 00000000 ntdll!_RtlUserThreadStart+0x1b</span><br><span class="line"></span><br><span class="line">   2  Id: 1894.4bc Suspend: 0 Teb: 7efd7000 Unfrozen</span><br><span class="line">ChildEBP RetAddr </span><br><span class="line">02ecfe28 76ee1ad0 ntdll!NtWaitForWorkViaWorkerFactory+0x12</span><br><span class="line">02ecff88 764b338a ntdll!TppWorkerThread+0x216</span><br><span class="line">02ecff94 76ecbf32 kernel32!BaseThreadInitThunk+0xe</span><br><span class="line">02ecffd4 76ecbf05 ntdll!__RtlUserThreadStart+0x70</span><br><span class="line">02ecffec 00000000 ntdll!_RtlUserThreadStart+0x1b</span><br><span class="line"></span><br><span class="line">   3  Id: 1894.f30 Suspend: 0 Teb: 7ef9f000 Unfrozen</span><br><span class="line">ChildEBP RetAddr </span><br><span class="line">033afe28 76ee1ad0 ntdll!NtWaitForWorkViaWorkerFactory+0x12</span><br><span class="line">033aff88 764b338a ntdll!TppWorkerThread+0x216</span><br><span class="line">033aff94 76ecbf32 kernel32!BaseThreadInitThunk+0xe</span><br><span class="line">033affd4 76ecbf05 ntdll!__RtlUserThreadStart+0x70</span><br><span class="line">033affec 00000000 ntdll!_RtlUserThreadStart+0x1b</span><br><span class="line"></span><br><span class="line">   4  Id: 1894.2034 Suspend: 0 Teb: 7ef9c000 Unfrozen</span><br><span class="line">ChildEBP RetAddr </span><br><span class="line">04d1fdf4 76ecc6c5 ntdll!NtWaitForMultipleObjects+0x15</span><br><span class="line">04d1ff88 764b338a ntdll!TppWaiterpThread+0x33d</span><br><span class="line">04d1ff94 76ecbf32 kernel32!BaseThreadInitThunk+0xe</span><br><span class="line">04d1ffd4 76ecbf05 ntdll!__RtlUserThreadStart+0x70</span><br><span class="line">04d1ffec 00000000 ntdll!_RtlUserThreadStart+0x1b</span><br></pre></td></tr></table></figure>

<p>共有5个线程，只有0号线程在干活。看0号线程的完整调用栈：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0:000&gt; k</span><br><span class="line">ChildEBP RetAddr </span><br><span class="line">00137980 74c314ab ntdll!NtWaitForSingleObject+0x15</span><br><span class="line">001379ec 764b1194 KERNELBASE!WaitForSingleObjectEx+0x98</span><br><span class="line">00137a04 764b1148 kernel32!WaitForSingleObjectExImplementation+0x75</span><br><span class="line">00137a18 74a5098c kernel32!WaitForSingleObject+0x12</span><br><span class="line">00137a28 74a4fcdc msctf!CCicEvent::Wait+0x15</span><br><span class="line">00137ca4 74a4fbd9 msctf!CAssemblyList::LoadFromCache+0x94</span><br><span class="line">00137cd0 74a4e045 msctf!CAssemblyList::Load+0x39</span><br><span class="line">00137d00 74a4e863 msctf!EnsureAssemblyList+0xe9</span><br><span class="line">00137d28 74a4e30a msctf!CLangBarItemMgr::GetCurrentCategoryList+0x14</span><br><span class="line">00137d44 74a4e67d msctf!CLangBarItemMgr::_Init+0xea</span><br><span class="line">00137d58 74a7d0c4 msctf!CLangBarItemMgr::CreateInstance+0xea</span><br><span class="line">00137d78 74a57f99 msctf!CLangBarItemMgr_Ole::CreateInstance+0x6e</span><br><span class="line">00137d8c 76038ca6 msctf!CClassFactory::CreateInstance+0x14</span><br><span class="line">00137e14 76053170 ole32!CServerContextActivator::CreateInstance+0x172 [d:\w7rtm\com\ole32\com\objact\actvator.cxx @ 1000]</span><br><span class="line">00137e54 76038dca ole32!ActivationPropertiesIn::DelegateCreateInstance+0x108 [d:\w7rtm\com\ole32\actprops\actprops.cxx @ 1917]</span><br><span class="line">00137ea8 76038d3f ole32!CApartmentActivator::CreateInstance+0x112 [d:\w7rtm\com\ole32\com\objact\actvator.cxx @ 2268]</span><br><span class="line">00137ec8 76038ac2 ole32!CProcessActivator::CCICallback+0x6d [d:\w7rtm\com\ole32\com\objact\actvator.cxx @ 1737]</span><br><span class="line">00137ee8 76038a73 ole32!CProcessActivator::AttemptActivation+0x2c [d:\w7rtm\com\ole32\com\objact\actvator.cxx @ 1630]</span><br><span class="line">00137f24 76038e2d ole32!CProcessActivator::ActivateByContext+0x4f [d:\w7rtm\com\ole32\com\objact\actvator.cxx @ 1487]</span><br><span class="line">00137f4c 76053170 ole32!CProcessActivator::CreateInstance+0x49 [d:\w7rtm\com\ole32\com\objact\actvator.cxx @ 1377]</span><br><span class="line">00137f8c 76052ef4 ole32!ActivationPropertiesIn::DelegateCreateInstance+0x108 [d:\w7rtm\com\ole32\actprops\actprops.cxx @ 1917]</span><br><span class="line">001381ec 76053170 ole32!CClientContextActivator::CreateInstance+0xb0 [d:\w7rtm\com\ole32\com\objact\actvator.cxx @ 685]</span><br><span class="line">0013822c 76053098 ole32!ActivationPropertiesIn::DelegateCreateInstance+0x108 [d:\w7rtm\com\ole32\actprops\actprops.cxx @ 1917]</span><br><span class="line">001389fc 76059e25 ole32!ICoCreateInstanceEx+0x404 [d:\w7rtm\com\ole32\com\objact\objact.cxx @ 1334]</span><br><span class="line">00138a5c 76059d86 ole32!CComActivator::DoCreateInstance+0xd9 [d:\w7rtm\com\ole32\com\objact\immact.hxx @ 343]</span><br><span class="line">00138a80 76059d3f ole32!CoCreateInstanceEx+0x38 [d:\w7rtm\com\ole32\com\objact\actapi.cxx @ 157]</span><br><span class="line">Unable to load image C:\Windows\System32\kunlun.ime, Win32 error 0n2</span><br><span class="line">*** WARNING: Unable to verify timestamp for kunlun.ime</span><br><span class="line">*** ERROR: Module load completed but symbols could not be loaded for kunlun.ime</span><br><span class="line">00138ab0 71a86801 ole32!CoCreateInstance+0x37 [d:\w7rtm\com\ole32\com\objact\actapi.cxx @ 110]</span><br><span class="line">WARNING: Stack unwind information not available. Following frames may be wrong.</span><br><span class="line">00138ad4 71a86722 kunlun+0xf6801</span><br><span class="line">00138b0c 71a8648c kunlun+0xf6722</span><br><span class="line">00138bf0 71a4fb9e kunlun+0xf648c</span><br><span class="line">00138c58 71a51e63 kunlun+0xbfb9e</span><br><span class="line">00138c8c 71a51efc kunlun+0xc1e63</span><br><span class="line">00138cc4 71a51b90 kunlun+0xc1efc</span><br><span class="line">00138d34 71a4fc81 kunlun+0xc1b90</span><br><span class="line">00138d74 762d459a kunlun+0xbfc81</span><br><span class="line">00138d90 762d2900 imm32!CreateInputContext+0x195</span><br><span class="line">00138db8 762d1e8c imm32!InternalImmLockIMC+0xca</span><br><span class="line">00138dc8 762d34ae imm32!ImmLockIMC+0xf</span><br><span class="line">00138dec 750cd9e7 imm32!ImmSetActiveContext+0x62</span><br><span class="line">00138e08 750cadf9 user32!FocusSetIMCContext+0x28</span><br><span class="line">0013905c 750c75b7 user32!ImeSystemHandler+0x31f</span><br><span class="line">00139084 750c75ed user32!ImeWndProcWorker+0x2c9</span><br><span class="line">001390a4 750c62fa user32!ImeWndProcW+0x29</span><br><span class="line">001390d0 750c6d3a user32!InternalCallWinProc+0x23</span><br><span class="line">00139148 750c6de8 user32!UserCallWinProcCheckWow+0x109</span><br><span class="line">001391a4 750c6e44 user32!DispatchClientMessage+0xe0</span><br><span class="line">001391e0 76ea010a user32!__fnDWORD+0x2b</span><br><span class="line">001391f4 00fe7ae0 ntdll!KiUserCallbackDispatcher+0x2e</span><br><span class="line">001392d8 750f10d3 0xfe7ae0</span><br><span class="line">001392fc 750f1125 user32!CreateDialogIndirectParamAorW+0x33</span><br><span class="line">*** ERROR: Module load completed but symbols could not be loaded for notepad++.exe</span><br><span class="line">00139328 00516a73 user32!CreateDialogParamW+0x49</span><br><span class="line">0013934c 750caa3c notepad__+0x116a73</span><br><span class="line">00139400 750c8a5c user32!_CreateWindowEx+0x210</span><br><span class="line">0013943c 0041ee1c user32!CreateWindowExW+0x33</span><br><span class="line">0013a7cc 00584fd4 notepad__+0x1ee1c</span><br><span class="line">0013a7e4 00584fa0 notepad__+0x184fd4</span><br><span class="line">0013a7e8 00400000 notepad__+0x184fa0</span><br><span class="line">0013a7ec 00040d60 notepad__</span><br><span class="line">0013a7f0 00110d3c 0x40d60</span><br><span class="line">0013a7f4 00000000 0x110d3c</span><br></pre></td></tr></table></figure>

<p>最后的操作在msctf中等待某个事件，msctf 是 Microsoft Text Service；回溯调用栈，看见imm32（Input Method Manager）相关的调用，看来这个无响应的现象与输入法有关系。而 stack 中出现的 kunlun.ime 是必应输入法。</p>
<p>试试把正在使用的必应输入法卸载后重启，系统就正常了。重新安装必应输入法，重启后系统又出现无响应现象。</p>
<p>但比应输入法已经使用了一段时间了，为什么开始没有出现问题呢？回忆了一下，大概是在安装了 <a href="http://synergy-project.org/">Synergy</a> 之后出现的，Synergy共享鼠标键盘，也许有可能与输入法产生冲突。尝试一下，卸载synergy后，即使安装必应，系统也正常。看来可以确认是两者冲突，试了 Synergy 1.4.16&#x2F;17&#x2F;18 几个64bit版本都不能与 Bing IME 1.6.98.04 工作。</p>
<p>Ok，对我来说问题解决了，进一步的不再深究。这次学会了使用 WinDbg 查看调用栈的简单操作。</p>
]]></content>
      <tags>
        <tag>SysAdmin</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>大鹏新年马拉松</title>
    <url>/blog/2015/01/02/da-peng-new-year-marathon/</url>
    <content><![CDATA[<img src="/blog/attachments/2015/1/route.jpg" class="">

<img src="/blog/attachments/2015/1/elevation.jpg" class="">

<p>Pacer数据丢了，没法分析心率和速度 :( </p>
<p>净成绩 4:17:47，比广马要好些。之前训练很少，按照玩玩的心态去跑，没有设定时间目标，也没有预定配速，就按照舒服的速度跑。</p>
<span id="more"></span>

<p>起跑后速度不快，大家的速度也平均，不像其他赛事一样起跑速度都很快，应该是因为只有全马，大家都是有经验的。开始几公里步速大概在5’50”上下，感觉跟平常训练很像，步伐轻快，心率也没有一下飙高。太阳没出来，有点风，罩着雨衣到8km 才脱下。</p>
<p>十几公里那段跑得比较舒畅，步速也不知不觉加快到5分十几秒的样子。这段落偶有小上下坡，新柏油路面，很舒服。18km 吃能量胶，以免20km 后能量不足。这时我还挺乐观的以为能跑进410。</p>
<p>过了半程 开始觉得膝关节不适，比以往出现得早太多了，而且二十多公里后开始变成水泥路面。心肺状态倒是很好，基本不喘气。</p>
<p>25km 补给点吃了盐丸和香蕉，26km 经过水头，有些民众加油，气氛不错。27km 后有点疲累了，28km后一个陡坡，怕太耗体能，走了后半段。</p>
<p>30km 那段很多人都在走路了，只要坚持跑就能不断超人，距离拉得很开，有些时候就是一个人在跑，前面很远都没人。这时跑得吃力了，速度在6分左右，但感觉很慢。不断的期待什么时候能到往大亚湾电站的路。小腿也有抽筋感觉，在医护站喷过云南白药。这段路上又吃了一个能量胶。</p>
<p>31km 后转弯拐向大亚湾核电站方向，对面有折返的人，观众也多些，心理上很快就跑完了折返段这两公里。</p>
<p>然后就一直惦记着38km 前那个大上坡，实际上上坡从33km 就开始了，这段路树荫茂密，看不到远方，我听别人说是连续两公里上坡，还以为没到。除了左小腿，右小腿和左大腿都有过要抽筋感觉，过医疗站必去喷一下。过了35km 大补给站，看到一眼到头都是上坡的大直路，但反倒跑起来不那么辛苦，小步的跑虽然慢但不是非常吃劲，没有撑不住要停下来走的感觉。过了37km 看到前面到顶了，才走了最后一段。</p>
<p>38km 后急下坡，虽然轻松但脚肌肉已经太疲累跑不起来，6分步速。而且，左小腿抽筋感很强，膝关节和髋关节都劳累，右膝特别不适。虽然是最后几公里，但真有点崩溃的感觉了。40km 前后应该是感觉最差的一段。</p>
<p>41km最后一个拐弯后，又开始上坡，这时咬牙也得坚持了，要抽筋也不管了，左四头肌和小腿的肌肉都在不断的抽搐着，其实它们还是有继续工作的能力的。但，怎么还看不到终点啊？终于在过42km牌子后看到终点拱门……这两百米也不短……</p>
<p>冲线后除了挂上奖牌，组委会还很贴心的准备了披风给披上，真温暖。从马路下去会场有好多级台阶，也专设了一个斜坡供大家下去。虽然是斜坡，我都只能慢慢蹭下去，膝关节累得弯不了了，志愿者马上过了扶我到医疗点喷药。傍晚大巴回到广州，下车后走路都一拐一拐，右膝的旧患，在弯曲时痛，不能受力，特别是下不了楼梯。休息一晚后，感觉好很多。</p>
<p>这次跑的心率一直很平稳，起跑几公里没有一下子飙升，十公里后一直维持在160以内，从头到尾都没有特别气喘吁吁的，没有那种肌肉糖原消耗尽突然有氧功能跟不上的感觉。早餐吃了三碗粥，一个鸡蛋，几个红薯，一瓶运动饮料直到起跑前喝完。跟往常一样，水站不喝水，饮料站都喝一些饮料。18km 能量胶，25km 半根香蕉，30km 左右能量胶，35km 半根香蕉，觉得能量补充足够了。带来3个能量胶剩了一个，补给站也没有多拿食物，感觉不需要。</p>
<p>但是，依然困扰的是小腿后侧肌肉抽筋的问题，上次盐田半马在最后一公里也出现了。广马前的训练几次三十多公里没有出现过。广马天气热太阳晒，这次气温很适宜，还吃了盐丸，还是出现。应该问题还是训练得少，肌肉不能坚持长时间运动。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>Haskell</title>
    <url>/blog/2015/01/06/haskell/</url>
    <content><![CDATA[<p>2014年断断续续学了一阵子 Scala 语言，Scala 真的不错，将面向对象和函数式编程两种范式结合得很好，对 Java 程序员非常友好。不过，从学编程开始就受命令式编程的思想的浸淫，要使用函数式编程的思想相当困难，思路转不过来，而 Scala 又不强迫你用 FP，所以写出来的程序基本上还是命令式的。不少人都推荐学 Haskell 作为函数式编程的入门，作为一门学院派的语言，它非常纯粹，有助于掌握函数式编程的思维方式。于是开始读 <a href="http://learnyouahaskell.com/">Learn You a Haskell for Great Good</a>，这真是本入门好书，从头开始一点点的理解接受函数式编程的思路。学 Haskell 的感觉非常<em>有趣</em>。</p>
<p>不过那本书只是讲语言特性和思想，没有讲 Haskell 的运行环境和使用。上网收集了一些资料，记录下来。</p>
<p>Haskell (缺省)是编译成 native code，并非运行在托管环境下，因此开发出来的程序就像 C 的一样直接可执行的 binary。Haskell 程序需要依赖于 Runtime System (RTS)，RTS 提供了内存管理，GC，轻量线程，并发等等功能的支持。包括 RTS 和其他的依赖到的 library，缺省都是静态链接到可执行程序中的，因此编译出来的程序体积会比较大。但现在 GHC 也已经支持动态链接了，如果使用动态链接，则要求运行环境中需要已经安装了 GHC（有 RTS）。在这方面，Haskell 跟 Go 差不多，都是直接得到 native 可执行程序，分发和部署会简单一些。</p>
<p>Haskell 的编译器叫做 Glasgow Haskell Compiler (GHC)，它包括了 compiler，boot library 和 runtime system (RTS)。编译器支持多种 backend，除了可以生成 native code (机器码)，也可以产生 C 语言源代码（供跨平台移植），或者 LLVM code，（供后面接 LLVM toolchain 使用）。</p>
<p>做应用开发不太可能什么都从头做起，必然要依赖第三方的函数库。Haskell 世界里的包管理和 build 系统叫 Cabal。另外有个工具 Cabal-Install 负责下载 Haskell package 源代码、编译、安装和注册到 GHC 的整个过程。共享的包存放在 <a href="http://hackage.haskell.org/">Hackage</a> 这个在线仓库中。</p>
<p>Reference: <a href="http://www.aosabook.org/en/ghc.html">The Architecture of Open Source Applications - GHC</a></p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Haskell</tag>
      </tags>
  </entry>
  <entry>
    <title> 同事们关于 FP 语言的讨论</title>
    <url>/blog/2015/01/25/fp/</url>
    <content><![CDATA[<p><em>之前在公司里一来一往的邮件讨论，被江南白衣集成一篇收录到<a href="http://calvin1978.blogcn.com/articles/haskell.html">他的博客</a>里，读下来还蛮有意思，转过来，以下为全文引用。其中的梁君就是我啦。</em></p>
<h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p><strong>达夫君</strong>： </p>
<p><a href="http://segmentfault.com/a/1190000000502996">利用 GitHub 统计分析编程语言发展趋势</a></p>
<h2 id="第一轮讨论"><a href="#第一轮讨论" class="headerlink" title="第一轮讨论"></a>第一轮讨论</h2><p><strong>梁君</strong>：</p>
<p>增加的Java的项目里，不知道有多少是与Android相关的呢？</p>
<p>Scala最热门都是在意大利城市（Milan, Rome, Florence, Naples,Turin），很奇怪，意大利软件业不发达。于是查了字典在意大利语里scala是scale(英语)的意思，应该跟编程语言无关。排除之后排首位的就是 San Francisco和San Jose，硅谷地区。</p>
<p>最近几天在看 Haskell，真是非常有趣的一门语言。<br>于是也在Google Trends上看一下，搜索Haskell最热的城市是 Gothenburg，第二是Utrecht (因为乌特勒支大学？)。</p>
<p>2014年热度，按国家排序，Haskell最热也是China! 考虑到中国已经屏蔽了Google，这个结果令人吃惊。在国内Scala, Haskell也不是那么热门吧？程序员人口基数大？</p>
<p><strong>雄君</strong>：</p>
<p>Haskell应该是所有程序语言里面被神化的最厉害的吧。有种说法，Haskell可以让你变成一个更好的程序员，即便你不用它，好像还有本书名就是这个。感觉看几本Haskell书就能变成高手似的，快变成宗教了都。。。。</p>
<p><strong>梁君</strong>：</p>
<p>Haskell应该是一种研究型&#x2F;教学型语言吧。</p>
<p>据说是纯粹的FP，我现在看它是想试试强迫一下自己使用FP的思维模式。</p>
<p>那篇 <a href="http://raganwald.com/2014/12/20/why-why-functional-programming-matters-matters.html">WhyWhyFP</a> 不错。 里面，看到一些话（虽然不算是那篇文字的主题）：</p>
<blockquote>
<p>The key is the word better. It is not the same as the phrase more powerful.<br>it is possible to make a language “better” by removing features that are considered harmful, if by doing so it makes programs in the language better programs.</p>
</blockquote>
<p>关于 better 与 powerful 的思考，不是功能越多就越好。用在我们的产品上也是一样啊。</p>
<h2 id="哥德堡的Haskell教授"><a href="#哥德堡的Haskell教授" class="headerlink" title="哥德堡的Haskell教授"></a>哥德堡的Haskell教授</h2><p><strong>赵君</strong>：</p>
<p>Gothenburg研究Haskell的那个人好像是Richard君的教授。感兴趣的可以问问Richard的感受。</p>
<p><strong>范君</strong>：</p>
<p>Richard说的:</p>
<blockquote>
<p>Mr Hughes is a very smart guy. And his homepage hasn’t changed since I had him as a professor : <a href="http://www.cse.chalmers.se/~rjmh/">http://www.cse.chalmers.se/~rjmh/</a> </p>
</blockquote>
<p>国外大学很多都是用Haskell，大老板之前去大英帝国读研也是用它。</p>
<h2 id="FP做题大赛"><a href="#FP做题大赛" class="headerlink" title="FP做题大赛"></a>FP做题大赛</h2><p><strong>韶君</strong>：</p>
<p>我好奇看一下，“证明即程序、命题为类型”，这就是一门数学领域的领域语言，难怪学院派对它宠爱有加，一边证明一边编程，逼格高啊</p>
<p>有个网站号称趣味学Haskell: <a href="http://learnyouahaskell-zh-tw.csie.org/">HASKELL 趣學指南</a> [^1]</p>
<p>[^1]: 英文原版为 <a href="http://learnyouahaskell.com/">Learn You a Haskell for Great Good!</a>。有电子书，简体中文纸板也出版了。</p>
<p>Step by step 学了一下Haskell，居然停不下来，无论写还是读，都像在玩puzzle game，都想找回以前的数学课本来复习一下。我想不用也能让你成为更好的程序员此话不假，就是让你恶补一下已经还给老师的数学概念。</p>
<p>给个零零漆的经典应用题大家思考一下：有一个农场，鸡的数目是鸭的四倍，但是鸭又比猪少九只，鸭和猪的数目是六十七只，请问农场所有动物的脚加起来共多少只？</p>
<p><strong>雄君</strong>：</p>
<p>感觉这跟你的学习方式关系更大，跟语言关系不大的。你也可以用Scala去做SICP的习题，同样有这种感觉。</p>
<p><strong>梁君</strong>：</p>
<p>不挑起具体语言之争。韶君的例子应该是说明FP给人带来耳目一新的感觉。</p>
<p>另外，我感觉那本书 (Learn You a Haskell) 用来做FP入门真的很好，之前看过一些Scala的书都没有那么清晰的理解。</p>
<p>顺便做做那道题目：</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="type">Prelude</span>&gt; head [c*<span class="number">2</span>+d*<span class="number">2</span>+p*<span class="number">4</span> | d&lt;-[<span class="number">0</span>..], <span class="keyword">let</span> c=d*<span class="number">4</span>, <span class="keyword">let</span> p=d+<span class="number">9</span>, d+p==<span class="number">67</span>] </span><br><span class="line"><span class="number">442</span></span><br></pre></td></tr></table></figure>

<p><strong>韶君</strong>：</p>
<p>我原来写的是</p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">head</span> [a*<span class="number">2</span>+b*<span class="number">2</span>+c*<span class="number">4</span>|a &lt;-[<span class="number">1</span>,<span class="number">2</span>..], b &lt;-[<span class="number">1</span>,<span class="number">2</span>..], c &lt;- [<span class="number">1</span>,<span class="number">2</span>..], a=<span class="number">4</span>*b, b=c-<span class="number">9</span>, b+c=<span class="number">67</span>]</span><br></pre></td></tr></table></figure>

<p>结果不会结束，除非数组加上限，有空找你理解一下。</p>
<p>确实是FP带来的感觉，相信Scala也可以带来这个感觉，只不过如果我用Scala就不自觉地当Java来做了。</p>
<p><strong>达夫君</strong>：</p>
<p>我原来也是将Scala当Java来写。但是当你将Java的语法忘了差不多了，Scala就入门了：）</p>
<p>其实只是个老问题，就是平常没机会看Scala的代码，没有好的example参考而已。<br>看别人的代码多了，也就习惯了。</p>
<p>用 Scala 解那道题：</p>
<figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="keyword">val</span> d = (<span class="number">1</span> to <span class="number">67</span>) toStream</span><br><span class="line"><span class="keyword">val</span> feet = <span class="keyword">for</span> &#123;</span><br><span class="line">  d1 &lt;- d</span><br><span class="line">  c1 = d1 * <span class="number">4</span></span><br><span class="line">  p1 = d1 +<span class="number">9</span> <span class="keyword">if</span> (d1 + p1 == <span class="number">67</span>)</span><br><span class="line">&#125; <span class="keyword">yield</span> &#123;</span><br><span class="line">  (c1+d1) * <span class="number">2</span> + p1 * <span class="number">4</span></span><br><span class="line">&#125;</span><br><span class="line">println(feet.take(<span class="number">1</span>).force)</span><br></pre></td></tr></table></figure>

<p><strong>梁君</strong>：</p>
<p>Scala应该增加一种纯FP模式，当打开这个选项的时候，任何不符合FP的写法都报错（或者warning）。</p>
<p><strong>米君</strong>：</p>
<p>沒電腦，裸寫一段 Python，不知道對不對：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="built_in">map</span>(<span class="keyword">lambda</span> x: ‎x*<span class="number">2</span> + x*<span class="number">4</span>*<span class="number">2</span> + (x+<span class="number">9</span>)*<span class="number">4</span>, <span class="built_in">filter</span>(<span class="keyword">lambda</span> x: x+x+<span class="number">9</span> == <span class="number">67</span>, <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">67</span>)))[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>

<p>看起來還是 Haskell 的最有數學味。</p>
<p>邊打邊爐邊研究，或者還可以這樣（不知道對不對，大意如此）：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> (x*<span class="number">2</span> + x*<span class="number">4</span>*<span class="number">2</span> + (x+<span class="number">9</span>)*<span class="number">4</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">67</span>) <span class="keyword">if</span> x+x+<span class="number">9</span> == <span class="number">67</span>‎)[<span class="number">0</span>]</span><br></pre></td></tr></table></figure>

<p>據說這樣有 lazy evaluation，map 和 filter 不知道有沒有。有明白人指點一下嗎？</p>
<p><strong>韶君</strong>：</p>
<p>FP的思路就是“是什么”，指令编程的思路是“做什么”，从这个角度看<br><code>head [c*2+d*2+p*4 | d&lt;-[0..], let c=d*4, let p=d+9, d+p==67]</code> 这个最优雅了，基本上把题目复述一遍而已</p>
<p><strong>雄君</strong>：</p>
<p>米君，你已经线下把三元方程转成一元了，这个是作弊吧，不算。</p>
<p>Haskell的 lazy evaluation 在这么小的程序里面也会搞出无限循环的bug，这是它没法商用的最大原因之一。</p>
<p>我发一个Clojure的，也符合数据的解方程思路。</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">(<span class="name"><span class="built_in">first</span></span> (<span class="name"><span class="built_in">for</span></span> [p (<span class="name"><span class="built_in">range</span></span> <span class="number">1</span> <span class="number">67</span>)</span><br><span class="line">             <span class="symbol">:let</span> [d (<span class="name"><span class="built_in">-</span></span> <span class="number">67</span> p) c (<span class="name"><span class="built_in">*</span></span> <span class="number">4</span> d)]</span><br><span class="line">             <span class="symbol">:when</span> (<span class="name"><span class="built_in">=</span></span> d (<span class="name"><span class="built_in">-</span></span> p <span class="number">9</span>))]</span><br><span class="line">         (<span class="name"><span class="built_in">+</span></span> (<span class="name"><span class="built_in">*</span></span> p <span class="number">4</span>) (<span class="name"><span class="built_in">*</span></span> d <span class="number">2</span>) (<span class="name"><span class="built_in">*</span></span> c <span class="number">2</span>))))</span><br></pre></td></tr></table></figure>

<p><strong>梁君</strong>：</p>
<p>这个我忍不住要说说了，上限没有在原题中给出，需要推理才能得到的。Haskell的程序里是没有设上限的：<code>a &lt;-[1..], b &lt;-[1..], c &lt;- [1..]</code>。<br>你们写的其他程序都是有上限的：<code>p (range 1 67)</code>，<code>x in range(0, 67)</code>，<code>(1 to 67)</code>。</p>
<p>用这个来说Haskell会搞出无限循环的bug是不是有点冤枉了？</p>
<p>p.s. FP的理论在那里，现代的语言都或多或少吸取进去了，只是用什么语法形式的问题，纯粹一些还是要跟原来的特性做妥协，大家也都相互借鉴。除了Java最不思上进。</p>
<p>看上去Clojure的语法最像Lisp。</p>
<p><strong>米君</strong>：</p>
<p>不服上訴。哈哈。</p>
<p>這樣呢？算不算真三元？（已經盡力了。除非改成一元，否則range 好像是繞不過的坎，如果改成無限列表也是一樣會死循環。）</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="built_in">iter</span>( c*<span class="number">2</span> + d*<span class="number">2</span> + p*<span class="number">4</span> <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">67</span>*<span class="number">4</span>) <span class="keyword">for</span> d <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">67</span>) <span class="keyword">for</span> p <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">67</span>) <span class="keyword">if</span> c == d*<span class="number">4</span> <span class="keyword">and</span> d == p-<span class="number">9</span> <span class="keyword">and</span> d+p == <span class="number">67</span>).<span class="built_in">next</span>()</span><br></pre></td></tr></table></figure>

<p>Clojure的版本和Java看上去很像啊。唯一不同大概就是 lazy evaluation 吧。<br>另外，雖然定義了三個變量，但其實只有一個是真正的“變”量，所以還是一元。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ( <span class="type">int</span> <span class="variable">p</span> <span class="operator">=</span> <span class="number">1</span>; p &lt;=<span class="number">67</span>; d++) &#123; </span><br><span class="line">  <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">67</span> - p; </span><br><span class="line">  <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> d * <span class="number">4</span>; </span><br><span class="line">  <span class="keyword">if</span> ( d == p - <span class="number">9</span> ) </span><br><span class="line">    System.out.println( c*<span class="number">2</span> + d*<span class="number">2</span> + p*<span class="number">4</span> ) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>雄君</strong>：</p>
<p>其实完全不是那么一回事，Scala和Clojure里面的for不是循环的意思，达夫之前解释过。这是Java程序员转FP的第一重障碍。另外，Clojure这段代码绝对没有lazy evaluation，如果需要Lazy，Clojure必须要明确指定使用Lazy seq。</p>
<p>Python和Java的表达能力不可能赶上Lisp的，超过Lisp表达能力的语言还没有发明出来。</p>
<h2 id="最后一轮讨论"><a href="#最后一轮讨论" class="headerlink" title="最后一轮讨论"></a>最后一轮讨论</h2><p><strong>雄君</strong>：</p>
<p>Clojure是一个Lisp变种，也是目前唯一的一个商业化的Lisp系语言。</p>
<p>Haskell 是 lazy evaluation by default 的语言，全世界几乎独此一家了。这个特性导致程序运行时，时间和空间都是不可预期的，基本上没有企业敢用。</p>
<p>Haskell又为了程序在逻辑上的predictable，从语言成面回避side effect，结果连个随机数生成都搞不定，发明monad来解决这个问题。问题是monad这么复杂的东西，用Haskell开发竟然是必须掌握的技巧，这很恐怖啊，哪找程序员？</p>
<p>这语言真的是只能看的。</p>
<p><strong>韶君</strong>：</p>
<p>Haskell我觉得商业上想取得成功确实不容易，但我不觉得作者想这样做，说商用，有哪种语言比Java更成功呢，指令语言也没那么容易出错，因为指令语言只有想不到，没有做不到，想取得商业成功就意味着妥协，从这个角度，我更看好Scala。</p>
<p><strong>达夫君</strong>：</p>
<p>估计等大家要看Java8的时候就需要考虑是升级JDK到8呢还是换Scala了。</p>
<p><strong>梁君</strong>：</p>
<p>Haskell 就是一门教学&#x2F;研究型语言，开个学术会议，几个老家伙聚在一起，说不如我们设计个语言来显示一下FP多牛B吧。商业成功不是它设计的初衷 (后来其他人怎么想是另外一回事)</p>
<blockquote>
<p>At the conference on Functional Programming Languages and Computer Architecture (FPCA ‘87) in Portland, Oregon, a meeting was held during which participants formed a strong consensus that a committee should be formed to define an open standard for such languages. The committee’s purpose was to consolidate the existing functional languages into a common one that would serve as a basis for future research in functional-language design.</p>
</blockquote>
<p>才发现BASIC不是我唯一的入门语言，我刚学电脑的时候还看过Logo语言，这么说我也是一开始就接触FP的啦。</p>
<p>对Java程序员和已经大量投资于Java的软件企业来说，应该是Scala最有价值。</p>
<p><strong>雄君</strong>：</p>
<p>我是前几年被人忽悠后花了好几个月学习Haskell，还想用它做项目，现在已经弃坑了。</p>
<h2 id="诗一首"><a href="#诗一首" class="headerlink" title="诗一首"></a>诗一首</h2><blockquote><p>孤独时</p>
<p>孤独时我不喜欢使用语言。<br>一头熊和一只鹦鹉坐在<br>跷跷板的两头<br>跷跷板朝一头翘起。很多东西<br>没办法称量，我是熊你们是鹦鹉。<br>我是这头熊我不使用<br>你们的语言。</p>
<footer><strong>余怒，2003.7.20</strong></footer></blockquote>

<hr>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Scala</tag>
        <tag>Haskell</tag>
      </tags>
  </entry>
  <entry>
    <title>Jekyll</title>
    <url>/blog/2015/01/26/jekyll/</url>
    <content><![CDATA[<img src="/blog/attachments/2015/1/ecebook.png" class="">

<h2 id="用-Jekyll-作为内部技术文档库"><a href="#用-Jekyll-作为内部技术文档库" class="headerlink" title="用 Jekyll 作为内部技术文档库"></a>用 Jekyll 作为内部技术文档库</h2><p>去年在公司的产品开发团队中推行了使用 <a href="http://jekyllrb.com/">Jekyll</a> 静态网站生成工具来写内部技术文档，大半年下来，效果还不错。</p>
<span id="more"></span>

<p>内部技术资料的共享和维护以前一直是个问题。开始用 Office Word 正正规规的写设计文档，维护成本太高了，往往是代码已经翻天覆地变化，文档里都没有反映出来，大家不愿意更新。而且查找起来也不方便。后来推行敏捷方法，不想让文档工作那么 heavy 了，于是用 wiki 来记录。Wiki 的问题是信息非常碎片化，大家很随意的添加新页面，整个 wiki 就像一个草稿本，写得很没有系统。网状的超链接导航令读者很迷茫，不知道需要的信息入口在哪儿，有些隐藏得很深的页面没有几个人知道它们的存在。Wiki 的在线编辑体验也不是那么好。</p>
<p>Jekyll 是个静态网站生成工具，采用 <a href="http://zh.m.wikipedia.org/wiki/Markdown">markdown</a> 语法来写内容，根据模板生成 HTML 页面，发布到一个 web 服务器上，就可以用浏览器在线查看内容。Jekyll 通常用来做  blog 系统，但它用来做有组织的内容发布系统也是完全胜任的。我基本上就是仿照 Jekyll <a href="http://jekyllrb.com/docs/home/">官方文档</a> 的风格和结构来组织我们产品的内部技术文档库。</p>
<p>使用 Jekyll 优点首先是编写方便，markdown 是个轻量的标记语言，上手简单，语法易记，而且有不少编辑工具支持。即使没有渲染成 HTML，也是直接可以阅读的，比起奇奇怪怪还各自不同的 wiki 语法好写多了。</p>
<p>在模板做得好以及安装合适的插件后，生成的文档显示效果相当漂亮，格式效果也很丰富。而且，我们使用了 <a href="https://github.com/aleung/jekyll-plantuml">plantuml</a> 插件，可以直接用文字的方式<strong>写</strong>UML[^1]，比起以前用其他工具画图，截图，再嵌入文档这种方式方便多了。</p>
<p>[^1]: 参考 <a href="/blog/2014/08/23/plantuml/">PlantUML 简介</a>, <a href="/blog/2014/01/20/text-to-uml-diagram/">Text to UML Diagram</a></p>
<p>技术文档库的原始文件是文本格式，用 git 来做版本管理，不用担心大家同时编辑保存时会相互覆盖的问题，修改历史也很清晰。大家都是程序员，本来代码就是用 git 来管理的，文档也用 git 管理自然是很顺手的事情。使用 <a href="https://github.com/aleung/jekyll-post-revision">jekyll-post-revision</a> 这个插件，能够在生成的页面上显示修改历史记录。</p>
<p>通过 <a href="https://github.com/slashdotdash/jekyll-lunr-js-search">jekyll-lunr-js-search</a> 这个插件，能为站点提供全文搜索的能力，这也是相当方便的功能。</p>
<h2 id="在-Windows-上安装-Jekyll"><a href="#在-Windows-上安装-Jekyll" class="headerlink" title="在 Windows 上安装 Jekyll"></a>在 Windows 上安装 Jekyll</h2><p>Jekyll 是用 Ruby 开发的，在 Linux 和 Mac OS X 上安装使用都很简单，在系统中有 Ruby 环境的前提下（Mac 是自带的，Linux 的各种发行版都会有安装包），照着官网上的<a href="http://jekyllrb.com/docs/quickstart/">介绍</a>，几个命令就搞定了。但是，在 Windows 下就不是那么简单了（顺便再黑一下 Windows，不使用 Microsoft 技术的开发者都应该离开它）。</p>
<p>在 Windows 上装过几次 Jekyll，可以写点教程减少大家摸索的时间。大致参考这篇 <a href="http://jekyll-windows.juthilo.com/">Run Jekyll on Windows</a>。</p>
<h3 id="安装-Ruby"><a href="#安装-Ruby" class="headerlink" title="安装 Ruby"></a>安装 Ruby</h3><p>首先需要安装 Ruby 环境。从 <a href="http://rubyinstaller.org/downloads">http://rubyinstaller.org/downloads</a> 下载 Ruby 2.0 和 DevKit，安装 Ruby，然后将 DevKit 解压到 <code>C:/RubyDevKit</code>，在命令行运行下面指令完成安装。</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> C:\RubyDevKit </span><br><span class="line">ruby dk.rb init </span><br><span class="line">ruby dk.rb install</span><br></pre></td></tr></table></figure>

<h3 id="安装-Jekyll-相关的-gem"><a href="#安装-Jekyll-相关的-gem" class="headerlink" title="安装 Jekyll 相关的 gem"></a>安装 Jekyll 相关的 gem</h3><p>Gem 是 Ruby 的包管理工具。在命令行执行<code>gem install</code>可从互联网的仓库直接下载和安装需要的包。如果需要代理，需要先设置环境变量<code>http_proxy</code>，如不需要则忽略第一行。其中，<code>jekyll</code>这个 gem 是必须安装的，其他的视乎环境、配置和使用的插件，可能需要装，可能不需要装。</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> http_proxy=http://my-proxy:<span class="number">8080</span></span><br><span class="line"></span><br><span class="line">gem install jekyll</span><br><span class="line"></span><br><span class="line">gem install kramdown</span><br><span class="line">gem install pygments</span><br><span class="line">gem install nokogiri</span><br><span class="line">gem install coderay</span><br><span class="line">gem install wdm</span><br><span class="line">gem install json</span><br></pre></td></tr></table></figure>

<p>如果在安装过程中出现 SSL 错误，从<a href="https://gist.github.com/luislavena/f064211759ee0f806c88">这里</a>可以找到解决方法。</p>
<h3 id="使用-Jekyll"><a href="#使用-Jekyll" class="headerlink" title="使用 Jekyll"></a>使用 Jekyll</h3><p>Jekyll 的相关操作都是执行<code>jekyll</code>命令进行。后面的基本上就是看<a href="http://jekyllrb.com/docs/quickstart/">官方文档</a>慢慢折腾了。</p>
<h2 id="制作-jekyll-exe"><a href="#制作-jekyll-exe" class="headerlink" title="制作 jekyll.exe"></a>制作 jekyll.exe</h2><p>上面的步骤还是有点繁琐。我们公司里的都是 Java 程序员，在电脑里装个 Ruby 环境也没有其他用处。为了推广使用，简化大家的操作，做一个 portable 的 Jekyll 可执行程序会更好。</p>
<p>制作的步骤基本上参考这篇 <a href="http://www.nickw.it/jekyll-dot-exe/">Building Jekyll.exe for Windows</a>。</p>
<p>首先要安装 OCRA。可能还需要安装 psych，bigdecimal 这些 gem。</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">gem install ocra</span><br></pre></td></tr></table></figure>

<p>解开 jekyll 到一个临时目录：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">gem unpack jekyll</span><br></pre></td></tr></table></figure>

<p>修改<code>bin/jekyll</code>，在开头增加几个依赖声明：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;nokogiri&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;jekyll-watch&#x27;</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;wdm&#x27;</span></span><br></pre></td></tr></table></figure>

<p>生成 exe 文件：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">ocra --add-all-core --gem-all bin/jekyll lib/jekyll/mime.types lib/site_template/**/* lib/site_template/*</span><br></pre></td></tr></table></figure>

<p>做出来的 jekyll.exe 需要测试一下，看看各种命令是否都能正常。视乎配置和使用插件的不同，可能需要增加更多的依赖声明。以上只是我的环境的例子，不一定适用于所有场景。</p>
<p>最后，我知道大家都还是懒得衣来伸手饭来张口的，就提供一个编译好的 <a href="https://github.com/f5f6/f5f6.github.io/raw/master/_bin/jekyll.exe">jekyll.exe</a> 下载，支持 kramdown 和 coderay。但还是那句话：不一定符合你的环境。</p>
<hr>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>几条基础排版规则，让文档显得专业</title>
    <url>/blog/2015/02/05/typesetting-basic/</url>
    <content><![CDATA[<p>虽然我不是处女座的，但在有些事情上会表现得比较处女座，例如对于文档格式，我常会跟各种细节纠缠不休，为的是看起来显得完美一些。</p>
<p>作为软件开发者，写文档是必备的技能，而且文档里常常会出现大量英文。这里介绍一些很基本的规则，使得文档的显得专业一些。这些规则在其他类型的文章里也是适用的。</p>
<span id="more"></span>

<h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><h3 id="用段落，不要强制换行"><a href="#用段落，不要强制换行" class="headerlink" title="用段落，不要强制换行"></a>用段落，不要强制换行</h3><p>在我看来，禁止使用强制换行，是没有特例的（我们不写诗歌）。在必须保留原始换行的地方，应该作为 preformatted text block（HTML 的 <code>PRE</code>，markdown 的 4 空格缩进段落）出现。</p>
<h3 id="保持一致性"><a href="#保持一致性" class="headerlink" title="保持一致性"></a>保持一致性</h3><p>保持标点、字体等元素的一致性，整篇文档看起来清晰整齐，可读性高。</p>
<p>在这方面常见问题有：</p>
<dl><dt>中文英文标点混用</dt><dd>写技术文章，经常会出现中文英文（西文）混合的场景。原则应该是在中文句子中使用中文标点，西文句子中使用西文标点。至于中文句子中嵌入西文引文，那么嵌入的西文内容中应该遵循西文引文这个“亚环境”的规则，用西文标点，但用来包裹嵌入内容的引号或者括号还是属于中文句子的环境，因此用中文标点。</dd></dl><dl><dt>简体繁体中文混用</dt><dd>这个如果不考虑海外用户，问题也不算大，对大陆读者来说，混合简体繁体阅读起来基本上没有违和感。</dd></dl><dl><dt>全角半角混用</dt><dd>除了中文标点外，西文字母和数字这些字符是不应该出现全角的。</dd></dl><dl><dt>成对的符号没有对称</dt><dd>例如引号，是区分左引号和右引号的，一般输入法会正确识别方向，但在拷贝粘贴或者插入编辑的时候要小心方向不要弄错。</dd></dl><h3 id="空格的使用"><a href="#空格的使用" class="headerlink" title="空格的使用"></a>空格的使用</h3><p>中文标点不需要加空格。西文标点后需要加一个空格；成对的符号，开始的要在前面加空格，结束的在后面加空格。</p>
<p>西文单词之间要用空格分隔，这个不容易错。但是单词与数字之间也要加空格，例如“iPhone 6”。</p>
<p>中文与西文混排时，中文与西文之间可能要添加空格，以保证有一定间距，具体视乎显示效果而定。有人习惯一律加空格。(<a href="http://www.geekpark.net/topics/193278">空格杂谈</a>, <a href="http://blog.acgtyrant.com/chinese-western-mixed-typesetting.html">中西文混排</a>)</p>
<h3 id="西文大小写不要误用"><a href="#西文大小写不要误用" class="headerlink" title="西文大小写不要误用"></a>西文大小写不要误用</h3><p>强调以下的规则似乎有点小题大做，但确实还是经常会见到这样的错误。</p>
<ul>
<li>句子首字母大写，句子内不应该用大写，除非下面的情况；</li>
<li>有些专有名词首字母大写的，即使用在句子中间也要保留大写；</li>
<li>全部大写的缩写，放在哪里都不能变成小写。</li>
</ul>
<h3 id="西文没有书名号"><a href="#西文没有书名号" class="headerlink" title="西文没有书名号"></a>西文没有书名号</h3><p>书名号是中文特有的。在西文中，书名用斜体表示，篇名用引号。</p>
<h3 id="使用样式，不要在文字上添加格式"><a href="#使用样式，不要在文字上添加格式" class="headerlink" title="使用样式，不要在文字上添加格式"></a>使用样式，不要在文字上添加格式</h3><p>同样语义的文字，就应该有同样的显示效果，这也是一致性的体现。把文字变得五颜六色，再插一段超大字体，这种做法还是留在小毛孩的论坛里吧。</p>
<h3 id="不要滥用强调"><a href="#不要滥用强调" class="headerlink" title="不要滥用强调"></a>不要滥用强调</h3><p>强调会吸引注意力，打破文档视觉结构，只应该用在真正需要的地方。满篇的强调等于没有强调。</p>
<p>若要突出文档架构，应该使用标题（headings）。当文章中有些整行文字需要强调时，往往是应该将它们作为小标题。</p>
<p>在西文中，按照强调的程度不同，一般强调用斜体，特别强调用加粗。但是，斜体只适合西文，中文不好看，在印刷中可以用楷体或者加着重号代替，不过在一般电子文档中不方便使用（在 web 上可以用 CSS 来控制），没有什么好方法，所以在中文中就没法区分一般强调和特别强调了。(<a href="http://blog.justfont.com/2014/01/popular-typography-4/">大眾字型學：理想的排版強調法</a>)</p>
<p>改颜色改字体大小之类的奇淫技巧不可使用。</p>
<h3 id="合理使用格式"><a href="#合理使用格式" class="headerlink" title="合理使用格式"></a>合理使用格式</h3><p>通过合理使用语义化的格式，可以达到需要的显示效果，而不用去直接指定如何显示。HTML 和 markdown 都支持以下几种格式：</p>
<dl><dt>引用 （blockquote）</dt><dd>整段文字引用自其他地方。</dd></dl><dl><dt>Preformatted text block</dt><dd>保留原始格式，包括换行，空格等。</dd></dl><dl><dt>代码格式</dt><dd>用等宽字体（monospaced font）显示。要做得漂亮一点就是加上自动语法高亮渲染了。</dd></dl><dl><dt>定义列表 (definition list)</dt><dd>适用于一个名词，后面一段解释的场合，就像现在这段文字。也就是 key-value map 在文本中的体现。在HTML 里是 <code>DL</code>, <code>DT</code> 和 <code>DD</code> 标签，不属于基本的 markdown 格式，有些引擎会支持。</dd></dl><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>保证各种元素的一致性。关注内容的层次结构，段落或文字的语义属性，而不是显示效果。显示效果由样式来控制。</p>
<hr>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>Jekyll 与 Swagger UI 集成</title>
    <url>/blog/2015/04/03/jekyll-swagger-ui/</url>
    <content><![CDATA[<p><a href="http://swagger.io/">Swagger</a> 是被广泛使用的用于 REST API 描述和文档化的框架。它制定了一个用于描述 REST API 的规范，提供了一组工具用于编辑 API 描述文件、生成测试客户端、生成文档等等。<a href="https://github.com/swagger-api/swagger-ui">Swagger UI</a> 是其中的用于生成文档的工具。</p>
<p><a href="http://jekyllrb.com/">Jekyll</a> 是深受程序员喜爱的静态网站生成工具，通常用来做 blog 站点，我们的工作团队也<a href="/blog/2015/01/26/jekyll/">用它来做内部的技术文档库</a>。</p>
<p>在 Jekyll 里描述我们产品的 REST API，编辑排版是比较繁琐的事情，不同的 API 描述也没有统一的风格，因此考虑到引入 Swagger 来规范化 API 定义。</p>
<p>为此，写了一个简单的 <a href="https://github.com/aleung/jekyll-swagger-ui">Jekyll 插件</a>，只要像下面例子那样在 markdown 中简单的插入 <code>swagger</code> tag，指定 API 描述文件，相应的 API 文档就会由 Swagger UI 生成并嵌入在页面中。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% swagger /api/my-api.json %&#125;</span><br></pre></td></tr></table></figure>

<p>安装使用方法请参看 <a href="https://github.com/aleung/jekyll-swagger-ui">README</a>。另外，Swagger UI 没有考虑到在一个页面中显示多组 API，会有些显示问题，已经提交 pull request，下个版本有望修复，暂时可以先下载我的修改版本，详见 README。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>永恒的终结</title>
    <url>/blog/2015/06/09/the-end-of-eternity/</url>
    <content><![CDATA[<img src="/blog/attachments/2015/6/TheEndOfEternity.jpg" class="right">

<p>花了几天空余时间，看完了阿西莫夫的科幻小说<a href="http://book.douban.com/subject/25829693/">《永恒的终结》</a>。</p>
<p>在我的印象中，阿西莫夫的科幻小说是以逻辑严谨为特征的。他的好多作品都是设定在未来背景的侦探推理小说。小学时代读他的“机器人系列”，还以为机器人三大定律真的是生产机器人都需要固化的逻辑。总之，感觉他的书基本上都是烧脑之作，读起来要细细思考琢磨的。</p>
<span id="more"></span>

<p><em>（提示: 有关键情节透露）</em></p>
<p>在《永恒的终结》的设定中，时间的流逝是绝对的、单向的。即使在永恒时空，依然存在着时间的流逝（所谓的物理时间）。时间作用在永恒之人身上，他们依然会变老。严格的说，在整部小说的设定中，只存在一个时空，也就是一般时空。并不存在着一个独立的永恒时空，永恒时空其实是锚定在一般时空之上的一个个节点（在某些世纪上存在一个分区），永恒时空的时间跟一般时空的时间是同步的流逝的。</p>
<p>《永恒的终结》并没有引入其他科幻小说常用的平行时空的概念，或者说即使有平行时空，他们（永恒之人）也只能在其中一个时空上活动。永恒之人的特别之处在于他们拥有着在时间轴上穿行的能力，他们能够到达时空上的任何一个时刻（也包括空间位置，但这在故事中不是重点）。将时空中的活动想象为一盘按正常速度播放录像带，永恒之人就是能够倒退或者快进到录像带的某个时刻进行播放。无论如何，在这（唯一的）时空之中，因果率是起作用的，也就是说，这盘录像带的剧情是合乎因果情理来发展的，前一时刻的事件产生的后果会反映到后面的时刻中。永恒之人在时空之中穿梭观察，以一个旁观者的身份，他可以看到一件事情发生的前因后果。</p>
<p>但是，永恒之人要亲临一般时空的某个时刻进行观察，免不了会对该时刻发生的事件带来影响，因为这不像我们看录像带，超脱于录像的时空之外，前面说了时空其实始终只有一个，永恒之人进入某个时刻，也就是成为录像带场景中的一部分了。他在这个时刻的任何行动，都会在后续的时刻带来后果，也就是干扰了现实，带来了现实的变革。变革有多大，视乎影响的大小，如果恰好改变了因果链的一个关键节点，就会对后续的社会发展带来很大的影响，也就是永恒之人所做的现实变革。</p>
<p>虽然永恒之人可以随时进入某个时刻，做某些事情去改变现实，但他们并不能预先观察到引发的后果。因为这个一般时空是严格遵从因果律的，时空技师可以先去2481世纪看看是什么样子的，然后去2456世纪去实施现实变革计划，但是他看到的2481世纪只会是没有变革的，他没办法预先看到变革后的2481世纪，因为他还没有改变2456世纪发生的事件，无因就无果。当时空技师在2456世纪干预了某些事件，带来了连锁反应的后果，再去看2481世纪，这时他看到的就跟之前看到的2481世纪不一样了，之前的2481世纪已经不存在——只存在在他的记忆里——现实已经被改写。这就是为什么技师爱上了482世纪的一个女人，但当现实变革后，他即使再回到482世纪也无法找回他的爱人——也许她不存在了，也许在新的现实里她从来就没有爱过他。小说冲击了读者的一个观念：在具体的某一个时刻，发生过的事情永远不会改变。在这里，时间只是一个一维坐标系，事件并不是固化在上面的，就像可以将一件物品从空间一个位置上挪走，同样可以在时间上改变某个时刻发生的事件。</p>
<p>因为永恒之人并无法预先观测到现实变革的后果，他们只能依靠先进的计算机阵列和经验丰富的计算师去预测某个方案能够带来怎样的变化。不知道他们是怎样为世界的运转建模的，还有超凡的计算能力去预估一个扰动在逐渐发散的因果链上带来的后果。不过，跟蝴蝶效应之类的理论不同，在小说中设定为现实的演进是存在惯性的，一个扰动并不会带来无限发散的后续影响，而是经过一段时间后回归到跟没有扰动发生过一样的演进状态。所以，一个现实变革可能会影响几个世纪乃至上百个世纪的演进，但不会带来无穷的影响。</p>
<p>如果这种影响只是单向的：永恒之人可以进入某个时刻，给这个时间带来影响，那么一切还是很完美，因果链始终是开放无穷伸展的，不会成为闭环。但是小说其实还是要回到时空旅行的经典因果悖论：循环因果中去。</p>
<p>其实时间的因果悖论在永恒时空之中也存在：一个永恒之人是不是能够返回到前几天，去改变全时理事会的一次会议讨论？但小说将永恒时空设定为非连续的时空（至少一个世纪才有一个分区），绕开了这个问题，因为小说要指向一个更加大的悖论。</p>
<p><em>（注意：以下关键剧透）</em></p>
<p>小说将永恒时空的建立，或者说时空旅行的技术的产生，设定为是永恒之人将未来（27世纪）才发现的数学原理带回24世纪而创造的。这样，因果链条就形成了闭环了，前事之因带来后事之果，而后事却又是前事之因（这里的前、后指的是时间轴上的坐标）。那么，一旦“后事”没有发生，“前事”又何来呢？答案还是那个：现实将被抹去，一切都没有发生过。这与现实变革其实是一样的，永恒之人实施现实变革是对某个时刻实施干预，影响它的后果而将当前现实更替为另外一个现实；而永恒时空的建立本身就是一个来自未来的干预的结果，因此永恒之人需要去实施这个干预，以保证因果链的闭合，使得当前现实得以保存。一旦这个预期的干预没有发生，从那个时刻起的现实就毁灭了，变成一个新的现实——没有发生过来自未来的干预的现实。</p>
<p>但是我始终没有想明白的是，假若时间旅行是可行的，这种循环因果链在逻辑上可能存在吗？它是怎样形成的？可以不存在一个第一推动者？</p>
<p>小说最终的三个章节的转折还是让我意料不及，用的道理是很平白的：生于忧患，死于安乐，整个人类也是如此。拥有了时空穿行能力的人类会不断的通过现实变革，将人类的发展历史局限在一个安稳的状态。但是缺失了外太空探险精神的人类就在与外星文明的竞争中落败了。</p>
<p>在我的个人阅读体验里，读到最后几页感觉是前面做了如此华丽的铺垫，图穷匕见的却是一个建立银河帝国的俗套的梦想，颇有失望。</p>
<p>阿西莫夫将毁灭永恒时空的动机解释为男女之间的爱情，也许爱情是世界上最重要的东西，唯有它才能产生改变整个时空的动力。但阿西莫夫毕竟还是写逻辑推理更擅长，写起男女感情来完全读不出味道。</p>
<hr>
<p>豆瓣书评：<a href="http://book.douban.com/review/7495652/">http://book.douban.com/review/7495652/</a></p>
]]></content>
      <tags>
        <tag>Reading</tag>
      </tags>
  </entry>
  <entry>
    <title>CAP</title>
    <url>/blog/2015/07/28/CAP/</url>
    <content><![CDATA[<h1 id="更新一致性"><a href="#更新一致性" class="headerlink" title="更新一致性"></a>更新一致性</h1><p>更新一致性问题发生在多个实体同时更新同一数据，出现写冲突。并发环境下维护数据一致性所用的方式通常分为悲观和乐观两种。</p>
<p>悲观方式就是避免发生冲突，例如采用 write lock，根本不让写操作同时发生。排在后面的操作者需要检查最新数据来判断是否继续更新。</p>
<p>乐观方式是先让冲突发生，然后检测冲突并处理。例如用条件更新，仅当数据库中的数据当前值与之前读出的值相同时才对此执行更新操作。另一种方法是记录不同版本的数据，当不同版本数据发生冲突时需要采取某种策略去合并（merge）数据。</p>
<p>在存在数据复制的分布式系统中，需要保证不同节点的更新操作顺序是保持一致的，否则无法解决数据一致性。但分布式系统中顺序一致性往往难以保障，常用的方法是将某份数据的所有写入操作都交由一个节点来完成（数据分片机制）。</p>
<h1 id="读取一致性（读写冲突）"><a href="#读取一致性（读写冲突）" class="headerlink" title="读取一致性（读写冲突）"></a>读取一致性（读写冲突）</h1><p>由于存放于不同聚合的相关数据分成多个步骤更新，在更新过程中读取数据可能产生违反“逻辑一致性”的情况。关系数据库通过事务来解决此问题。面向聚合的NoSQL 数据库通常只能在单一聚合内部保证更新操作的原子性，无法保证跨聚合更新的原子性。存在不一致风险的时间长度称为“不一致窗口”。</p>
<p>当数据需要复制副本时，从节点获取到更新后的数据需要一定的时间，在未成功复制之前，数据存在违反“复制一致性”的问题。最终更新操作还是会传播到所有节点，从而得到更新后的数据，这种情况叫做“最终一致性”，也就是说，在任意时刻，节点中都可能存在复制不一致问题，但陈旧数据最终都能得到更新。</p>
<p>视乎应用逻辑可以忍受多长的不一致窗口，可以采取不同策略。例如保证“照原样读出所写内容的一致性”（read-your-writes consistency），这可以通过提供 session 一致性来保障，例如采用 sticky session，或者检查数据的 version stamp 。</p>
<h1 id="CAP"><a href="#CAP" class="headerlink" title="CAP"></a>CAP</h1><p>CAP定理是需要放宽一致性约束的原因。CAP 包括：一致性 Consistency，可用性 Availability，分区耐受性 Partition tolerance。三者不可能同时满足。</p>
<p>CAP 三个概念不能从字面上想当然去理解。</p>
<p>简单的说，一致性保证要求往分布式系统的操作的效果看起来就像一个节点上操作一样，在同一个逻辑瞬间中在所有节点上完成。</p>
<p>可用性是说系统中某个无故障节点对所收到的每一请求必须给予确定结果响应。在考虑到P 的情况下，即使出现脑裂，节点依然要能够给出响应。通俗的例子：当你还活着，我找到你，你就必须对我的请求给出明确答复，不能说因为别的节点联系不上了所以给不了答复。需要注意定义中的无故障节点前提，CAP 考虑的是此前提之下的群集节点可用性。</p>
<p>分区耐受性是指分布式系统需要能允许节点之间出现通信故障，导致部分消息丢失，甚至集群被分割为多个无法相互通信的分区（脑裂）。</p>
<h1 id="CA之间的取舍"><a href="#CA之间的取舍" class="headerlink" title="CA之间的取舍"></a>CA之间的取舍</h1><p>在实践中，P 是必须保障的，因为不存在绝对不会发生故障的网络。那么问题就是在 C 和 A 之间如何平衡。</p>
<p>在出现分区时，如果要优先考虑 C 而放弃 A，那么可以完全停止服务，拒绝写操作（如二阶段提交），或者仅仅对数据的 master node 在本分区的请求提供服务。</p>
<p>如果优先考虑 A 而放弃 C，那么节点可以继续响应任何请求，即使返回的可能是陈旧数据，或者可能出现写数据冲突。数据冲突在通信恢复后可以通过版本戳侦测出来，然后通过某种（应用指定的）策略去合并。</p>
<p>实际上，系统设计不会追求完美的一致性或者完美的可用性，而是根据需求在其中折中。例如允许更长的不一致窗口，降低一致性要求来换取可用性提升。</p>
<p>仲裁 Quorum 可以在发生分区问题时保障一致性，视乎分区问题的严重性。当复制因子为 N（数据副本数量），成功写入节点数为 W，成功读取节点数为 R，当 R+W&gt;N 时可满足一致性要求。</p>
<p>另一方面，一致性也与 latency 相互排斥，当引入更多手段来保证一致性时（如仲裁），latency 会增加，或者说当允许更大的 latency 时，可以增加一致性保障（例如不断重试）。</p>
<h1 id="放宽持久性约束"><a href="#放宽持久性约束" class="headerlink" title="放宽持久性约束"></a>放宽持久性约束</h1><p>某些场合可以牺牲一些持久性以换取更好性能，也就是要忍受在故障情况下部分数据丢失。</p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li><a href="https://book.douban.com/subject/25662138/">NoSQL Distilled</a></li>
<li><a href="https://codahale.com/you-cant-sacrifice-partition-tolerance/">You Can’t Sacrifice Partition Tolerance</a></li>
<li><a href="http://www.infoq.com/cn/articles/cap-twelve-years-later-how-the-rules-have-changed">CAP理论十二年回顾：”规则”变了</a></li>
</ul>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Database</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML presentation framework</title>
    <url>/blog/2015/08/29/html-presentation-framework/</url>
    <content><![CDATA[<p>最近要做一个分享，需要做个有趣一些的 slides。工作上的 slides 都是用 PowerPoints 来做的，但 ppt 放网上分享不方便，而且也不 cool，因此琢磨着弄个什么来玩玩。开始打算想用 markdown 来写，一方面是习惯了，另外也够简便。几年前就曾试过用 markdown 写一个简单的 <a href="http://aleung.github.io/presentation/markdown/slides.html">slides</a>。</p>
<p>上网搜索一圈，发现这种打着 “HTML presentation framework” 名号的工具还真多，近些年来 HTML5、CSS、JavaScript 的广泛应用，这些基于 HTML 的演示可以做得很炫，让人耳目一新，例如这个 <a href="http://vizzuality.github.io/rollingstonesmap/">50 Years of the Rolling Stones</a> 和 <a href="http://lightning.fm/massofplanets/#/">Mass of Planets</a> (要允许网页使用摄像头)。</p>
<p>比较了一下，感觉 <a href="https://github.com/hakimel/reveal.js">reveal.js</a> 不错，也很受欢迎。后来又发现另外一个后起之秀 <a href="https://github.com/markdalgleish/bespoke.js">bespoke.js</a>，影响力不够 reveal.js 大，但它的插件式设计更胜一筹。对了，这些工具基本上都是用 JavaScript&#x2F;Node.js 等一套工具链的，前端相关的技术 js 独霸天下了。</p>
<p>先试了一下 bespoke.js。看到 reveal.js 能使用 <a href="https://www.leapmotion.com/">Leap Motion</a> Controller 来手势控制，演示起来会比较出彩，正好同事有一个 leap motion，可以借来玩，但是却找不到 bespoke.js 支持 leap motion 的插件。查了一下，原来 leap 有 JavaScript API，在浏览器里面能够通过事件监听获得双手各个手指的位置和手势动作的信息，API 暴露出来的已经是处理后的双手模型了，应用用起来相当方便。于是就简单的 port 了一个 <a href="https://www.npmjs.com/package/bespoke-leapmotion">bespoke-leapmotion</a> 插件出来。但说实在的，leap motion 这东西还是中看不中用，用手势切换页面根本就不如手指头按个按键快捷和省力，手势的辨别也不够精准（这方面应用在数据处理上是可以下些功夫的）。</p>
<img src="/blog/attachments/2015/8/leapmotion.jpg" class="">

<p>Bespoke.js 的 markdown 支持似乎还有些坑，总有这样那样的问题。而且在 markdown 在版面布局方面局限性也很大，做出来的 slides 显得单调了些，效果不够理想，于是又在看看直接用 HTML 来写会怎样。HTML 是足够灵活了，但是要设置排版布局又累死了，我对 HTML+CSS 也不是那么熟悉，有点想放弃用回 PowerPoint 了。 </p>
<p>正好这个时候，发现了 <a href="http://slides.com/">slides.com</a> 这个网站，它背后用的就是 reveal.js，但它的在线编辑器真心好用啊，鼠标拖放元素，功能简洁但又足够做出漂亮的效果了。就是它了！</p>
<img src="/blog/attachments/2015/8/slides-editor.png" class="">

<p>但是，我还是念念不忘 leap motion —— 演示的时候可以带来新奇的效果啊。Slides.com 自然不会有这偏门的功能，但它很良心的提供了 export to reveal.js，在上面编辑好的 slides 可以放回本地的 reveal.js 里面播放，免费用户都可以享受。嗯，看起来一切都好，可是，怎么在 slides.com 里面写好的 speaker notes 导出后都丢失了呢？查看导出文件的内容，似乎是 slides.com 内部处理 speaker notes 用的机制跟 reveal.js 不一样，存放的格式也不同了。还好，只要数据都在，还是有办法的，写个<a href="https://github.com/aleung/slides-export">程序</a>来转换就行了。</p>
]]></content>
      <tags>
        <tag>Presentation</tag>
      </tags>
  </entry>
  <entry>
    <title>持续学习</title>
    <url>/blog/2015/09/20/continuous-learning/</url>
    <content><![CDATA[<p>上次<a href="/blog/2015/08/29/html-presentation-framework/">提到</a>用 HTML 做的 presentation，是在公司里做的关于持续学习的一个分享。</p>
<p><em>注意：看绿色导航箭头，是可以向下翻页的。有些背景图片可能需要翻墙才能看到，否则会变成空白。</em></p>
<iframe src="//slides.com/aleung/goodgoodstudy/embed?style=light" width="800" height="600" scrolling="no" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>
]]></content>
      <tags>
        <tag>PersonalDevelopment</tag>
        <tag>Presentation</tag>
      </tags>
  </entry>
  <entry>
    <title>自由软件质量不如软件企业自己开发的可靠？</title>
    <url>/blog/2015/09/20/quality-of-free-software/</url>
    <content><![CDATA[<p>在软件企业中开发产品&#x2F;项目，做技术选型时经常会听到的一个说法是：选择开源自由软件，会不会质量不够有保障？还是我们自己做好一些。</p>
<p>自由软件遵循的是完全的市场经济，面对的是残酷的竞争。如果项目做得不好，满足不了需求，就会无人问津而最终被废弃掉，使用者才不心痛已经有多少人力物力已经投入到这个项目中。项目设计太差，代码太烂，同样也吸引不了贡献者，导致原有贡献者的离开或者另起炉灶。对比的看，软件企业中开发的软件项目就如受着国家保护的国企，虽然也面临外部竞争，但在内部怎么也还是自家孩子，再烂也很难让大家承认它的失败，要放弃更加是艰难的决定，往往意味影响好些人的仕途。因此，你会看到很多企业开发的软件项目很烂，因为它们本来应该死掉的，但被强制维持着生命。</p>
<p>从软件开发者的平均水平这个角度来看，自由软件项目也优于企业开发的软件项目。当然，这里谈的自由软件项目是指有一组稳定贡献者有明确蓝图的，这样才能与企业项目相比较，个人练手的项目不算在内。试想一下，在一个软件企业里面，水平足矣为自由软件提交代码的开发者占了多少比例？但是那些尚不能为自由软件项目提交代码的开发者，在企业里面可是天天写代码的，甚至大部分代码是出自他们之手。</p>
<p>泛泛的说，在某个领域，如果可选的自由软件有不少，那么排名前列的项目，质量基本上不需要太过担心。</p>
<p>上面是我对自由软件质量担忧的看法，但这当然不代表就可以随意选择使用自由软件，技术选型中需要评估的东西还有很多。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Kossel Mini 3D打印机制作记录 (1)</title>
    <url>/blog/2015/10/05/kossel-mini-3d-printer-making/</url>
    <content><![CDATA[<h2 id="缘起及设计"><a href="#缘起及设计" class="headerlink" title="缘起及设计"></a>缘起及设计</h2><p>一切都起源于 flyisland 转的这篇文章：<a href="http://post.smzdm.com/p/332896">从零开始，给自己设计一台3D打印机</a>，大量的图文细节和制作过程描述吸引了我，门槛似乎也不怎么高，于是产生了做一台的想法。看了 <a href="http://www.thingiverse.com/">Thingivers</a> 这个网站，更是发现了新的世界，打消了“有3d打印机不知道用来做什么”的疑虑，对喜欢搞制作的人来说3d打印机太有用了。</p>
<p>于是开始网上查找资料，了解相关信息。一开始的想法是做像那篇文章中的 XYZ 结构，大一点的打印体积（开始都是贪心的），看了 <a href="http://forums.reprap.org/">RepRap 论坛</a>发现关于 delta 结构的讨论很热门，了解多一些后知道 delta 结构打印机的打印速度快，成本比较低，制作也不复杂，于是锁定了 <a href="http://reprap.org/wiki/Kossel">Kossel</a> 机型，心想先做一个出来练练手，小一点也够用了，以后真玩起来有需要再做大机器。</p>
<p>接下来在寻找国内的资源的时候知道了 <a href="http://www.thingiverse.com/thing:388683">K800</a> 打印机，这是国内爱好者 maximscy 在 Kossel Mini 基础上改进的以降低成本为目标的机型，原本 K800 的意思就是人民币800元可以做出来的 Kossel，但实际上基本上也还是要上千元。</p>
<p>K800 应该说对于推动3D打印机在国内普及有不少功劳，淘宝上有不少卖套件的。K800 降低了成本，但是毕竟还是以牺牲一点精度为代价，因此卖家也有不少“升级套餐”，例如将打印制作的元件换成铝合金元件，滑轮换回直线导轨等等。我对成本还不算很敏感，想做出来的机器质素好一点，但看下来发现套件的价格水分又太大了，而且配置不一定跟自己要求一致，于是决定自己采购元件。</p>
<p>最后定下来的方案基本上是原版的 Kossel Mini 方案，高度增加50mm，框架连接件用铝合金的以增加牢固程度和精度，挤出机用铝合金的套件。斜杆的制作精度要求比较高，也直接买做好的算了。</p>
<p>制作相关的资料信息，例如 BOM，记录在GitHub的 <a href="https://github.com/aleung/KosselPrinter">KosselPrinter</a> 项目里。</p>
<h2 id="进展"><a href="#进展" class="headerlink" title="进展"></a>进展</h2><h3 id="国庆节前"><a href="#国庆节前" class="headerlink" title="国庆节前"></a>国庆节前</h3><p>计划用国庆节7天假期来制作，所有材料应该要在节前采购完毕。开始没有考虑到淘宝店家在国庆节会放假，到27号了BOM还没有完全做好，订单还没下。淘宝上采购的难度比预计要困难得多，要比较不同店家的产品，而且搜索了才知道有些元件有好多选择，要弄清楚它们的区别，相互的配套，一个变了可能设计就要改变，配套的东西也不同了。在马云家奋战一个晚上直到凌晨3点，第二天又继续买买买，终于把订单全下完，总金额1400元出头。</p>
<p>元件在29、30日陆续送到，其中挤出机发现配件不齐，找卖家补发。想着剩下的东西在1日都能够全部收齐了吧？</p>
<h3 id="10-1"><a href="#10-1" class="headerlink" title="10-1"></a>10-1</h3><p>安装框架，发现买的铝合金连接件是按照国标铝型材设计的，竖杆孔里有几条棱，而我用的是欧标铝型材，配合使用T型螺母，因为棱的存在无法压紧，只好尝试用锉刀去锉掉那条棱。另外，我买的 M3*8 螺丝显得小和短了，有点勉强，出去转了一圈，没有找到卖铝型材用螺母的地方，都放假了。</p>
<img src="/blog/attachments/2015/10/1.jpg" class="">

<p>铝合金连接件有一件漏打一个孔，跟店家联系，他晚上直接开车给我送一个好的过来，超好人。跟他说起欧标型材的问题，他说可以送给我一些国标 M4 方螺母，也可以塞进欧标型材的槽里的，就不需要锉掉那条棱了。</p>
<h3 id="10-2"><a href="#10-2" class="headerlink" title="10-2"></a>10-2</h3><p>把直线导轨装上，发现只有一根导轨的滑块能够在重力下自己下滑，另外两根摩擦力都好大，而且是不均匀，在某些地方特别卡，需要用一点力才能推过去。网上问人，说这是不正常的，要么是质量特别差，要么是旧零件翻新。只好退货了，然后就不知道应该买什么导轨，国产的似乎不可靠，台湾上银的又太贵，而且据说淘宝假货很多。</p>
<img src="/blog/attachments/2015/10/2.jpg" class="">

<p>快递国庆节都休息了，节前买的东西到了配送点就是没人送上门，停工待料。开始看软件、参数调整和建模方面的资料，发现入坑了，而且似乎是深不见底。</p>
<p>试用 <a href="http://www.openscad.org/">OpenSCAD</a>，通过写代码的方式来建3D模型，很容易上手，做基于几何体的模型很简便（自由曲面用什么工具都不简单吧？）。</p>
<h3 id="10-3"><a href="#10-3" class="headerlink" title="10-3"></a>10-3</h3><p>收到M4螺丝螺母，把原来用M3螺丝螺母已经装好的框架拆掉。发现步进电机、同步轮和连接件的安装位置不太吻合，看来又要动用钢锉。要等导轨和滑车到了后确定具体位置才好动手。于是所有东西又回到一堆零件的状态。</p>
<p>将计划从国庆假期完成更新为10月底前完成。</p>
<h3 id="10-5"><a href="#10-5" class="headerlink" title="10-5"></a>10-5</h3><p>快递终于上班了，所有淘宝买的东西都送齐了。但是直线导轨退货后还没有重新购买，没有这个关键零件还是什么都做不了。</p>
<p>今天没有干什么东西，只是将送丝机和挤出头装配了起来。</p>
<img src="/blog/attachments/2015/10/3.jpg" class=""> <img src="/blog/attachments/2015/10/4.jpg" class="">


<p><em>(To be contined…)</em></p>
]]></content>
      <tags>
        <tag>Maker</tag>
      </tags>
  </entry>
  <entry>
    <title>2015 广州马拉松小结</title>
    <url>/blog/2015/12/06/guangzhou-marathon/</url>
    <content><![CDATA[<p>因为训练得少，一直担心跑全程会很辛苦，预计430完成就不错了。</p>
<p>周六寒风冷雨，幸好周日放晴了，早上起床气温12℃，穿了长袖。存包时感觉不冷，就没有套雨衣。今天气温很适宜跑步，既没有冷得发抖，也没有很热。</p>
<ul>
<li><p>起跑很保守，慢慢跑，想着按430的话全程也就是6分配速。跑了两三公里自然而然的快起来，渐渐进入6分配速以内。</p>
</li>
<li><p>10km 感觉自己状态还好，一小时内完成了；一直心率都保持在150以下，心中欣喜；下了猎德桥后16km起左膝盖有点不适，受膝痛影响精神也不那么轻松了，后面过两次隧道下坡时小心翼翼。</p>
</li>
<li><p>20km 发现自己居然比2小时少了七八分钟，按照一小时十公里预算，又赚了好些时间。渐渐膝盖感觉也不明显了。</p>
</li>
<li><p>24km 左右吃能量胶，过25km 比预计早了10分钟，没有见到小云和小春天，拿了李莹一根香蕉。25km 补给点吃盐丸，想把粉末倒水杯里，发现很难倒出来，整颗扔水里也融不开，有点狼狈，还浪费了一分钟时间。</p>
</li>
<li><p>28km 起进入滨江路老城区路段，开始跑得不轻松了，这时候我就喜欢一个人孤独的靠着马路中线跑，不管路边加油的观众。左小腿有点发硬的感觉，每个站都淋湿小腿裤子，风干时就很冰冷。</p>
</li>
<li><p>33km 过人民桥，慢慢跑上去，盘算着完赛时间是多少，好像跑回以前最好的412是有可能的。剩下不足10km，感觉能量不是问题，但想想还是再吃一个能量胶，也吃一颗盐丸。</p>
</li>
<li><p>在沿江路跑，看着34km，35km 过去，觉得剩下路程不多了，想如果后面我能维持6分配速，就可以进410，但状态也确实不再轻松，最担心是小腿会抽筋。</p>
</li>
<li><p>后面各跑群的补给点很多，一会就见到一个，过了江湾，一会就到海印。想着去年在这里见到小春天，当时已经抽筋了好久。没见到她们，想她们是不是又错过时间。</p>
</li>
<li><p>数着一公里又一公里，接近广州大桥，终于40km 啦，剩下没多远，就算抽筋怎么也可以熬过去，何况我配速都还能维持在5:45左右。突然听到有人喊艳阳天，看到了李莹和小云，兴奋的举起手跑过去让她们拍照，但想着最后2km 要一鼓作气完成，就没有停留，小春天在后面大喊回来合影。没有跟小云合影真辜负了她这么费心为我准备加油。</p>
</li>
<li><p>从二沙岛过桥进入海心沙，41km，居然海心沙那段路就有一公里，不过都能看到前面的路拐个弯就到了，感觉也不长。最后一段告诉自己没必要加速，根本差不了几秒钟。后面的摄影师真对，一会一个，都没有什么其他姿势可以做了，表情是很轻松的。</p>
</li>
<li><p>最后一个拐弯后，一大堆美女啦啦队热情的喊，从她们手上接过一个气球，跑完最后一段。拿着气球这个点子不错，拍照效果应该好吧。冲线后，一按手表，居然是4:02:02，完全没有想到居然能够 PB 还快了10分钟。官方净成绩是4:01:53.</p>
</li>
</ul>
<p>这次还是首次全马没有上厕所。前十几公里是有一点想尿的，厕所要排队想后面的人少，但跑到后边就没有尿意了，省了一分钟 :)</p>
<p>尽管气温不高，从第一个海绵站（7.5km）开始就拿海绵降温，开始是淋头部。到小腿出现发硬，怕抽筋，就给小腿和大腿也淋水。大概30km 处拿了半瓶水来淋小腿，弄得鞋袜都湿了，幸好也没有带来什么影响。后来就不敢直接淋，用手捧水在腿上抹。</p>
<p>不算起步的3km，20km前平均步速5:33；20-30km平均5:36（除去弄盐丸浪费时间那段）；30km 以后平均5:46。</p>
]]></content>
      <tags>
        <tag>Running</tag>
      </tags>
  </entry>
  <entry>
    <title>Hackintosh Installation</title>
    <url>/blog/2016/04/11/mac-installation/</url>
    <content><![CDATA[<p>装了一台黑苹果在公司里用，幸福指数大大提升。</p>
<h1 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h1><p>硬件选型参考tonymacx86的<a href="http://www.tonymacx86.com/building-customac-buyers-guide-march-2016.html#CustoMac_Mini">CustoMac Mini</a>)，算下来主机不足4000元。要保证安装顺利、功能正常和稳定，最重要的是选择推荐的主板型号，可以找到详细的安装配置教程，各种可能的坑都有人给出解决方案了。安装过程一律依据tonymacx86的guide进行，没有任何问题。SSD和机械硬盘组成fusion drive，在较低的成本上达到不错的性能和容量的兼顾。唯一问题是用了fusion driver之后hibernate就不能用了，因为Clover认不出fusion driver，找不到上面的sleep image。</p>
<h1 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h1><p>以下内容均针对 El Capitan。</p>
<h2 id="App安装途径"><a href="#App安装途径" class="headerlink" title="App安装途径"></a>App安装途径</h2><p>安装应用途径，按照优先顺序：</p>
<ul>
<li><a href="https://caskroom.github.io/">Homebrew Cask</a></li>
<li><a href="http://brew.sh/">Homebrew</a></li>
<li>App Store</li>
<li>官网下载</li>
</ul>
<h3 id="升级已安装的所有brews"><a href="#升级已安装的所有brews" class="headerlink" title="升级已安装的所有brews"></a>升级已安装的所有brews</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew upgrade</span><br></pre></td></tr></table></figure>

<h3 id="升级已安装的所有casks"><a href="#升级已安装的所有casks" class="headerlink" title="升级已安装的所有casks"></a>升级已安装的所有casks</h3><p>From: <a href="http://apple.stackexchange.com/a/231020/13455">http://apple.stackexchange.com/a/231020/13455</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -s https://gist.githubusercontent.com/atais/5d3ec79e67f221cb55b7/raw/f6e6b647e6f90939c016ba88e591529d143cb33d/cash_upgrade.sh | bash /dev/stdin</span><br></pre></td></tr></table></figure>

<h2 id="强大的命令行"><a href="#强大的命令行" class="headerlink" title="强大的命令行"></a>强大的命令行</h2><ul>
<li>用iTerm2替换系统自带的terminal<ul>
<li>安装 Solarized Dracula theme （不要选Solaris dark，好多工具的输出会看不见）</li>
<li>更改字体</li>
</ul>
</li>
<li>用zsh替换缺省的bash<ul>
<li>使用 Oh-my-zsh 进行zsh的配置，以上步骤参考这里 <a href="https://gist.github.com/kevin-smets/8568070">https://gist.github.com/kevin-smets/8568070</a></li>
<li>设置为超酷的theme: <a href="https://gist.github.com/agnoster/3712874">agnoster</a></li>
</ul>
</li>
<li>安装 <a href="https://github.com/clvv/fasd">fasd</a></li>
</ul>
<h2 id="Finder增强"><a href="#Finder增强" class="headerlink" title="Finder增强"></a>Finder增强</h2><h3 id="快速切换是否显示隐藏文件"><a href="#快速切换是否显示隐藏文件" class="headerlink" title="快速切换是否显示隐藏文件"></a>快速切换是否显示隐藏文件</h3><p>按照<a href="http://apple.stackexchange.com/questions/177132/how-to-set-h-to-enable-show-hidden-files/177138#177138">这里</a>的方法创建一个Automator Service。</p>
<h3 id="增强-Finder-预览文件的能力"><a href="#增强-Finder-预览文件的能力" class="headerlink" title="增强 Finder 预览文件的能力"></a>增强 Finder 预览文件的能力</h3><p>安装quick look plugins： <a href="https://github.com/sindresorhus/quick-look-plugins">https://github.com/sindresorhus/quick-look-plugins</a></p>
<h2 id="增强剪贴板"><a href="#增强剪贴板" class="headerlink" title="增强剪贴板"></a>增强剪贴板</h2><p>安装 ClipMenu，提供剪贴板历史功能</p>
<h2 id="本地化Web应用"><a href="#本地化Web应用" class="headerlink" title="本地化Web应用"></a>本地化Web应用</h2><p>安装 <a href="https://github.com/dmarmor/epichrome">epichrome</a> 将web应用（例如trello）包装为本地应用，方便使用 Mission Control 和全屏。它实际上是每个web应用绑定一个独立的chrome profile，故此还可以安装使用chrome插件。</p>
<h2 id="一套键盘鼠标控制两台电脑"><a href="#一套键盘鼠标控制两台电脑" class="headerlink" title="一套键盘鼠标控制两台电脑"></a>一套键盘鼠标控制两台电脑</h2><p>Mac是台式机，键盘鼠标连接到Mac上，安装SynergyKM，运行为server；Win笔记本安装Synergy（网上寻找第三方编译版本，open source，但官网下载binary要收费），运行为client。</p>
<p>使用Windows键盘，需要重新映射按键。首先是在 Preference - Keyboard - Modifier Keys 中对调 Option 和 Command 键，这样左下角三个键的位置就跟Mac的键位相同了。然后安装<a href="https://pqrs.org/osx/karabiner/">Karabiner</a>，一个功能超强的键盘映射工具，在profile中选择enable需要的映射规则。</p>
<p>因为用 Synergy 同时控制Win电脑，这时重映射过的键盘在 Windows 里面就很难用了。Karabiner 支持多个profile，但目前还没有根据所在屏幕自动切换的方案，解决方法是创建一个NoRemap的profile，里面不打开任何remap规则，用F6键做profile切换。</p>
<p>Profile切换需要在Karabiner中增加自定义规则，在<code>private.xml</code>中加入下面的内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">vkopenurldef</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>KeyCode::VK_OPEN_URL_SHELL_switchprofile_default<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span> <span class="attr">type</span>=<span class="string">&quot;shell&quot;</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name Default    ]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">vkopenurldef</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">vkopenurldef</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>KeyCode::VK_OPEN_URL_SHELL_switchprofile_noremap<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span> <span class="attr">type</span>=<span class="string">&quot;shell&quot;</span>&gt;</span></span><br><span class="line">        &lt;![CDATA[    /Applications/Karabiner.app/Contents/Library/bin/karabiner select_by_name NoRemap    ]]&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">vkopenurldef</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Switch Profile to Default with F6<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">identifier</span>&gt;</span>private.switch1<span class="tag">&lt;/<span class="name">identifier</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">autogen</span>&gt;</span></span><br><span class="line">        __KeyToKey__</span><br><span class="line">        KeyCode::F6,</span><br><span class="line">        KeyCode::VK_OPEN_URL_SHELL_switchprofile_default</span><br><span class="line">    <span class="tag">&lt;/<span class="name">autogen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Switch Profile to NoRemap with F6<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">identifier</span>&gt;</span>private.switch2<span class="tag">&lt;/<span class="name">identifier</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">autogen</span>&gt;</span></span><br><span class="line">        __KeyToKey__</span><br><span class="line">        KeyCode::F6,</span><br><span class="line">        KeyCode::VK_OPEN_URL_SHELL_switchprofile_noremap</span><br><span class="line">    <span class="tag">&lt;/<span class="name">autogen</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>参考自：<a href="http://apple.stackexchange.com/a/143064/13455">http://apple.stackexchange.com/a/143064/13455</a></p>
]]></content>
      <tags>
        <tag>Software</tag>
        <tag>Hardware</tag>
      </tags>
  </entry>
  <entry>
    <title>Blog update</title>
    <url>/blog/2016/08/30/update/</url>
    <content><![CDATA[<p>接近一年没有更新过这个blog了，时间过得真快，也是有史以来荒废得最久的时间。</p>
<p>虽然没有写文章，在上半年还是断断续续的花了点时间升级了blog系统。原本用的是<a href="https://github.com/octopress/octopress">Octopress</a>，但Octopress的3.0版本开发基本上处于废弃状态，想换回正宗的<a href="https://jekyllrb.com/">Jekyll</a>，Jekyll 3.0的发布也是从2004年底一直等到2005年底，试用过测试版本很多不兼容问题。从去年以来，工作重点切换到node.js平台，于是自己的项目也选择node.js好了，最后选用了<a href="https://hexo.io/">Hexo</a>作为blog系统。Hexo还有个优点就是render速度比基于Ruby的Jekyll&#x2F;Octopress快了起码一个数量级，我这里三百多篇文章，以前启动预览得大概一分钟，现在几秒钟。</p>
]]></content>
      <tags>
        <tag>Blogging</tag>
      </tags>
  </entry>
  <entry>
    <title>Consul 集群不稳定的分析</title>
    <url>/blog/2016/11/05/Consul-unstable/</url>
    <content><![CDATA[<p>一个 Consul 集群由3个 Consul server 和近百个 Consul client 组成。观察发现集群状态不稳定，频繁出现以下现象：</p>
<ol>
<li>节点退出集群，又重新加入集群；</li>
<li>重新选举 leader，有时候原来的 leader 会重新当选。</li>
</ol>
<span id="more"></span>

<p>对于第一个问题，分析发现原因是我们错误使用了 fail fast 策略：我们平台中会有个supervisor daemon监控着进程的状态，当进程 health check 失败了，就会重启进程并且发送告警。对于 Consul agent 进程，health check 调用 Consul API，API不能正常返回就认为进程状态不健康。这样做本来的用意是及时发现集群配置的错误，另外也是服务依赖管理的需要，依赖 Consul 的其它服务会等到 Consul agent 进入正常状态后才启动。但是，由于第二个问题的存在，在 leader 重新选举过程中 API 不能正常响应，Consul agent 就被当作不健康而被重启，出现了 Consul 节点退出重新加入集群的现象。本来，群集是能自动恢复到正常工作状态的，重启进程反而造成更大的负面影响。</p>
<p>对于第二个问题，直接原因是某个 Consul server 所在的VM上有个异常的进程将CPU几乎全耗尽了，Consul 不能及时的处理集群间的通信，响应超时，产生了临时性的脑裂。但开始我们一直不能理解，单个 server 的 partitioning 为什么会影响到整个集群呢？剩余的 2 个 server 应该还是能够组成集群并保持稳定的 leader 才对。后来才发现，比起全部丢失，消息的部分丢失所引起的现象会诡异得多。</p>
<p>这是当前 leader cm121 的日志：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">50:32 [WARN] raft: Rejecting vote from 172.17.52.84:8300 since we have a leader: 172.17.52.121:8300</span><br><span class="line">50:32 [ERR] raft: peer 172.17.52.84:8300 has newer term, stopping replication</span><br><span class="line">50:32 [INFO] raft: aborting pipeline replication to peer 172.17.52.84:8300</span><br><span class="line">50:32 [INFO] raft: aborting pipeline replication to peer 172.17.52.85:8300</span><br><span class="line">50:32 [INFO] consul: cluster leadership lost</span><br><span class="line">50:32 [INFO] raft: Node at 172.17.52.121:8300 [Follower] entering Follower state</span><br><span class="line">50:33 [WARN] raft: Heartbeat timeout reached, starting election</span><br><span class="line">50:33 [INFO] raft: Node at 172.17.52.121:8300 [Candidate] entering Candidate state</span><br><span class="line">50:34 [INFO] raft: Election won. Tally: 2</span><br><span class="line">50:34 [INFO] raft: Node at 172.17.52.121:8300 [Leader] entering Leader state</span><br><span class="line">50:34 [INFO] consul: cluster leadership acquired</span><br><span class="line">50:34 [INFO] consul: New leader elected: cm121</span><br></pre></td></tr></table></figure>

<p>在这个例子中，CPU耗尽的 server 是 cm84，当前 leader 为 cm121。cm121 会定期发出 AppendEntries RPC，但 cm84 因为没有CPU资源没有处理到，等到 heartbeat timeout，cm84 错误认为当前没有 leader 了，就向所有其它 server 发出 RequestVote RPC（带有更大的 term 值），自荐为候选人，发起一轮新的投票。但是这个投票请求被其它 server 都拒绝了。</p>
<img src="/blog/attachments/2016/11/raft_state.png" class="">

<p>根据状态图可知，当 leader 收到其它 server 发来的消息有更大的 team 值时，就需要交出 leader 位置，转为 follower。因此被 cm84 一捣乱，集群里面就没有 leader 了，导致接下来的超时重新选举。在新一轮选举中，cm121得到两票，重新当选为 leader。</p>
<p>将消息的时间线画出来，其中 S1 为当前 leader (cm121)，S3 为会间歇性丢掉消息的 server (cm84)，可见 S3 如何导致重新选举 leader。</p>
<img src="/blog/attachments/2016/11/timeline.jpg" class="">

<p>对于 Consul 中 raft 实现的行为：reject vote since we have a leader，似乎跟 raft 论文描述的有些出入。在 Raft <a href="https://raft.github.io/raft.pdf">论文</a>中 RequestVote RPC receiver implementation 部分，没有提到已有 leader 时需要 reject 新的 vote。不过，即使没有这个检查，cm84 大部分情况下还是不能满足当选条件，因为它错失了 leader 发来的 AppendEntries RPC，它的 log 就不一定是 up-to-date 的（除非错失的 AppendEntries 没有 log entries，只是heartbeat）。cm84 不能当选，cm121被迫退位，群集还是会进入无 leader 状态。</p>
<blockquote>
<p><strong>RequestVote RPC</strong></p>
<p>Invoked by candidates to gather votes (§5.2).</p>
<p>Arguments:</p>
<ul>
<li>term : candidate’s term</li>
<li>candidateId : candidate requesting vote</li>
<li>lastLogIndex : index of candidate’s last log entry (§5.4)</li>
<li>lastLogTerm : term of candidate’s last log entry (§5.4)</li>
</ul>
<p>Results:</p>
<ul>
<li>term : currentTerm, for candidate to update itself</li>
<li>voteGranted : true means candidate received vote</li>
</ul>
<p>Receiver implementation:</p>
<ol>
<li>Reply false if term &lt; currentTerm (§5.1)</li>
<li>If votedFor is null or candidateId, and candidate’s log is at<br>least as up-to-date as receiver’s log, grant vote (§5.2, §5.4)</li>
</ol>
</blockquote>
<p>下一步要做的是避免 Consul 进程得不到足够的CPU资源，计划尝试修改 Consul 进程的 nice 来提高调度优先级，或者配置 CPU affinity 绑定一个CPU核给 Consul。</p>
<p>另外，在分析过程中也进一步加深了对 Consul 的理解。</p>
<p>Consul agent 分为两种：server 和 client。实际上，这里是两个不同层次的群集（当涉及到多个 datacenter 时，还多一个 WAN layer，这里就不讨论了）。</p>
<img src="/blog/attachments/2016/11/consul_cluster.jpg" class="">

<p>所有 server 通过 Raft 协议组成一个集群，是一个 CP 系统。Consul 的 catelog 和 KV store 服务都是在这个 raft 集群中提供的，虽然 API 在 client 上也提供，但 client 只是转发给 server 来处理。集群中只会选出最多一个 leader，能容忍 partition 的发生（脑裂）。当存在 pratitioning 时，leader 在有多数 server 的分区里，只有少数 server 的分区选不出 leader。数据写入都由 leader 处理，保证了强一致性。 数据读取根据一致性要求（consistency mode），可以由 leader 或者 follower 处理。在没有选出 leader 的时候，Consul 的大部分 API 会不可用（consistency mode 为 stale 的读请求应该可以处理，需要测试确认一下）。</p>
<p>所有 consul agent，包括 server 和 client，组成一个更大的集群，就是平常所说的 consul cluster。这个集群是通过 Serf 协议（一种 gossip 协议）组成的，是一个AP系统，用于 consul 节点的发现和管理。AP系统只能保证最终一致性，因此 consul 节点的加入或者离开，是不能立刻被整个群集所见到的。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>在非GPL应用中使用OpenJDK的法律问题</title>
    <url>/blog/2017/01/06/Use-OpenJDK-in-proprietary-software/</url>
    <content><![CDATA[<p>大家都知道 Oracle JDK 在商业应用场合是需要购买 license 的，往往会选择 OpenJDK 来规避。但是，OpenJDK 的 license 是 GPL，GPL 是一种 “传染性” 的协议，那么 OpenJDK 是否可以在非 GPL 应用中使用呢？</p>
<span id="more"></span>

<p>在 <a href="http://stackoverflow.com/">StackOverflow</a>、<a href="http://opensource.stackexchange.com/">Open Source Stack Exchange</a> 中搜索到一些相关的讨论，大部分答案是认为可以使用，应用无需因此用 GPL 发布，但也有人提出质疑。</p>
<p>在 OpenJDK 网站中的 <a href="http://openjdk.java.net/faq/">FAQ</a>是这么写的：</p>
<blockquote>
<h3 id="What-open-source-license-is-OpenJDK-published-under"><a href="#What-open-source-license-is-OpenJDK-published-under" class="headerlink" title="What open-source license is OpenJDK published under?"></a>What open-source license is OpenJDK published under?</h3><p>GPL v2 for almost all of the virtual machine, and GPL v2 + the Classpath exception for the class libraries and those parts of the virtual machine that expose public APIs.</p>
<h3 id="How-do-I-know-which-license-applies-to-a-given-source-code-file-in-OpenJDK"><a href="#How-do-I-know-which-license-applies-to-a-given-source-code-file-in-OpenJDK" class="headerlink" title="How do I know which license applies to a given source code file in OpenJDK?"></a>How do I know which license applies to a given source code file in OpenJDK?</h3><p>Each source code file is individually licensed - look for the copyright header with the license information.</p>
</blockquote>
<p>比较坑爹的是整个 OpenJDK 居然不是统一使用一种授权协议，每个源文件有自己独立的授权——要明确你使用的法律责任，得一个一个源文件看去！不过，按照 FAQ 里面的说法（如果它是准确的），类库和 JVM 的公共 API 都是用 GPL v2 ＋ Classpath exception (GPL v2 + CE) 发布的。</p>
<p>这个 classpath exception 是什么回事？GPL v2 要求：基于 GPL 软件派生出来的作品也需要继承使用 GPL 协议发布。一个程序动态链接或者静态链接了一个库，都视为此库的派生作品。按照这个定义，在 Java 程序里使用了（在classpath中包含了）某个类库，就是此类库的派生作品。然后，OpenJDK 的某些源代码的授权声明中，在 GPLv2 协议文本之后附加了一段 <a href="http://openjdk.java.net/legal/gplv2+ce.html">classpath exception</a>，对于链接这种情况给予了豁免，可以自由选择授权协议。</p>
<p>我的理解，这是为了让 OpenJDK 可被商业应用（非 GPL 授权应用）使用。JVM (HotSpot) 的代码大部分都是用 GPL （没有 classpath exception）授权，但因为 Java 应用只是在 VM 上运行，并没有与 VM 链接，所以不受 GPL 的限制。</p>
<p>但是，没有那么简单。咨询公司开源部门的专业人士，他让我谨慎的评估一下。因为 OpenJDK 作为一个开源项目，并没有严格的控制提交代码采用的授权协议，很可能某个代码提交增加了一个新的源文件，其授权是不带 CE 的，或者将已有文件的授权的 CE 部分删除了，应用使用了这个源文件编译出来的库就中招了。</p>
<p>我下载了 OpenJDK7 的源代码，用脚本扫描了所有 <code>*.java, *.c*, *.h*</code> 文件，找出带有 GPL 但又不包含 Classpath exception 的文件。除去 HotSpot 部分和 example 代码，并不多：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./share/lib/security/BlacklistedCertsConverter.java</span><br><span class="line">./aix/porting/porting_aix.*</span><br><span class="line">./share/native/sun/security/ec/impl/*</span><br></pre></td></tr></table></figure>

<p>第一个是个工具（带有main函数），不是库的一部分；第二个是 AIX 系统相关的；第三个是属于 <a href="http://docs.oracle.com/javase/7/docs/technotes/guides/security/SunProviders.html#SunEC">SunEC provider</a>，实现椭圆曲线加密算法（ECC）的。</p>
<p>需要我们注意的只有第三个，对应着文件 <code>jre/lib/ext/sunec.jar</code>。也就是，Java应用确保不使用这个jar，就可以用 OpenJDK 而不需要用 GPL 发布。一旦使用了 <code>sunec.jar</code>，整个 Java 应用都必须用 GPLv2（或其兼容协议）发布，开放源代码。</p>
<p>但我上面的分析仅仅是基于当前版本的 OpenJDK7，OpenJDK 每次发布代码都会变化，故此每次要安装升级时都必须重新检查它的所有源代码的授权协议。对于商业软件来说，保险起见还是乖乖给 Oracle 付费使用他们家的 JDK 吧。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
        <tag>Java</tag>
        <tag>OpenSource</tag>
      </tags>
  </entry>
  <entry>
    <title>使用OsmAndMapCreator及时更新OsmAnd地图</title>
    <url>/blog/2017/06/17/OsmAndMapCreator/</url>
    <content><![CDATA[<img src="/blog/attachments/2017/6/osmand.jpg" class="">

<p>使用 <a href="https://www.openstreetmap.org/">OpenStreetMap</a> （简称为OSM）地图数据的手机应用有好些，<a href="http://osmand.net/">OsmAnd</a> 是其中比较优秀的一个。OsmAnd的地图数据每月更新一次，延后了半个月到一个多月。作为一个OSM mapper，期望能够马上看到和用到最近做出的修改，等一个月实在太久了。</p>
<span id="more"></span>

<p>OSM原始地图数据在 <a href="http://wiki.openstreetmap.org/wiki/Planet.osm">planet.osm</a> 的网站可以下载到，但数据文件是全球的，非常大。从 <a href="http://download.geofabrik.de/">GeoFabrik</a> 可以下载按国家分割的数据文件。中国区的PBF格式数据是330MB。但每天重新下载一个数据包还是太大了，其实更新的数据不是很多。网站上还提供每天（planet.osm还有每小时）的变更数据包（osc文件），用 <code>osmupdate</code> 工具就能自动下载变更并且生成新的完整数据文件。 </p>
<p>有了最新的 osm.pbf 数据文件，就可以使用 <code>OsmAndMapCreator</code> 生成 OsmAnd 可用的 OBF 格式离线地图文件了。生成的过程非常耗内存和CPU，全中国的地图在一台 Core i3-4370 CPU 的电脑上用了90分钟，需要分配 10GB 内存才够用（否则会出现 OutOfMemory 错误）。生成出来的 OBF 文件也有845MB之巨。为了缩短时间，我设置了 <code>osmupdate</code> 的<code>-b</code>参数，过滤出广东中部区域的数据，这样就快很多，几分钟搞定。</p>
<p>处理的流程如下图。实际上安装好软件，修改好配置后，每次更新就执行一个脚本，过程全自动。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Previous full map data (osm.pbf) \</span><br><span class="line">                              [osmupdate] --&gt; Latest full map data (osm.pbf)</span><br><span class="line">            Recent changes (osc) /                      |</span><br><span class="line">                                                        v</span><br><span class="line">[OsmAnd] &lt;------ Latest offline map (obf) &lt;------- [OsmAndMapCreator]</span><br></pre></td></tr></table></figure>

<p>步骤和脚本放在 gist：<a href="https://gist.github.com/aleung/42776348d023b689e8c337b82a3c7cd5">https://gist.github.com/aleung/42776348d023b689e8c337b82a3c7cd5</a> ，适用于 MacOS 和 Linix，需要自行修改文件中的目录路径。工具在Win平台也可以用，但脚本就要重新写了。</p>
]]></content>
      <tags>
        <tag>GPS_GIS</tag>
        <tag>Map</tag>
      </tags>
  </entry>
  <entry>
    <title>Pact - 微服务的契约测试</title>
    <url>/blog/2017/06/21/pact/</url>
    <content><![CDATA[<p>微服务架构的系统中，存在着大量的服务，每个服务开放出接口（作为provider），接口可以被很多其他服务调用（consume）。接口API是服务提供者和服务消费者之间的契约，理论上，只要测试了双方的实现都完全符合API，就可以保证它们能够正常的集成到一起；但在现实场景中，对API难以给出非常精确的定义，覆盖测试完整API的工作量也会非常巨大，再加上随着API的演进，要验证兼容性更是很麻烦。</p>
<p>消费者驱动契约（<a href="http://martinfowler.com/articles/consumerDrivenContracts.html">Consumer Driven Contract</a>）测试试图解决这个问题。它从接口的消费者出发，记录下消费者使用接口的各种场景，以此作为契约，验证接口的提供者是否符合。<a href="https://docs.pact.io/">Pact</a> 就是支持针对 HTTP API 的消费者驱动契约测试的工具。</p>
<span id="more"></span>

<p>传统上会将测试做以下分类：</p>
<ul>
<li>单元测试：测试单个service</li>
<li>集成测试：测试由多个services组成的系统</li>
<li>端到端测试：测试从用户到各个外部系统的整个场景</li>
</ul>
<p>契约测试是对单元测试的增强，针对服务接口provider测试，覆盖了一部分本来需要集成测试才能测试到的场景。</p>
<p>假设我们有一个模块 P 提供了某个API，这个API被其他三个模块 C-1、C-2、C-3 使用了。集成测试需要搭建起一个环境，把这几个模块都部署起来，作为一个整体来测试，验证它们之间的 API 调用是否正确。</p>
<img src="/blog/attachments/2017/6/integration-test.png" class="">

<p>要对这些模块独立进行单元测试，就需要mock API 的 provider 或者 consumer。每个绿色框框都是独立的测试环境，相互没有依赖。但问题是，对 P 的测试，要覆盖 API 的各种调用场景，需要构造出很多测试用例，分别不同的设置 mock 的请求和期望响应。这样不但很繁琐，而且还很难确保已经覆盖了各种不同 consumer 的真正实用场景。</p>
<img src="/blog/attachments/2017/6/unit-test.png" class="">

<p>引入了pact之后，对于 consumer 的测试区别不大，依然要写各种测试用例，给出 API 调用的期望请求和对于响应，只不过是换成用 pact 工具来做mock。在测试执行过后，pact 会将 API 请求以及响应（测试用例中模拟的）记录到 pact file（JSON格式）中，作为消费者端的契约。</p>
<p>对于 provider 的测试就不同了，不需要再构造测试用例来测试 API，而是将 pact files 作为输入，pact 会跟进消费者契约生成 API 请求，并且检查 provider 的响应是否符合契约。</p>
<img src="/blog/attachments/2017/6/test-with-pact.png" class="">

<p>使用了 pact 之后，依然是每个服务独立的进行单元测试，但是可以模拟出真实集成场景。</p>
<p>Pact 还提供了 pact broker 去管理 pact files，以便方便的发布、获取契约，了解服务之间的依赖关系。对于由非常多服务组成的复杂系统，会有很大帮助。</p>
<p>但是，使用消费者驱动契约测试是有限制的，只适用于测试系统内部服务：</p>
<ul>
<li>消费者、提供者都使用同样的契约测试工具进行测试</li>
<li>服务的消费者必须是可全部罗列的，所有服务消费者的测试用例需要完备，覆盖它调用 API 的所有场景，否则服务提供者的测试覆盖就会不足</li>
</ul>
<p>Read more:</p>
<ul>
<li><a href="http://dius.com.au/2016/02/03/microservices-pact/">Pact 101</a></li>
<li><a href="http://zhouqing86.github.io/2017/04/08/js-test11-pact-test/">JS测试之Pact测试</a></li>
</ul>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Microservice development environment make easy with Docker</title>
    <url>/blog/2017/09/07/docker-dev-env/</url>
    <content><![CDATA[<p>正在负责的产品线已经全面转为基于 node.js 技术栈微服务架构，为了提高开发效率，我希望能创建一个标准的、容易创建的开发环境，以改善开发环境之间不一致、可能不完备、创建配置麻烦的现状。</p>
<p>对这个开发环境的要求是 lightweight，reproducible 和 portable。</p>
<span id="more"></span>

<p>开始尝试的是 <a href="https://www.vagrantup.com/">Vagrant</a>，但感觉缺点还是不少：provision 过程麻烦了些；如果要同时进行不同的开发就要运行多个VM，占用资源比较多；而且有个关键问题没找到好的解决方法：Windows 的文件系统不支持符号链接 (symbolic link)，而 npm install 时会依赖于符号链接，VM 使用 Windows host 的共享目录时在里面执行 npm install 会出错。</p>
<p>这时 docker 进入了视野，容器的轻量、自包含一切的特性很满足我对标准化开发环境的要求。经过几天折腾，搞出了这样一套环境，初步试用还比较满意。</p>
<p>这个基于 docker 的开发环境做到了这些：</p>
<ul>
<li>可以运行于任何操作系统、任意主机上，只需要安装了 docker。我们用到的环境包括每个开发者的 PC、远程的公共开发机和测试 lab 里的主机，操作系统包括 Win7、Linux 和 macOS。</li>
<li>在满足要求的机器上（装好 docker 和其他必须的软件），敲一个命令，在一分钟内就可以从无到有创建出一个开发环境。</li>
<li>开发环境中所有东西都是预定义和存储于公共仓库（包括 git，docker镜像和 npm 模块仓库）中，每个人在任何机器上创建出来的环境都会是一摸一样的。</li>
<li>定义出一套标准的、可重用的环境，统一各个微服务项目的开发体验。</li>
</ul>
<p>这个开发环境覆盖了一个微服务的日常开发流程，包括编码、构建、质量检查、单元测试等等。但不含括要求跨服务集成的测试，例如系统测试、端到端测试。</p>
<p>环境包括预先创建的用于开发、测试的多个docker镜像。其中最主要的是 node.js 环境的镜像，其中包括了基本的 Linux shell 环境和 node.js 开发运行用到的软件。其他镜像是单元测试中需要依赖到的工具。</p>
<img src="/blog/attachments/2017/9/images.png" class="">

<p>每个微服务有自己独立的开发环境，通过 <code>docker-compose</code> 启动起来。被开发的服务在 node.js 容器中构建和测试，源代码放在host文件系统中，通过 volume与容器共享，这样开发者可以在 host 上随意使用喜欢的编辑器修改代码，也绕开容器没法运行图形界面应用的问题。根据需求，将单元测试要用到的容器 link 到 node.js 容器，构造出测试环境。</p>
<img src="/blog/attachments/2017/9/microservice-dev.png" class="">

<p>于微服务开发，是不需要暴露任何端口出来的，因为测试过程都在容器中。对于 web 应用开发，要从容器中映射出 http 端口供 host 的浏览器访问，如果需要做 web debug，还可以将 debug 端口暴露出来。</p>
<p>一个 host 上可以同时进行多个项目的开发，环境完全独立，相互并不干扰。</p>
<img src="/blog/attachments/2017/9/isolated-env.png" class="">

<p>在调试这个环境的过程中，最麻烦的是 Win7 上运行 docker。在 Win10 之前的环境中运行 docker，当某些特殊字符在控制台上显示时，有可能引发 docker 出现 “New state of ‘nil’ is invalid” 的错误。详细情况在 docker issues <a href="https://github.com/moby/moby/issues/21323">#21323</a> 中 <a href="https://github.com/moby/moby/issues/22345">#22345</a> 有描述。后来找到变通方案：安装  <a href="http://conemu.github.io/en/Downloads.html">ConEmu</a> 或者 <a href="http://cmder.net/">Cmder</a>，并且将 ConEmu 设置为缺省终端，替换掉 Windows 自带的终端，就可以避免错误的发生。</p>
<p>Windows 环境里还有一个限制：只有 <code>C:/Users/</code> 下面的目录才能被挂载成 docker volume，所以源代码目录必须放在 <code>C:/Users/&#123;your_id&#125;/</code> 之下.</p>
<p>一个开发环境需要的容器以及相关配置都定义在 <code>docker-compose.yml</code> 文件中了，以下为一个例子：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">target:</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">foo-service</span>    <span class="comment"># set it to your project name</span></span><br><span class="line">    <span class="attr">image:</span>  <span class="string">internal.docker.hub/dev/nodejs</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">$&#123;PWD&#125;:/project</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">~/.cache/yarn:/usr/local/share/.cache/yarn</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">postgres</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">PgDatabaseAddress:</span> <span class="string">postgres</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">postgres:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">internal.docker.hub/dev/postgres</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">POSTGRES_PASSWORD:</span> <span class="string">test</span></span><br><span class="line">      <span class="attr">POSTGRES_USER:</span> <span class="string">test</span></span><br></pre></td></tr></table></figure>

<p>另外，对于 node.js 项目，我们也定义了统一的 <code>package.json</code> 模版，里面包含了开发过程各种操作的 npm scripts，包括 TypeScript 编译、代码格式化、tslint检查、单元测试、文档生成等等。</p>
<p>要在一台机器上开始某个项目的开发，要做的事情只需要：</p>
<ol>
<li>将源代码 git clone 的本地目录，里面包括了定义docker环境的  <code>docker-compose.yml</code> 和定义 node.js 项目的 <code>package.json</code>。</li>
<li>运行 <code>docker-compose up --rm target</code>，启动 docker 环境。启动时会自动安装所有 npm 依赖。</li>
<li>这时终端会进入到容器的 bash 中，在这儿就可以像在本地环境一样进行开发操作了，例如：<code>yarn build</code>, <code>yarn test</code>。</li>
</ol>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>Kossel Mini 3D打印机制作记录 (2)</title>
    <url>/blog/2017/12/31/kossel-mini-3d-printer-making/</url>
    <content><![CDATA[<img src="/blog/attachments/2017/12/kossel.jpg" class="">

<p><a href="/blog/2015/10/05/kossel-mini-3d-printer-making/">上一篇</a>是2015年国庆写的，当时是滑轨质量不行需要更换。后来重新买了滑轨，装配起来，测试过电路板、电机正常，然后就停工了。一放两年，这两个星期终于重新拿出来，继续制作。</p>
<span id="more"></span>

<p>两年过去，Kossel打印机已经不是DIY热门了，搜索到的新信息很少。另一方面，淘宝上配件的价格普遍下降了不少。</p>
<h1 id="装配"><a href="#装配" class="headerlink" title="装配"></a>装配</h1><p>其实主要部分在2015年底已经装好了，就差滑车限位开关和挤出机没装上。装起来后就是上面照片的样子啦。</p>
<p>电线虽然已经理过了还是有些乱，等能打印后设计个外壳把电路板罩上。</p>
<h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><p>装配还好，调试才是累人的活。</p>
<p>升级到最新的 Merlin 固件，delta结构打印机的配置参数减少了一些，网上的调试教程普遍是两三年前的，针对旧版本固件，已经不适用了。</p>
<h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>Delta 结构打印机的坐标原点在打印床正中心，三根立柱依次编号为 alpha &#x2F; beta &#x2F; gamma，但也有称为 X, Y, Z 柱，不能跟坐标系的三个轴混淆。三根立柱和xy平面的位置关系如下图，圆形为可打印半径。需要先计算好A, B, C 三点的xy坐标，后面调试要用。</p>
<img src="/blog/attachments/2017/12/delta_columns.jpg" class="">

<p>打印头的移动可以分解为：</p>
<ul>
<li>z轴上的运动：三个柱的滑车同时上下移动相同距离；</li>
<li>xy平面上的运动：三个滑车上下移动不等距离，造成斜杆倾斜角度变化而改变斜杆在平面上的投影长度；</li>
</ul>
<p>需要给出的参数就是以下几个：</p>
<ul>
<li><code>DELTA_DIAGONAC_ROD</code> - 斜杆长度</li>
<li><code>DELTA_RADIUS</code> - 打印头处于平面正中央时，斜杆在平面上的投影长度</li>
<li><code>DELTA_HEIGHT</code> - 打印头可以到达的最高点的z坐标</li>
<li><code>DELTA_PRINTABLE_RADIUS</code> - 可打印半径</li>
<li><code>DEFAULT_AXIS_STEPS_PER_UNIT</code> - 各电机（包括三个柱，和挤出机）走1mm需要的步进脉冲数量</li>
</ul>
<p>打印机怎么知道滑车的位置呢？滑车由步进电机驱动，根据<code>DEFAULT_AXIS_STEPS_PER_UNIT</code>可以推算出相对运动距离。在轨道最高点（endstop）安装有感应开关，滑车复位时上行至最高点直到感应开关触发，此处的位置对应着z轴的<code>DELTA_HEIGHT</code>值。</p>
<img src="/blog/attachments/2017/12/delta_radius.jpg" class="">

<h2 id="参数调整"><a href="#参数调整" class="headerlink" title="参数调整"></a>参数调整</h2><h3 id="初始设定"><a href="#初始设定" class="headerlink" title="初始设定"></a>初始设定</h3><p><code>DEFAULT_AXIS_STEPS_PER_UNIT</code> 这个参数的调准是第一步。我用的步进电机基本步距1.8°，RAMPS驱动板采用1&#x2F;16微步（microstepping），也就是转一圈需要3200个脉冲。XYZ柱电机安装GT2同步轮，齿距2mm，16齿，也就是转一圈滑车移动32mm，由此算出 100 steps&#x2F;mm。对于挤出机(E)，根据挤出轮直径12mm，算出周长37.7mm，得到 84.88 steps&#x2F;mm。</p>
<p>尽可能精确的测量斜杆长度（球头中心点距离），填入<code>DELTA_DIAGONAC_ROD</code> 。</p>
<p>将三个滑车推到最高点，测量打印嘴离打印床的垂直高度，稍放大几毫米余量，填入<code>DELTA_HEIGHT</code>。</p>
<p><code>DELTA_RADIUS</code> 的值很难测准，可以通过用细线挂重物的方式来找出垂线。两三毫米内的误差也是可以的。</p>
<h3 id="调准高度和endstop偏移"><a href="#调准高度和endstop偏移" class="headerlink" title="调准高度和endstop偏移"></a>调准高度和endstop偏移</h3><p>三个立柱的 endstop 感应器安装位置会有偏差，不在一个水平面上，<code>DELTA_ENDSTOP_ADJ</code> 参数可以矫正这个误差（如果有EEPROM，也可以用 G-code <code>M666</code> 设定这些参数并用<code>M500</code>保存）。</p>
<p>为了调校方便，需要在printing host软件中先设定4个宏，分别让打印头移动到前面基础知识坐标平面图中的 A, B, C, O 点。宏包含以下 G-code，其中x,y为点的坐标：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">G28</span><br><span class="line">G0 X&lt;x&gt; Y&lt;y&gt; Z5 F5000</span><br></pre></td></tr></table></figure>

<p>执行宏后，打印头会悬停在对应点上方的几毫米处。在打印床上放一张复印纸。在printing host软件中控制打印头z轴单步下降，接近后每次下降0.1mm，抽拉复印纸根据打印头有没有摩擦到纸张来判断打印头是否已经降到打印床表面，如果纸张被打印头压死抽不动就是已经太低了。记录下最后的z坐标（打印机液晶屏显示，或者<code>M114</code>指令获取）。</p>
<p>根据A, B, C点测量到的值，调整 <a href="http://reprap.org/wiki/G-code#M666:_Set_delta_endstop_adjustment"><code>M666</code></a> 的X, Y, Z参数，反复迭代测量、调整，直到A, B, C点打印头接触打印床时z坐标为零。这个步骤完成后，打印机的三个立柱上滑车的z高度就是准确和同步的了。</p>
<h3 id="调准radius"><a href="#调准radius" class="headerlink" title="调准radius"></a>调准radius</h3><p>上面调整结束后，O点数据不为零，也就是打印头在xy平面上运动，z坐标不变的时候，实际上的运动轨迹是一个碗形，可能向上凸也可能向下凹。要纠正碗形失真，需要精确设置 <code>DELTA_RADIUS</code> 参数。用 <a href="http://reprap.org/wiki/G-code#M665:_Set_delta_configuration"><code>M665</code></a> 也可以调整这个参数 (R)。</p>
<p>调试过程类似，也是迭代调整参数和测量，直到 A, B, C, O 点均测得零值。</p>
<h3 id="调准斜杆长度"><a href="#调准斜杆长度" class="headerlink" title="调准斜杆长度"></a>调准斜杆长度</h3><p>接下来的校准需要通过打印一个立方体来进行，用游标卡尺测量打印出来的真实 x, y 边长，根据与期望长度的比例来调整 <code>DELTA_DIAGONAC_ROD</code>（或<code>M665</code>的L参数）。</p>
<p>由于打印头问题，这个测试还没能开始。</p>
<h3 id="调试数据记录"><a href="#调试数据记录" class="headerlink" title="调试数据记录"></a>调试数据记录</h3><p>下表是几次迭代校准的过程，左边的是使用的参数，A／B／C／O为测量值。</p>
<table>
<thead>
<tr>
<th>M666 X</th>
<th>M666 Y</th>
<th>M666 Z</th>
<th>M665 H</th>
<th>M665 L</th>
<th>M665 R</th>
<th>A</th>
<th>B</th>
<th>C</th>
<th>O</th>
<th>Comment</th>
</tr>
</thead>
<tbody><tr>
<td>-6</td>
<td>-8</td>
<td>-6</td>
<td>250</td>
<td>214</td>
<td>103</td>
<td>0</td>
<td>0.8</td>
<td>0.7</td>
<td>1.3</td>
<td></td>
</tr>
<tr>
<td>-6.2</td>
<td>-7.2</td>
<td>-5.3</td>
<td>250</td>
<td>214</td>
<td>103</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0.7</td>
<td>高度和水平已校准</td>
</tr>
<tr>
<td>-5.5</td>
<td>-6.5</td>
<td>-4.6</td>
<td>250</td>
<td>214</td>
<td>101</td>
<td>0.1</td>
<td>0</td>
<td>0.1</td>
<td>0</td>
<td></td>
</tr>
<tr>
<td>-5.5</td>
<td>-6.6</td>
<td>-4.6</td>
<td>250</td>
<td>214</td>
<td>101.2</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>0</td>
<td>radius已校准</td>
</tr>
</tbody></table>
<h2 id="挤出头"><a href="#挤出头" class="headerlink" title="挤出头"></a>挤出头</h2><p>运动部件的校准还说顺利，可是真准备首次打印的时候才出问题。</p>
<p>进丝一段之后就挤不进去了，步进电机前进一下就往回跳。喷嘴一点料都没有挤出来。尝试回抽，拔一小段后也卡住。拆开打印头，发现打印丝在离前端几毫米的地方形成了一个环，造成不能前进也不能后退。</p>
<p>散热风扇正常，升高降低温度都试过，四氟管已经确认插到头，都没发解决进丝一到喉管瓶颈为就堵塞的问题。从拔出来的堵塞物看，是丝进入喉管瓶颈位置后软化膨胀变粗，刮起表面一层，堆积成环状就卡死了。</p>
<img src="/blog/attachments/2017/12/jam.jpg" class="">

<p>这卷耗材还是两年前的，拆过封口，时间太长会对材料有影响。换了一卷没有拆封的耗材来测试，这次能过顺利进丝通过瓶颈位，喷嘴也出丝了。可是接下来加载模型打印，又不出料了。</p>
<p>上网查资料，发现现在的喉管有改进型的，里面带铁氟龙管内衬，或者是可以让进料铁氟龙管直通过去，一直到喷嘴处。在耗材可能软化的段都是铁氟龙管内衬，摩擦力很小而且没有接缝，就不容易出现堵塞。</p>
<img src="/blog/attachments/2017/12/hotend.jpg" class="">

<p>元旦店家都休息了，又一次陷入等待状态……</p>
]]></content>
      <tags>
        <tag>Maker</tag>
      </tags>
  </entry>
  <entry>
    <title>Kossel Mini 3D 打印机制作记录 (3)</title>
    <url>/blog/2018/02/26/Kossel-Mini-3D-printer-making-3/</url>
    <content><![CDATA[<p>前篇：<a href="/blog/2015/10/05/kossel-mini-3d-printer-making/">(1)</a>,<a href="/blog/2017/12/31/kossel-mini-3d-printer-making/">(2)</a></p>
<h1 id="继续调试"><a href="#继续调试" class="headerlink" title="继续调试"></a>继续调试</h1><p>换上了淘宝上新买的喉管、铁氟龙送料管和送料管接头，出丝就正常了。另外，才知道铁氟龙管还有透明和乳白色两种，材质有点不同的，据说乳白色的更好。</p>
<p>第一次打印一个小方块出来，兴奋得不得了。</p>
<span id="more"></span>

<p>虽然能打印东西出来了，但实际上调试的磨难才刚刚开始。</p>
<p>打印校准立方体，发现问题 X、Y 尺寸有百分之几的偏差，直角不够垂直，最重要的问题是底部刚开始的几层错位严重，每层都比下面一层错位一两毫米。</p>
<h2 id="出料堆积"><a href="#出料堆积" class="headerlink" title="出料堆积"></a>出料堆积</h2><p>观察发现打印路径上有很多短边和转折的时候，会在端点上有出料堆积，堆多了造成打上一层时打印头刮碰。以为是这个原因造成的错位。到百度“3d打印”贴吧上问人，别人指出了几个可能问题：</p>
<ul>
<li>堆积材料因为冷却不够</li>
<li>打印头漏料</li>
<li>错位是因为步进电机丢步</li>
</ul>
<p>一检查，果然打印头有漏料。因为加热铝块和铜喷嘴的热膨胀系数不同，常温下拧紧的喷嘴高温下变得很松动，需要加热后再拧紧。</p>
<p>又加了小风扇在旁边吹打印模型，加速降温。但这个不是主要原因。在切片软件中降低挤出系数减少出料量，就没有堆积现象了。</p>
<p>电机丢步的评论我没有重视。（那时我还不知道怎样的现象是丢步，后来才发现其实这个才是真正原因。贴吧的人气很低，问问题很多天都没什么回应，但上面有些人确实有经验。）</p>
<p>可是，问题依然存在。</p>
<h2 id="框架偏差"><a href="#框架偏差" class="headerlink" title="框架偏差"></a>框架偏差</h2><p>仔细观察打印机框架，感觉立柱有一点点倾斜。用垂线测量了一下，确实是往一个方向出现了剪切位移。</p>
<p>框架用很多颗螺丝拧紧，型材插进角件中，有一点裕度，螺丝一压紧，难以控制它不倾斜。感觉要调正很困难，把解决的方向放在打印床上，想把玻璃打印床的固定螺丝换成弹簧可调节的，通过调整平面去让它与立柱垂直。</p>
<p>本来都要买调平螺丝了，晚上尝试了一下把打印机横放，底座的螺丝拧松一半，一个个直角来调整：先把螺丝拧到半紧，但用力还能稍微掰得动的程度，用直角尺量着立柱和平台的角度慢慢调整，直到把两根铝型材调整到正交，调好一处上紧一处的螺丝，一共6组。居然最后给调准了，用垂线测量基本上没有误差。</p>
<p>可是，这并不是导致层错位的原因。</p>
<h2 id="自动调平"><a href="#自动调平" class="headerlink" title="自动调平"></a>自动调平</h2><p>打印小立方体时，打印头只在打印平面的中心附近移动。尝试打大面积的校准模型，发现打印头在某些边缘位置会刮到打印床玻璃上，觉得是调平还有问题。</p>
<p>手工调平效率太低了，靠抽纸的方式来判断也不够准确。本来打算能自己打零件，才打印一个自动调平开关的安装座的，现在打印机的误差太大根本不能打零件。</p>
<p>于是买了一个压力传感器，无需安装，需要用时套到喷嘴上就行，当喷嘴下压到打印床上，传感器上下两片触片就会闭合。事实证明，这种传感器虽然贵一点，但绝对值得：</p>
<ul>
<li>使用方便，套上去就行</li>
<li>与喷嘴没有高度差，没有水平偏差，不需要测量和在固件中设置位移</li>
<li>不需要在效应器上额外安装东西，不会增加重量</li>
</ul>
<img src="/blog/attachments/2018/2/1.jpg" class="">

<p>另外也怀疑endstop的机械微动开关触发不准确，买了光电阻挡触发开关，不过后来也没有装上。</p>
<p>有了自动调平功能，看着打印头哒哒哒的敲打着玻璃板，十几个测量点反复测多轮，手工根本做不到，效率天上地下之差。</p>
<p>可是，自动调平之后，打印出来的立方体变形得更加厉害了，从底到顶都是歪的。</p>
<h2 id="电机失步"><a href="#电机失步" class="headerlink" title="电机失步"></a>电机失步</h2><p>有了压力传感器，尝试用 G30 指令做单次Z probe，发现连测几次结果都不一样，似乎是打印头接触玻璃板后没有立即停下来，造成错位了。修改固件，降低 Z probe 速度，慢动作之下就看出来了：打印头接触玻璃板后，水平滑动了一段距离才抬起——本来应该一探到玻璃板，开关触发，就马上抬起来的。以为是压力传感器不够敏感，试了用 M119 指令查看状态，手指头轻轻一压传感器，状态就变化了，也不是传感器问题。</p>
<p>而且，观察到这个滑行现象在探测点靠近B柱的时候特别明显，而在其他位置就不会发生。</p>
<p>百思不得其解，在百度贴吧和 <a href="https://3dprinting.stackexchange.com/q/5292/162">3dprinting.stackexchange.com</a> 上提问，都没有人回答。（贴吧在半个月后有高人指出问题，可那时我已经解决了）</p>
<p>后来试试用手阻挡滑块的运动，感受一下电机的力度。电机的力度蛮大的，我才明白为什么刚开始出料堆积造成打印头刮碰时，别人都没当这是原因——材料被打印头刮碰时已经被加热软化，所产生的阻力对电机来说算不上什么。而试到B柱时，电机的力度不足，手稍微用力阻挡就会打滑——原来这个就叫做电机的失步！</p>
<p>没有亲自尝试体会，没法完全理解别人的经验。</p>
<p>更换了步进电机，重新自动调平，4点测量后就已经准确校准了，后面的25点、100点测量都是一个迭代就收敛。到此为止，打印功能完全正常。</p>
<h1 id="完善"><a href="#完善" class="headerlink" title="完善"></a>完善</h1><p>接下来，是一些完善的工作。</p>
<h2 id="模型散热"><a href="#模型散热" class="headerlink" title="模型散热"></a>模型散热</h2><p>E3D v6 挤出头配了散热风扇，只是给挤出头散热的，不吹打印工件，所以我用个充电宝带个小米风扇在旁边吹。这样不是太方便，而且风扇距离太远也无法做到材料一挤出喷嘴就能立即冷却固化。看别人的设计，有些是在打印头旁边加挂一个风扇吹工件，看起来臃肿占地方，也增加重量。</p>
<p>在 Thingiverse 上见到一个二合一的风扇风道<a href="https://www.thingiverse.com/thing:839620">设计</a>，一个风扇分出两个风道，分别给挤出头散热和吹向喷嘴周边。</p>
<img src="/blog/attachments/2018/2/duct1.jpg" class="">

<p>制作了一个，感觉不够理想：</p>
<ul>
<li>风扇凸出太多，打印头运动到边缘时会碰撞立柱，减少了可打印范围半径</li>
<li>PLA材料弹性不够，夹在挤出头上可能会不够牢固</li>
</ul>
<p>想到改进的方向：</p>
<ul>
<li>外形紧凑，尽可能少凸出于效应器投影面：减少风扇倾角，尽量垂直放置；缩短风道长度</li>
<li>重用原来 E3D v6 配套的塑料风扇座，那个比较牢固</li>
</ul>
<p>重新设计了一个，也发布到 Thingiverse 上了：<a href="https://www.thingiverse.com/thing:2781523">https://www.thingiverse.com/thing:2781523</a></p>
<img src="/blog/attachments/2018/2/duct2.jpg" class="">

<h2 id="挤出机导管"><a href="#挤出机导管" class="headerlink" title="挤出机导管"></a>挤出机导管</h2><p>用的是 MK8 远程挤出机，铝合金材质很结实，回抽的效果也不差，但设计还说不上很完美：</p>
<ul>
<li>虽然进料孔、出料孔和齿轮边缘在一条直线上，但由于挤丝的一边是平的挤丝齿轮一边是带槽的堕轮，丝受压就歪向带槽的一方了，造成很难将丝插入出料孔。在打印前穿丝还可以用小螺丝刀拨着方向慢慢试，在打印过程中想接丝就没可能做到了。</li>
<li>换丝时即使按下杠杠松开压轮，丝线还是会摩擦挤丝齿轮。但这也不算什么问题了。</li>
</ul>
<p>看到有人用铁氟龙管替换堕轮，让整个进丝通道都在管中，我也试了一下。可是打印出来的工件很疏松，送料不足的样子，就装回堕轮了。后来再想，也许将挤压丝线的压力调大能有改善。</p>
<p>后来在出料孔前加了一小截铁氟龙导管，虽然还是做不到不靠手工辅助就能准确插入管中，但起码好操作一些了，打印过程中也能够接上另一段丝线。</p>
<img src="/blog/attachments/2018/2/extruder.jpg" class="">

<h2 id="电路板外壳"><a href="#电路板外壳" class="headerlink" title="电路板外壳"></a>电路板外壳</h2><p>电路板裸露会比较脆弱，得做个外壳装起来。</p>
<p>一个LCD控制器的外壳，一个 RAMPS＋Arduino的外壳，搞了好几天才弄好。最大的感受是：设计不难，建模不难，最麻烦的事情是怎么把尺寸测量准确。知道为什么说 3D 打印机是工业设计的好辅助工具了，电脑做的模型还是要做个真实样品出来才能验证，根据实物再做修改调整。如果没有快速成型工具，直接出模具，很可能就废了</p>
<p>做的各种零件，基本上都要打印两三次甚至更多才能最终确定设计。这种FDM 3D打印的速度其实很慢，半边外壳就要打印一个多小时。节省时间的方法是对于设计不确定、可能出问题的复杂的部分，先打印一块局部出来。</p>
<p>各种各样的测试品一堆：</p>
<img src="/blog/attachments/2018/2/2.jpg" class="">

<p>Kossel Mini 原来的设计里，电路板是放在框架的上方的。Delta结构打印机由于悬臂，上部空间浪费很多。于是我将LCD、Arduino和挤出机都改成挂在框架横梁下面，减少了整机高度，另外处于铝合金框架的保护之中，搬动、摆放也会安全一些。</p>
<img src="/blog/attachments/2018/2/3.jpg" class="">

<p>RAMPS＋Arduino的外壳的设计放在 Thingiverse上：<a href="https://www.thingiverse.com/thing:2806140">https://www.thingiverse.com/thing:2806140</a> 。LCD控制器我的做得不如别人的好，就没有放上去。</p>
<hr>
<p>这个3D打印机设计全过程涉及的资料，包括安装手册、参考资料、物料清单（BOM）和淘宝购买链接、打印模型源文件、照片都存放在 <a href="https://github.com/aleung/kosselprinter">https://github.com/aleung/kosselprinter</a></p>
]]></content>
      <tags>
        <tag>Maker</tag>
      </tags>
  </entry>
  <entry>
    <title>软件项目的标准配置和自动检查更新</title>
    <url>/blog/2018/04/11/project-preset/</url>
    <content><![CDATA[<p>在<a href="/blog/2017/09/07/docker-dev-env/">上一篇文章</a>中介绍了如何使用利用 docker 容器创建微服务开发环境，解决的是怎么保证同一个软件项目在任何地方都能够快速复制出一个相同的环境用于开发和测试。但是，在使用了微服务架构的产品线中，我们还面临另外一个挑战。</p>
<span id="more"></span>

<h2 id="挑战"><a href="#挑战" class="headerlink" title="挑战"></a>挑战</h2><p>系统由很多微服务构成，每个微服务都是一个独立的软件项目——单独的 git 代码仓库，各自的环境配置，独立的测试与发布流程。目前我们的系统中已经有了几十个这样的软件项目，而且数量还在不断增加。在我们每日的常规开发工作中，都不断的面临下面的问题：</p>
<ul>
<li>怎么快速创建出一个新的软件项目，包含所有必需的配置文件，并且符合产品线的标准开发测试流程和代码规范？</li>
<li>怎么保证依赖的软件／库都及时更新到合适的版本？怎么防止开发人员使用了错误的版本而导致质量隐患？</li>
<li>怎么防止开发人员使用了 license 不合适的第三方软件／库，导致法律风险？</li>
<li>对于开发团队使用的公共基础设施的更改（例如 CI 服务器的某些变更），需要修改软件项目的配置的，如何快速的在所有软件项目中完成修改？</li>
<li>怎么保证每个项目都应用了代码检查工具，并且及时更新到符合产品线统一定义的最新规范的配置？</li>
<li>需要在软件的开发测试自动化流程中引入新的步骤或工具，怎么快速的部署到所有的软件项目中？</li>
</ul>
<p>由于我们采用的开发平台和开发工具都使用了文件配置，以上的问题可以归纳为三个：</p>
<ul>
<li>首先是怎么简单快捷地创建出软件项目的一组文件；</li>
<li>然后是对于现有的软件项目，如何检查文件的某些内容是否符合规范（比如依赖定义中是否包含正确的版本号，CI流程定义有没有被删除掉某些步骤）；</li>
<li>最后是怎么去更新已有的文件内容。</li>
</ul>
<p>对于第一个问题，如何快速创建新的软件项目，业内已经有很多解决方案，通常使用称之为“脚手架” (scaffold) 工具。这些工具的本质上是基于模版创建出软件项目的一组基本文件。但是现有的脚手架工具都只能帮助新软件项目的初始化工作，并不能解决第三个问题，它们对于已经进入开发阶段的项目无能为力。而在开发实践中，根本不可能设置好项目模版就一成不变，技术在发展，流程在改进，开发流程和基础设施中也会有bug需要修复，经常会出现所有软件项目都需要做一些同样的改动的情况。</p>
<p>以前，遇到这样的情况，就得群发邮件，通知大家去修改。效果是可想而知的，有些项目忘记修改，有些改了但是改错了没有发现。而且大家习惯于遇到问题发现要修改的时候才找另外一个项目来抄，而不是按照邮件或文档里写的方法来改，结果抄的还是一个旧版本，或者是改漏的地方，要花大量的时间来排查问题。总之，在微服务化带来大量软件项目之后，这样的工作方式是相当低效的。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>厌倦了不停的发公告、催促大家做修改、帮助不同人解决重复出现的问题，得寻找一个根本解决问题的方法。也就是要做到：</p>
<ul>
<li>所有的规范要求应该通过<strong>代码（工具）</strong>来<strong>强制</strong>检查或执行，而不是靠个人自觉</li>
<li>所有与规范相关的代码更新都应该<strong>自动化</strong>进行，而不需要让每个项目的维护者手工去一次次做修改</li>
</ul>
<h2 id="方案"><a href="#方案" class="headerlink" title="方案"></a>方案</h2><p>经过几个月的试用与改进，一套符合我们产品线最佳实践和规范的node.js项目通用设定以及自动配置工具最终实用化并开始全面推广，称为 SES Node.js Project Preset。</p>
<p>Preset 主要包含两部分：项目标准配置和自动检查更新工具。</p>
<h3 id="项目标准配置"><a href="#项目标准配置" class="headerlink" title="项目标准配置"></a>项目标准配置</h3><p>项目标准配置涵括了 node.js 项目从编辑环境、开发流程、代码检查、测试流程、CI设置到软件发布的软件开发周期各个环节。</p>
<p>开发人员日常需要执行的操作只有两个：</p>
<ul>
<li><code>yarn docker</code> - 启动 docker 开发环境，过程中会自动安装依赖，自动更新到最新preset</li>
<li><code>yarn test</code> - 包括了代码编译、格式化、静态代码检查、执行单元测试、冗余代码检查等</li>
</ul>
<p>代码提交到 GitLab 上，CI流程会自动执行所有检查流程，除了测试不通过外，任何规范性检查不通过都不能合并回主干（体现强制性）。</p>
<p>项目标准配置通过一系列的脚本、工具配置文件来实现。主要包括以下这些：</p>
<ul>
<li>项目基本的文件模版：README，LICENSE，CHANGELOG。</li>
<li>Git环境配置：.gitignore，.gitattributes。</li>
<li>代码格式：编辑器风格定义文件 .editorconfig，TypeScript代码自动格式化工具 tsfmt、tslint。</li>
<li>TypeScript编译与代码检查：tsc配置文件tsconfig.json，代码检查工具 tslint，重复代码检查工具 jscpd。</li>
<li>单元测试：mocha测试工具，nyc测试覆盖率报告。</li>
<li>软件依赖版本：package.json 中的 dependencies、devDependencies、optionalDependencies。</li>
<li>Docker 开发环境配置：docker-compose.yaml。</li>
<li>软件打包发布：rpm spec 以及 rpm build script。</li>
<li>GitLab配置：Merge Request模版、Issue模版、CI流程定义文件 .gitlab-ci.yml</li>
<li>NPM脚本：package.json中的scripts配置，包括 build，test，ci，rpm，docker，start，setup 等等。</li>
</ul>
<h3 id="自动检查与更新工具"><a href="#自动检查与更新工具" class="headerlink" title="自动检查与更新工具"></a>自动检查与更新工具</h3><p>这样一个工具的最底层操作都是文件的修改和拷贝。我没有自己从头构建，而是基于开源自动化项目配置工具<a href="https://github.com/sapegin/mrm">mrm</a>。Mrm缺省支持一些task，例如 LICENSE 文件、.gitignore、编辑器格式、ESLint规则等等。缺省task的设置是一般开源项目的通用配置，对于我们产品不太适用，但是没关系，mrm也支持自定制task，提供了一组API，可以比较方便的修改包括 JSON、YML、ini、纯文本等各种格式的文件。我开发维护了一个 preset 库，包含一组自定义task，涵括了上面一节里的所有内容。</p>
<p>这个 mrm preset 最重要的是它不仅仅是根据预定义模版创建文件，它还分析现有项目的配置，检查是否需要更新。某些更新并不是单纯的覆盖，而是根据项目的具体情况来生成的，例如对于 docker-compose.yaml，根据里面定义了那些测试依赖容器，自动配置被测试应用的环境变量；分析 package.json 中的依赖定义，自动更新旧版本，如果发现有未列入白名单中的依赖，则告警或报错。</p>
<p>虽然项目标准配置涉及的东西很多，但是有了这个工具，配置起来只需要执行一条命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npx -p mrm -p @ses/mrm-preset mrm all --preset @ses/mrm-preset</span></span><br></pre></td></tr></table></figure>

<p>项目只需要配置一次，以后 preset 有新版本发布，在 docker 开发环境启动时就会自动安装并且更新。</p>
<p>当项目标准配置需要更改，仅需要更新并发布npm包<code>@ses/mrm-preset</code> ，也无需通知大家改动，任何开发者在进入项目开发环境时就会自动修改，他将修改提交到 GitLab 即可。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>规范必需强制性执行，才能保证代码质量。只要存在可以通融走捷径的地方，必然会形成技术债务累积。</p>
<p>要做到项目的配置能够全自动更新，环境的配置均应该以文件保存，与代码一同保存做 git 库里 （Infrastructure as code）。例如 Jenkins 的配置就没办法跟随项目代码一起变动，而 GitLab CI 配置就可以，这也是我们迁移到 GitLab 的其中一个原因。配置最好采用声明式风格，而非命令式，这样才方便自动修改。比如NPM script容易改，若项目用 gulp.js 做make工具，就很难改。（采用声明式风格，基于文件的配置，是现在很多平台和工具的趋势，例如 Docker，GitLab CI，Kubernetes，Vagrant等等）</p>
<p>综合上次介绍的 docker 标准环境和这里介绍的项目标准配置，利用自动化工具，可以有效提高开发效率，避免大量由于环境、配置因素出现的问题。</p>
]]></content>
      <tags>
        <tag>SoftwareDev</tag>
      </tags>
  </entry>
  <entry>
    <title>3D modeling language</title>
    <url>/blog/2018/08/26/3D-modeling-language/</url>
    <content><![CDATA[<img src="/blog/attachments/2018/8/openscad.png" class="">

<p>做好3d打印机，需要制作些什么就自己建模了。大部分的CAD工具都是图形交互式的，也就是靠鼠标把模型”画“出来，但我更喜欢通过建模语言来把模型描述出来。在网上搜寻和试用了一些基于3D建模语言的CAD工具，将我了解的记录一下。</p>
<span id="more"></span>

<h1 id="CAD建模语言"><a href="#CAD建模语言" class="headerlink" title="CAD建模语言"></a>CAD建模语言</h1><h4 id="OpenSCAD"><a href="#OpenSCAD" class="headerlink" title="OpenSCAD"></a>OpenSCAD</h4><p>网站：<a href="http://www.openscad.org/">http://www.openscad.org/</a></p>
<p>文档：<a href="http://www.openscad.org/cheatsheet/index.html">http://www.openscad.org/cheatsheet/index.html</a></p>
<p>这个领域的领头项目，知名度最高，使用者最多。 </p>
<p>虽然不是一门通用语言，但是也有不少通用语言的特性，例如变量、函数、条件判断、循环。</p>
<h4 id="Relativity-SCAD"><a href="#Relativity-SCAD" class="headerlink" title="Relativity SCAD"></a>Relativity SCAD</h4><p>文档：<a href="https://github.com/davidson16807/relativity.scad/wiki">https://github.com/davidson16807/relativity.scad/wiki</a></p>
<p>不是独立语言，只是OpenSCAD的library，但是它提供了一套全新的API替换掉OpenSCAD原有的API的大部分功能，使用起来比OpenSCAD API简单很多。 </p>
<p>是一个个人项目，近两年基本上没有更新了，但看上去完成度很高，也许是没有什么需要更新了，可靠程度有待验证。 </p>
<p>特别之处： </p>
<ul>
<li>通过描述对象之间的相对位置，大大简化了OpenSCAD建模中繁琐的transformation </li>
<li>通过selector对部分对象进行操作，减少了boolean operation的繁琐组合</li>
</ul>
<p>感觉相当完美的解决了OpenSCAD使用过程中的痛点，写出来的代码简洁很多。 </p>
<h4 id="CraftML"><a href="#CraftML" class="headerlink" title="CraftML"></a>CraftML</h4><p>网站：<a href="https://craftml.io/">https://craftml.io/</a>， <a href="https://github.com/craftml/craftml">https://github.com/craftml/craftml</a></p>
<p>Markup language 风格的建模语言（类似HTML）。1.x版本已经被放弃，github repo都删除了；现在的2.0 beta是重写过的，但似乎也是个死项目。 </p>
<h4 id="OpenJsCAD"><a href="#OpenJsCAD" class="headerlink" title="OpenJsCAD"></a>OpenJsCAD</h4><p>网站：<a href="https://github.com/jscad/OpenJSCAD.org">https://github.com/jscad/OpenJSCAD.org</a></p>
<p>Online IDE: <a href="https://openjscad.org/">https://openjscad.org/</a> </p>
<p>使用 JavaScript 语言建模，支持类似于OpenSCAD函数风格的API，和CSG对象风格API（已经deprecated）。</p>
<p>优势是使用 JavaScript 有很强的表达能力和扩展能力，可用利用npm模块来扩展。</p>
<p>不足： </p>
<ul>
<li>API混乱，1.x的API已经deprecated，2.0 API又未完善 </li>
<li>文档错误多 </li>
<li>API使用错误时没有定位错误位置，难以debug</li>
</ul>
<h4 id="SolidPython"><a href="#SolidPython" class="headerlink" title="SolidPython"></a>SolidPython</h4><p>网站：<a href="https://github.com/SolidCode/SolidPython">https://github.com/SolidCode/SolidPython</a></p>
<p>Python frontend for OpenSCAD。用 python 来生成 OpenSCAD 代码，也是依托于通用语言的强大表达能力和扩展能力。</p>
<p>近一年开发不活跃，但项目应该依然处于有维护状态。 </p>
<p>特别之处： </p>
<ul>
<li>first-class negative space (holes) </li>
<li>直接用 + - * 运算符表示 object boolean operators</li>
</ul>
<p>不足： </p>
<ul>
<li>Python多行表达式书写不方便，需要人工调整缩进</li>
</ul>
<h4 id="ImplicitCAD"><a href="#ImplicitCAD" class="headerlink" title="ImplicitCAD"></a>ImplicitCAD</h4><p>网站：<a href="http://www.implicitcad.org/">http://www.implicitcad.org/</a>，<a href="https://github.com/colah/ImplicitCAD">https://github.com/colah/ImplicitCAD</a></p>
<p>Online IDE：<a href="http://www.implicitcad.org/editor">http://www.implicitcad.org/editor</a> </p>
<p>类似于OpenSCAD的语言，按项目文档的说法是：ExtOpenScad，with many things missing, many added, and many just working differently。 </p>
<p>项目未完全完善，处于beta测试可用状态。 </p>
<p>工具本身是用Haskell实现的。 </p>
<p>特别之处： </p>
<ul>
<li>Extrude支持函数参数，产生变化的挤出效果 </li>
<li>圆弧化object对接的边缘</li>
</ul>
<h1 id="我的选择"><a href="#我的选择" class="headerlink" title="我的选择"></a>我的选择</h1><p>最先是用 OpenSCAD 的，但是用 OpenSCAD 做稍复杂一些的模型，代码就要写得很繁琐，故此寻找有没有其他更好的方案，就有了上面一批工具的尝试。</p>
<p>使用了一段时间的 OpenJsCAD，因为是我熟悉的js语言，v1 API有丰富的参数让代码写起来简洁一些，一度认为是最佳的选择。但后来发现它正在进行的向 v2 API 的迁移太混乱了，用户很难预期到底应该使用哪种方式。另外，近来几个月的开发工作也停滞不前了，觉得项目当前的成熟度有点问题。</p>
<p>其他的几个工具也都是有很大的成熟度问题，于是只好又回到了 OpenSCAD。Relativity SCAD 是最近的发现的，只用来做过一个模型，目前的体验相当好，应该可以作为今后的主要工具。可靠性、完整度还有待在更多的使用中去验证。</p>
]]></content>
      <tags>
        <tag>Maker</tag>
      </tags>
  </entry>
  <entry>
    <title>燃气热水器恒温控制</title>
    <url>/blog/2019/02/25/thermostatic-water-heater/</url>
    <content><![CDATA[<p>为了选购热水器，做了好多功课。不像软件开发和电脑硬件领域，网上通过搜索引擎很难找到相关的专业一些的技术资料，大量的都是营销的文章，里面的技术相关的信息很混乱甚至是错误的。在看了各种广告、资料后，自己摸索总结了一些关于燃气热水器的恒温控制的原理。</p>
<span id="more"></span>

<h2 id="最基本的燃气热水器工作原理"><a href="#最基本的燃气热水器工作原理" class="headerlink" title="最基本的燃气热水器工作原理"></a>最基本的燃气热水器工作原理</h2><p>下图是最基本的燃气热水器的原理图，没有自动恒温功能，也就是老旧的那些机械旋钮控制的热水器。</p>
<img src="/blog/attachments/2019/2/heater-1.png" class="">

<p>两个阀门分别在水回路和燃气回路中，分别控制水流量和火力。可是在好多热水器中，水回路阀门的旋钮是标记为“水温调节”的，根本就是乱写。我以前就总是搞不清楚这两个旋钮怎么用——既然都有水温调节了还要控制火力干什么。</p>
<img src="/blog/attachments/2019/2/old-heater-control.jpg" class="">

<p>如果希望出水水温高一些，调节燃气阀增加供气量让火力猛一些。但是，如果进水水温太低，即使火力全开了，都到不了期望出水温度，怎么办呢？那就要控制水流量，让通过的水流少一些，就可以加热到更高温度了。这个就是所谓“水温调节”旋钮的真正作用。</p>
<p>根据我的推理，燃气热水器的水流量-温升工作范围大致上应该是处于如下图的阴影区域中。</p>
<img src="/blog/attachments/2019/2/working_area.jpg" class="">

<ul>
<li>纵轴是水流量，横轴为水的温升。</li>
<li>上面水平线是水路管道可以达到的最大流量。</li>
<li>下面水平线是水流感应的最小工作流量，少于这个流量会自动熄火保护。</li>
<li>左侧绿色曲线为火力最小时的工作曲线。更小火焰就不能稳定燃烧，会熄火。如果最小温升过大，在水温较高的夏天就会出现热水太热的问题。分段燃烧、微火苗之类的技术是尽量让这个曲线往左移，</li>
<li>右侧红色曲线是火力最大时的工作曲线，流量越大，温度升高得越少。其中，当温升为25度时对于的流量就是热水器的额定产热水能力，单位为升&#x2F;分钟。比如，产热水能力为10L的热水器，要将水温升高50度，水流量最大不可能超过5L&#x2F;min，否则温度上不去。</li>
</ul>
<h2 id="简单的恒温控制"><a href="#简单的恒温控制" class="headerlink" title="简单的恒温控制"></a>简单的恒温控制</h2><h3 id="水温恒定控制"><a href="#水温恒定控制" class="headerlink" title="水温恒定控制"></a>水温恒定控制</h3><p>热水器正常稳定燃烧的情况下，如果进水的温度不变，水流量也是固定的，出来的水温应该是稳定的。在一次洗澡的过程中，进水温度也不会有什么变化（除去刚开始时室内管道里的水温可能会不一样，过一会就稳定了），但是水量却是会变化的，原因很多，包括水压不稳定、其他地方用水影响、调节水龙头等等，水流量一变，水温就不恒定了。</p>
<p>需要让出水温度自动保持恒定，需要加入反馈控制回路。简单的方法就是探测出水口的温度，与设定温度相比较，据此控制火力大小。</p>
<img src="/blog/attachments/2019/2/heater-2.png" class="">

<p>我估计大部分低端恒温热水器的恒温控制就是这样的原理。热水器上没有机械旋钮了，变成了数码的温度设定和显示。</p>
<h3 id="自动水量调节"><a href="#自动水量调节" class="headerlink" title="自动水量调节"></a>自动水量调节</h3><p>但是有个问题，当进水温度太低时，即使火力最大也是无法输出达到设定温度的热水的，看之前的图的红色工作曲线。老式热水器怎么办呢？可以人手把水量旋钮关小一些，水流量小了温升就大了。可是现在的是电脑控制数字设定的热水器啊，怎么还能靠人去调节水量呢？</p>
<p>于是稍高一个档次的热水器就在进水水路上增加一个自动水量调节装置，这是一个记忆合金控制的阀门，会跟随进水温度而自动调节开度，水温越低它就关得越小，相当于你在冬天将热水器的进水角阀关小一点的效果。</p>
<p><strong>自动水量调节是不能提高恒温精度的！</strong>它解决的是冬天热水不够热的问题，解决方法是根据进水温度自动限制水流量，也就是相当于将水阀关小一点。当然，后果就是夏天你用大花洒可以畅快的洗澡，冬天可能就不行了，水量会变小。但是它至少保证了温度是足够的。</p>
<p>还有些热水器有“变升”功能，通过按钮选择不同的升数，说白了也就是控制进水阀门而已，选择小一点的升数就是将阀门关小一些。看看商家宣传的春秋笔法：夏天大水量的时候说舒爽，冬天水量上不去，他就不提舒爽却说节水了。</p>
<p>记忆合金自动水量调节虽然能够根据进水温度调节水流量，但是它不知道用户设定的期望出水温度，也就是不知道温差。例如15度水温，水量全开加热到35度是没问题的，要加热到50度就不行了。那么这个自动水量调节在进水温度15度时应不应该限制水量呢？限制多少合适？出厂时只能根据某个出水温度来设定流量，假设是40度，那么当你把热水器设置到50度，它温度还是上不去；而设置到35度时，本来水流量可以大一些的，它却给限制了。</p>
<h2 id="进阶的恒温控制"><a href="#进阶的恒温控制" class="headerlink" title="进阶的恒温控制"></a>进阶的恒温控制</h2><h3 id="水量伺服"><a href="#水量伺服" class="headerlink" title="水量伺服"></a>水量伺服</h3><p>水量伺服功能在比较高档的热水器才有装备，它是一个由伺服电机驱动的进水阀门，通过控制器能够比较精准的控制开合程度。</p>
<img src="/blog/attachments/2019/2/heater-3.png" class="">

<p>水量伺服的主要用途还是类似于自动水量调节，在进水温度与期望水温温差过大时降低流量。因为它是受控的，比起不能控制的自动水量调节有更强的功能：</p>
<ul>
<li>根据进水温度传感器能够得知与期望水温的温差，根据温差控制合理的水流量，保证设置到什么温度都能产出符合设定温度的热水。</li>
<li>稳定水流量：当水压发生变化，例如其他地方开水关水，会影响到热水器水流量。热水器控制器通过流量传感器监控到流量的瞬间变化，可以控制水量伺服阀门动作，去抑制流量的变化。</li>
<li>前面说到保持恒温主要是靠燃气比例阀调节火力，但是火力的调节到水温变化是有一些时间滞后的，因此温度会出现波动。有了水量伺服，控制器可以同时调节火力和微调水流量（也称为“水气双调”），达到更迅速的出水温度调节效果。</li>
<li>开机快速出水：刚点火时，水管、热交换器都是冷的，需要加热一段时间后才能逐渐到达设定温度。有了水量伺服，可以在刚开机时限制比较小的水流量，让它更快的升温；到达设定温度后，再放大回正常的水流量。</li>
</ul>
<p>严格来说，带有水量伺服的才能叫水气双调，但是现在很多宣传将记忆合金自动水量调节也称为水气双调，其实那个水量根本不能被控制。</p>
<h3 id="更多的传感器和控制手段"><a href="#更多的传感器和控制手段" class="headerlink" title="更多的传感器和控制手段"></a>更多的传感器和控制手段</h3><p>对于恒温控制，最重要（必备）的是出水温度传感器。高级热水器会增加更多的传感器用于恒温控制，例如进水温度传感器、水流量传感器。更多的控制部件，除了最基本的燃气比例阀，还有上面提到的水量伺服。我不确定风机转速调节是否会影响温度。反正就是从两个方面控制：更精确的控制燃烧，更灵敏的控制水流量。</p>
<h3 id="算法"><a href="#算法" class="headerlink" title="算法"></a>算法</h3><p>虽然说传感器越多，控制手段越多，就提供了更精确控制的可能性，但是实际效果如何，还得看控制器的算法。现在的恒温热水器控制器都是微处理器运行软件，应该都是基于 <a href="https://www.wikiwand.com/zh-hant/PID%E6%8E%A7%E5%88%B6%E5%99%A8">PID 控制</a>算法，但是参数细节和各种优化手段学问就大了。</p>
]]></content>
      <tags>
        <tag>HomeAppliance</tag>
      </tags>
  </entry>
  <entry>
    <title>DIY人体工学分体键盘</title>
    <url>/blog/2019/08/04/DIY-keyboard/</url>
    <content><![CDATA[<p><img src="/blog/2019/08/04/DIY-keyboard/mini-thumb-dactyl.jpg"></p>
<p>去年底今年初先后做了两个分体的人体工学键盘。</p>
<span id="more"></span>

<p>用着微软的人体工学键盘4000好多年了（以前写过<a href="/blog/2013/01/08/keyboard-and-mouse/">一篇介绍</a>，里面也有照片），对它唯一不满的地方是太大了，占用了桌面不少空间。实际上我根本用不着小键盘，如果不要右边那一块，桌面就宽敞不少。</p>
<p>对市面有售的键盘又做了一番了解，找不到合适的。本来左右手分区的键盘就很罕见，符合我的期望，并且买得到和买得起根本没有。不过倒是发现有不少爱好者自己设计制作键盘并且开源的，有3D打印机打印壳体，做起来似乎不会太难。Reddit的 <a href="https://www.reddit.com/r/MechanicalKeyboards/">r&#x2F;MechanicalKeyboards</a> 是爱好者的其中一个大本营，上面各种各样的键盘让人眼花缭乱。其中，一款叫做 <a href="https://github.com/adereth/dactyl-keyboard">Dactyl</a> 的键盘，和由它派生出来的 <a href="https://github.com/tshort/dactyl-keyboard">Dactyl-Manuform</a> 键盘，有不少人制作过，资料相对齐全些，外形也比较符合我的要求：左右手按键分离、带倾斜度适应手掌自然摆放的角度、占地不多。</p>
<p>做键盘首先要做的功课的选择什么键轴（按键键体）和什么键帽。大部分的机械键盘爱好者玩的也就是把这些东西换来换去。我对机械键盘没有什么情结，除了在年代久远的时候用过的 IBM PC 是机械键盘，实在理解不了噼里啪啦的敲键快感在哪里。不过要自己做，能买到的键必然是机械按键了。各种各样的键轴在发烧友口中说得神乎其神，我就挑选了据说是最平庸的 Cherry 茶轴。另外，键帽也有不同高度、倾斜度和材质的讲究。我要做的键盘的键盘体自身已经带有弧度，就不需要键帽再有高度、弧度的区别，所以选择了DSA规格的无刻（上面没有印字）键帽。</p>
<p>受了网上一些文章的影响，第一个键盘选择了比较激进的最少键位的方案：主键盘区为3行10列，连数字键都没有，很多按键需要靠同时按拇指区的切换键来打出来。这样做的好处是手在键盘的位置是固定的，手腕就搁在手托上按什么键都不需要挪动。但是代价就是脑子不够用了：拇指需要按的切换键太多，记不住。</p>
<p><img src="/blog/2019/08/04/DIY-keyboard/dactyl-manuform.jpg"></p>
<p>用了几个星期，还是难以做到肌肉记忆不去想怎么去按键，于是打算再做了一个多些按键的。之前选择最少键位方案的另外一个原因是我的3D打印机可打印面积不够大，加一行或者加一列都会超出打印床的大小了，因此首先得解决怎么能够适应打印面积的问题。</p>
<p>第一个想法是将拇指区与主键盘区分离成两个部分独立打印。这就需要修改壳体的3D模型。Dactyl 这个项目比较有意思，模型是用Clojure程序生成的，因此我也就顺便（被迫）学习了 Clojure，感受还不错，终于有机会接触 lisp 风格的函数式编程了。做出来的版本是这个：<a href="https://github.com/aleung/mini-thumb-dactyl-keyboard#dactyl-manuform-thumb-part-printed-separately-wip">dactyl_split.clj</a>，打印过一个样品出来，但我没有最终完善它的所有细节，因为有了一个新的想法。</p>
<p>Manuform的拇指区每边有6个键。一个大拇指要按6个键太困难了，有些键的位置比较难够得着，记忆的负荷也太大，总是要想一想按哪个。按照自己用下来的情况，一个拇指可以比较容易的靠肌肉记忆按2个键，最多也就是控制3个键。把拇指区改小了，打印面积也就缩小了。</p>
<p>于是就做出了我的派生作品：<a href="https://github.com/aleung/mini-thumb-dactyl-keyboard#mini-thumb-dactyl">Mini Thumb Dactyl</a> —— 缩小了拇指区的 Dactyl-Manuform。也就是标题照片里面的键盘。这个即使增加了一行和一列，都能够在我的3D打印机上打出来。</p>
<p>制作一个键盘主要包括三部分的工作：壳体、电路、固件（firmware）。壳体用3D打印机打印，如果别人做好的现成的STL模型不满足要求，就要自己去修改。电路的核心是 <a href="https://www.wikiwand.com/zh-hk/Arduino">Arduino</a> 兼容的电路板，因为左右手键盘是独立的，两边各一片。Firmware基于开源的键盘固件 <a href="https://qmk.fm/">QMK</a>，不需要自己编码，但是它的配置与按键电路连接相关（不同的按键数量会不同），按键映射也需要自己去配置。</p>
<p>开源作品是不同开发者在前人基础上不断改进的过程，但也带来了很多版本分支。网上的资料比较零碎，没有从头到尾的系统有条理的文档，而且不同资料有些描述各不一样，分别适应于某个特定的分支。寻找资料、整理信息、理清关系是比较麻烦的事情。因此我把制作的具体过程中的所有关键信息整理写成了一份 <a href="https://github.com/aleung/mini-thumb-dactyl-keyboard/blob/master/guide/index.md">How to Make a Dactyl Manuform Keyboard</a> ，以此为主线，相关的知识点可以再去阅读、搜索。</p>
]]></content>
      <tags>
        <tag>Gadget</tag>
        <tag>Maker</tag>
      </tags>
  </entry>
  <entry>
    <title>Garmin Vovoactive 3</title>
    <url>/blog/2019/08/25/Garmin-Vivoactive-3/</url>
    <content><![CDATA[<p><img src="/blog/2019/08/25/Garmin-Vivoactive-3/vivoactive3.jpg"></p>
<p>最近将 <a href="/blog/2014/03/15/pebble/" title="Pebble">Pebble Time</a> 手表换掉了，新的手表是 Garmin 的运动手表 <a href="https://www.garmin.com.cn/products/sports-recreation/vivoactive3pvd/">Vivoactive 3</a> (VA3)。</p>
<span id="more"></span>

<h2 id="功能考虑"><a href="#功能考虑" class="headerlink" title="功能考虑"></a>功能考虑</h2><p>Vivoactive系列的定位是休闲运动，支持的运动模式特别多，但是没有特别专业的功能，以跟其他主打专业的手表型号形成区分。从传感器来看挺齐全的，除了GPS、加速度、电子罗盘、心率这些基本的，还有温度、气压传感器。其实硬件多一点成本差不了多少，功能之间的区别更多是软件上的。</p>
<p>这款手表有几个型号：</p>
<ul>
<li>标准版本名称没有任何后缀</li>
<li>Music版增加了音乐播放器功能，可以连接蓝牙耳机</li>
<li>Trainer版是简化版本，少了支付功能，少了侧滑控制</li>
</ul>
<p>我的运动主要是跑步、徒步，偶然游泳和自行车，需要的运动记录功能和信息这款手表都能够提供了。VA3没有户外徒步的运动模式，但是安装 ConnectIQ 的 app 和 data field 可以满足要求。</p>
<p>原来的 Pebble &#x2F; Pebble Time 作为日常佩戴，除了时间外最主要的使用的几个功能包括：手机来电和消息推送的显示，手机音乐播放器的控制，睡眠记录。确认过 Garmin 的手表都能支持这些功能，一个手表就能同时满足日常佩戴和运动的需要了，不需要运动时再换表，方便一些。</p>
<p>Garmin Pay 关联银联卡后，可以用手表闪付。我一向跑步不带手机，现在多个支付手段也好，可是支持闪付的店铺太少，还是用处不大。</p>
<p>VA3只有一个物理按键，大部分操作都要靠触摸屏，专业表就不会这样设计，在运动过程中的操作还是物理按键更高效。它还有个侧滑控制，但用起来很不顺手，也不是太灵敏，后来我就把它关掉了。</p>
<p>看起来，trainer少了的两大功能也都不是很重要。</p>
<h2 id="耗电测试"><a href="#耗电测试" class="headerlink" title="耗电测试"></a>耗电测试</h2><p>日常活动跟踪（心率、计步等）功能都打开的前提下做了一系列耗电量测试：</p>
<ul>
<li>不停的操作手表，没有开GPS：7.5%&#x2F;h </li>
<li>平常佩戴 &#x2F; 睡眠，无操作：0.5%&#x2F;h </li>
<li>打开GPS运动模式，不使用Connect IQ data field，频繁查看手表：&lt;10%&#x2F;h </li>
<li>使用HoneyHike data field：15.9%&#x2F;h，暂停时～13%&#x2F;h </li>
<li>运动时使用了 Connect IQ 的field会比内置的耗电，耗电量与field是否处于显示状态无关，即使 field 不在当前显示页面中，也一样耗电。</li>
</ul>
<p>不运动的话，日常佩戴大概一个星期看起来是没有问题的。运动模式下GPS打开时耗电量就有点大了，例如跑步可能勉强9个小时左右，我不跑长距离越野跑，应付一个马拉松是绰绰有余了。</p>
<p>现在感觉最不足的地方是徒步时的电量续航：目前找到最适合徒步应用的 ConnectIQ data field 是 HoneyHike，但它的耗电比较大，续航时间不足6小时。轻量级的徒步往往也会超过6小时，必须要中途休息时充电才行。估计这也是这款手表不提供 hiking 模式的原因。</p>
<h2 id="ConnectIQ"><a href="#ConnectIQ" class="headerlink" title="ConnectIQ"></a>ConnectIQ</h2><p>应该说支持 ConnectIQ 的手表才能勉强算得上智能手表。Garmin提供了SDK给第三方开发手表应用。但是，Garmin ConnectIQ store里没有什么出色的非运动相关应用，至少类型上感觉没有 Pebble 丰富。当然 Pebble 也没有什么特别好的应用，智能手表的应用市场从来就没有活跃过。</p>
<p>在store上面看了受欢迎的、分数高的一些，试过后觉得值得安装的：</p>
<p>跑步：</p>
<ul>
<li>Single Field (data field) ：跑步信息一屏全显示，清晰易读，恰到好处；似乎没有怎么额外耗电</li>
</ul>
<p>徒步：</p>
<ul>
<li>HoneyHike (data field) ：野外徒步的信息一屏全显示，包括坡度、海拔、上升速率等；耗电约15%&#x2F;h</li>
<li>Chart Data Field (data field) ：显示当前活动的GPS轨迹；由于不能放大显示，无法用于走错路回溯，用处不是很大</li>
<li>Hike2+ (app) ：徒步专用app，有多个页面，信息比较多；运行时不能切换到其他widget（除非退出），这点限制太大；耗电约15%&#x2F;h</li>
</ul>
<p>其他：</p>
<ul>
<li>Battery Widget by disapptech (widget) ：电量监控，可以看到最近平均耗电量、预计使用时间</li>
<li>Battery Gauge (widget) ：比上面那个多了电量曲线；可惜目前版本在VA3上不能切换页面，等于没有用，期望以后版本能修正</li>
<li>Sun and Month by Garmin (widget) ：日出日落、月出月落、月相，很简单和基本的东西</li>
<li>Temp Pres (widget) ：我是想找温度历史曲线的，这个是气压温度二合一，界面一般</li>
</ul>
]]></content>
      <tags>
        <tag>Running</tag>
        <tag>Gadget</tag>
      </tags>
  </entry>
  <entry>
    <title>3D打印机使用新进展</title>
    <url>/blog/2020/03/08/update-about-my-3d-printer/</url>
    <content><![CDATA[<p>3D 打印机玩了两年多，最近两个月折腾了一番，又有一些新的心得。</p>
<span id="more"></span>

<h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><h3 id="建模软件：Fusion-360"><a href="#建模软件：Fusion-360" class="headerlink" title="建模软件：Fusion 360"></a>建模软件：Fusion 360</h3><p>不知道是不是因为很久以前玩过的类似软件不好用，一直对用鼠标绘图的建模软件敬而远之，因此用像写程序一样的建模语言来做模型。之前就写过我使用过的 <a href="/blog/2018/08/26/3D-modeling-language/" title="3D modeling language">3D modeling language</a>，其中主要用的是 Relativity SCAD，玩了一年半，算比较熟手了，大部分模型都是用它来做的。</p>
<p>但是建模语言也有一些缺点：</p>
<ul>
<li>不直观。需要先在纸上画草图，当时做的时候还好，脑子里能够将代码和图对得上，可是过了几个月回头想修改的时候，就要花一些时间来理解代码了。</li>
<li>所有东西都要由球体、立方体、圆柱体三种基础集合体组合而成，曲面特别难做，只能勉强用hull解决一部分。想把过渡面弄平滑基本上搞不掂，增加个支撑肋条都麻烦得要命。</li>
<li>总有各种小问题需要解决</li>
</ul>
<p>有一次在 YouTube 上看了一个视频介绍用 Autodesk Fusion 360 来做打印模型的受力分析，就安装了 Fusion 360 来试了一下，对基础操作了解之后，发现使用并不复杂，再看了一些介绍的视频，对这种基于绘图的建模软件的观感完全改变了：</p>
<ul>
<li>它同样可以跟建模语言一样做参数化设计，随时可以修改参数去改变模型尺寸。</li>
<li>通过创建多个参考面画平面图来构建出立体模型，十分直观。</li>
<li>通过底下的修改历史进度条，随时可以独立修改之前的某个操作，或者在之前某个步骤的位置插入额外的操作。并不是想我以前以为那样很难修改以前画好的东西。</li>
<li>过渡面、斜切、肋条这些细节修改做起来轻而易举。</li>
</ul>
<p>在 YouTube 上有不少很好的教学视频，边看边试，做了几个模型后基本上也能上手了，一下子就变成了我现在建模用的主力工具。Fusion 360 对个人使用提供免费无限期许可，对于功能这么强大的软件真是很不错。</p>
<p><img src="/blog/2020/03/08/update-about-my-3d-printer/fusion360.png"></p>
<h3 id="切片软件：Slic3r-PrusaSlicer-Slic3r"><a href="#切片软件：Slic3r-PrusaSlicer-Slic3r" class="headerlink" title="切片软件：Slic3r - PrusaSlicer - Slic3r++"></a>切片软件：Slic3r - PrusaSlicer - Slic3r++</h3><p>自从做好3D打印机以来一直用的是开源的 <a href="https://slic3r.org/">Slic3r</a>，它一直也没有怎么出过升级版本。直到最近两个月，我才知道 Slic3r 有一个fork叫做 <a href="https://www.prusa3d.com/prusaslicer/">PrusaSlicer</a>，在 Slic3r 基础上增加了更多的功能。在 Reddit 上有人评价：完全找不到理由从 PrusaSlicer 转回 Slic3r。既然如此，就下载下来一试，果然：Slic3r的配置选项本来已经多得眼花缭乱了，PrusaSlicer又增加了一堆。然后过了两个星期，再发现了另外一个fork：<a href="https://github.com/supermerill/slic3r">Slic3r++</a>，这虽然好像只是一个个人的项目，但它在PrusaSlicer的基础上增加了几个很好的改进：</p>
<ul>
<li>Ironing：在打印完上表面后，用打印头在上面重新再“熨”一遍，将纹理抹平。打印出来的表面平滑了很多，效果相当理想。</li>
<li>Denser infill：有了这个功能，内部填充密度可以低至4%，上表面只打2实心层，也不怎么影响上表面的封口质量。</li>
<li>打印 overhang 和 bridge 更容易一些，优化了打印路径。不过，我也观察到打印桥的时候曾经出现不合理的路径，还有需要改进的地方。</li>
</ul>
<p>它还有其他一些小改进，但就上面几个就足以让我切换到 Slic3r++ 上来了。</p>
<h2 id="打印机硬件"><a href="#打印机硬件" class="headerlink" title="打印机硬件"></a>打印机硬件</h2><h3 id="尖头喷嘴与非平面打印（non-planar）"><a href="#尖头喷嘴与非平面打印（non-planar）" class="headerlink" title="尖头喷嘴与非平面打印（non-planar）"></a>尖头喷嘴与非平面打印（non-planar）</h3><p>在YouTube看到一个介绍<a href="https://youtu.be/gmePlcU0TRw">非平面打印</a>的视频，想尝试一下，就买了一个尖头的打印喷嘴。</p>
<p>先说什么是非平面打印。FDM（熔融沉积）打印是在Z轴上一层一层的把打印材料堆积起来的，打完一层后打印头上升一层高度，再打一层。典型一层的高度是0.3mm。对于打印比较平缓的斜面时，就会有明显等高线阶梯，表面不精细。但实际上打印头是可以在Z轴上运动的，层并不一定需要为水平面。Non-plannar slicing 是通过一定的算法，让打印头在打印模型上表面时，打印层为一个曲面，减少等高线阶梯。这个思路在几年前已经在网上有描述，去年一位汉堡大学的学生将这作为他的毕业论文课题，并且基于开源Slic3r开发了一个基本可用的<a href="https://github.com/Zip-o-mat/Slic3r/tree/nonplanar">实现</a>.</p>
<p><img src="/blog/2020/03/08/update-about-my-3d-printer/nonplanar.png"></p>
<p>当打印层不在一个平面上时，打印到凹陷的地方时，打印头上面的部件就有可能碰撞到已打印的凸起位置。因此打印头突出得越多，能够打印的曲面倾斜度越大。</p>
<p>淘宝上看到有卖这种不锈钢尖头的打印喷嘴。这应该是转接了绘画喷笔的喷头，在国外网站也是早年有讨论，现在国内都量产了。比起E3D喷嘴，这种喷嘴的净空高度增加了好几毫米。</p>
<p><img src="/blog/2020/03/08/update-about-my-3d-printer/airbrush.jpg"></p>
<p>可是，换上这个喷嘴后，立马就堵丝了。检查发现应该是因为温度的问题：尖嘴处的热容量小，再加上风扇吹着，温度下降得比较快，打印材料冷却了就堵住了。升高打印温度解决了堵头问题，但多番调试始终打印效果都不理想，出现各种问题，后来就换回了普通喷嘴。</p>
<p>现在复盘一下，主要应该是这些问题：</p>
<ul>
<li>原来用的是带铁氟龙内衬的喉管，上面还是有个接缝。不知道是因为用的时间长了接缝变大，还是什么原因，材料冷却后会卡在接缝处。后来我更换了直通的喉管，进料铁氟龙管一直伸到加热块前面，中间没有任何接缝。</li>
<li>调平探头的海绵套不适配尖头外形，不能在上面卡住。我做的临时固定措施不牢固，造成自动调平的误差大，所以打印首层不能贴合打印床。</li>
<li>需要调整打印工件降温风扇的风量的吹风位置，让出料温度合适，既要保持熔融状态顺畅挤出，又要能够在挤出之后迅速冷却。怎样才是最佳的还有待实践。</li>
</ul>
<p>结果就是根本没有机会尝试到非平面打印。不过暂时也先不折腾了，更换喷嘴太麻烦。毕竟现在唯一能支持这个功能的slicer还是试验性的，日常应用还是有不少限制，等什么时候软件完善了再来试试。</p>
<h3 id="风扇"><a href="#风扇" class="headerlink" title="风扇"></a>风扇</h3><p>在试验尖头喷嘴的时候感觉风扇需要调整一下，于是将二合一散热风道的设计又重做了几个版本。</p>
<p><img src="/blog/2020/03/08/update-about-my-3d-printer/2020-02-b-1.png"></p>
<p>尝试了不同的风量比例、出风口大小、角度、吹风位置，总结了一些经验：</p>
<ul>
<li>轴流风扇的风压小，风道出风口不能收得太小，越直越好，否则出风量很小，空气甚至会在风扇处倒灌。如果换成用径流风扇（涡轮风扇）做工件散热应该会好些，但这样就得装两个风扇了，增加打印头的体积和重量。</li>
<li>向工件吹风的目的是要将喷嘴挤出的材料在刚挤出的瞬间就迅速冷却，一方面是打印悬空结构时让挤出材料不下垂，另一方面（可能）有助于减少后续冷却带来的收缩。因此，出风方向应该正对着喷嘴尖端，让挤出处的风量最大，散热效果最好。而对于已经打印出来的工件，</li>
<li>观察到打印桥的时候风力似乎会将拉丝往下压，造成桥的下垂，因此可能出风角度尽量接近水平一些有好处（不能肯定）。</li>
</ul>
<h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>更换元件，调试过程中间出过好几个问题，一度打印效果非常差。以下是遇到的几个问题，解决后基本上打印质量比较理想了。</p>
<h3 id="首层裂开上翘"><a href="#首层裂开上翘" class="headerlink" title="首层裂开上翘"></a>首层裂开上翘</h3><p>这个问题在更换风扇风道后出现，还去 StackExchange 上提过<a href="https://3dprinting.stackexchange.com/q/11800/162">问题</a>。打印首层过程中，中间裂开翘起，但是边缘贴合打印床又没有问题。尝试过清洁玻璃板、更换胶水、delta参数校准、Z校准都不起作用，最后仔细观察打印过程，发现打印丝刚挤出来的时候是贴合玻璃板的，然后它就被扯起来了，是因为前面已打印的相邻材料在冷却收缩。首层打印时关闭风扇，就不再出现这个问题。</p>
<p><img src="/blog/2020/03/08/update-about-my-3d-printer/shrink.jpg"></p>
<p>但是，我以前一直都是打印全程风扇全开的，也没有出现过这个问题。其实是因为吹风位置改变引起的，没有及时冷却刚挤出来的材料，而是变成冷却已经打印成型的模型，造成模型的收缩。后来调整吹风位置，直接吹向喷嘴尖端就好了（见上面风扇一节）。</p>
<h3 id="挤出不足"><a href="#挤出不足" class="headerlink" title="挤出不足"></a>挤出不足</h3><p>这个问题是在尝试0.2mm层高时发现的，起初认为是slicer软件问题，在github上提了issue，作者说我的0.3mm层高打印（右侧）其实也是挤出不足的。</p>
<p><img src="/blog/2020/03/08/update-about-my-3d-printer/under_extrude.jpg"></p>
<p>自从打印机装好以来，一直没有校准过挤出量，感觉上差不多。固件里的挤出参数是根据步进电机和齿轮参数算出来的，想着应该没错吧？</p>
<p>这次就认真的测量了一下：用笔在打印丝上做记号，发指令让挤出机慢速走个50mm左右，测量实际上打印丝的移动距离。惊讶的发现居然欠了15%左右，怪不得挤出不足。按实测比例修改参数，反复测量两次，大概就校准了。这时0.3mm层高的打印饱满了很多，打印0.8mm薄壁测试，用游标卡尺测量，厚度也误差很少了。</p>
<h3 id="Z-offset"><a href="#Z-offset" class="headerlink" title="Z offset"></a>Z offset</h3><p>挤出电机的系数校准后，0.2mm层高的首层依然空隙很大，没有什么变化。后来发现是打印头的Z位置不准，Z&#x3D;0 时与打印平台有零点几毫米的空隙，因此首层实际高度高了许多，自然挤出量就不够了。重新做 delta calibration 之后解决问题。</p>
<h3 id="最大挤出速度"><a href="#最大挤出速度" class="headerlink" title="最大挤出速度"></a>最大挤出速度</h3><p>打印速度可以去到多高？Delta结构的打印机，打印头移动速度在XYZ坐便轴上都可以相当快，但是这只是移动的速度，实际打印时限制打印速度的还有挤出的速度，如果材料的挤出跟不上，打印头移动得过快只会造成欠料，质量降低。而挤出速度也不是仅仅由挤出机决定的，挤出机很够力，但加热块的热量不足以融化大量材料，也挤不出来。</p>
<p>测试最大挤出速度，同样需要在打印丝上做标记。按照平常使用的打印头加热温度，每次挤出50mm，看看挤出过程中是否有停顿（打滑），寻找最快的速度。测试结果是180度时，最大挤出速度为 4mm&#x2F;s（F240）。</p>
<p>材料的长度可以换算为体积，对于1.75mm的材料，每毫米体积约为 2.4立方毫米。对于测试到的最大挤出速度，也就是最大挤出体积为 9.6mm^3&#x2F;s。</p>
<p>实际打印时，因为挤出后空间限制，造成backpressure，特别是打印填充时，挤出速度远小于理想速度。根据<a href="http://www.soliforum.com/topic/15529/finding-maximum-print-speeds/">这里</a>的测试，不同层高的实际挤出速度相对于理想速度的比例为： 0.1mm 38%，0.2mm 61%，0.3mm 92%。这个具体数值肯定会受很多因素的影响，我也懒得测试了，留个安全系数应该差不多。</p>
<p>在PrusaSlicer里面，可在 Filament Settings -&gt; Advanced -&gt; Print speed override -&gt; Max volumetric speed 设置挤出速度限制，以限制最高打印速度不超出挤出可承受速度范围。根据上面计算，0.3mm层高时不应大于 8.8mm^3&#x2F;s ，0.2mm层高时不大于 5.8。考虑增加85%的安全系数，设置成 7.5 和 4.9 比较合适。目前还不知道冷却风扇对实际挤出时的最大速度会带来多大影响。</p>
<h2 id="Marlin-Firmware"><a href="#Marlin-Firmware" class="headerlink" title="Marlin Firmware"></a>Marlin Firmware</h2><p>最近也升级了打印机的固件。<a href="https://marlinfw.org/">Marlin Firmware</a> 在长长的开发周期之后，终于正式发布了2.0版本。2.0版本主要是32bit，增加了对很多控制板的支持，但对于我用的低端 Arduino，其实没有什么区别。装2.0试了一下，感觉有点不是很稳定，不记得具体啥问题了，反正换回了1.1。惊喜的发现，其实2.0里面见到的新增功能，在1.1分支的最新版本里面都已经有了。</p>
<h3 id="加载-x2F-卸载打印材料"><a href="#加载-x2F-卸载打印材料" class="headerlink" title="加载&#x2F;卸载打印材料"></a>加载&#x2F;卸载打印材料</h3><p>升级固件后，最大的好处是装载和卸下打印丝方便多了。因为是远程送料，以前每次都要先预热打印头，等到温度够了后，手工把打印丝穿过挤出机，一直插到打印头，有融化的材料挤出来为止。要卸下打印丝也一样，预热温度够了手工抽出来。现在菜单里面就有 load&#x2F;unload 选项，固件里配置好参数，菜单一选，就自动预热，自动进&#x2F;退料到位。</p>
<h3 id="暂停"><a href="#暂停" class="headerlink" title="暂停"></a>暂停</h3><p>另外一个功能是可以在打印过程中暂停，暂停可以有两种用途：更换打印材料（换颜色）；往打印工件内部空腔放入东西（例如一块磁铁），恢复打印后就可以将上面封口，将物品封闭在打印件内部。</p>
<p><img src="/blog/2020/03/08/update-about-my-3d-printer/embed.jpg"></p>
<p>这需要在slicer中配合，往预定的层上插入M25（暂停打印）指令，打印到那个层，打印就会暂停，并且打印头移到一个安全位置。这时可以卸下原来的打印丝，换上另外一盘不同颜色的，然后菜单选择继续打印，它就会回到原来位置继续。</p>
<h3 id="Advanced-linear"><a href="#Advanced-linear" class="headerlink" title="Advanced linear"></a>Advanced linear</h3><p>按<a href="https://youtu.be/n3yK0lJ8TWM">介绍</a>，这个<a href="https://marlinfw.org/docs/features/lin_advance.html">功能</a>能够改善打印速度变化时出料不均匀的问题，不需要各种高级的回抽的设定。可是当时我测试的效果并不好，后来把它关闭了。现在看来，是因为测试前并没有先校准好挤出量，当时是出于挤出不足的状态的。以后有空可以再试一次，看看效果如何。</p>
<h2 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h2><p>前面提到，关于3D打印的很多新了解我都是从 YouTube 上面看到的，上面的关于3D打印、机械、设计方面的视频让人大开眼界。其中，对于3D打印尤其推荐一个大神 <a href="https://www.youtube.com/channel/UCiczXOhGpvoQGhOL16EZiTg">CNC Kitchen</a>，他制作了很多视频，每集关注一个主题，测试不同的打印参数、材料、后处理方式对打印效果的影响。</p>
]]></content>
      <tags>
        <tag>Maker</tag>
      </tags>
  </entry>
  <entry>
    <title>Precisely model delta printer bed shape</title>
    <url>/blog/2020/04/05/Precisely-model-delta-printer-bed-shape/</url>
    <content><![CDATA[<p>In firmware, the printable area of delta printer is set to be a circular area. But you can’t set the printing area diameter as large as the printer head reachable area (yellow circle), because the effector and fan need extra space. You have to set a smaller diameter (blue circle) to avoid impacting the belt. (Image originates from <a href="https://reprap.org/wiki/Delta_geometry">reprap</a>)</p>
<p><img src="/blog/2020/04/05/Precisely-model-delta-printer-bed-shape/delta_reachable_area.png"></p>
<p>How can I make use of most of the printer head reachable area as printable area? Slicer software e.g. Slic3r&#x2F;PrusaSlicer has feature to set bed shape from a STL file. It allows you to set bed shape in any irregular shape, and it will alert you if the part is placed outside the printable area. In this way you can set a large printing area diameter in printer firmware, and exclude the areas where interfering will happen inside slicer bed shape setting.</p>
<p>I used Fusion 360 to model the real printable area of my Kossel Mini printer. The print bed glass is 200mm diameter, so I first drew a 190mm diameter circle as the basic printable area. It’s also set into the firmware.</p>
<p>I connected the printing host software on PC to my printer and sent G-code to find out the edge positions of the printable area.</p>
<p><img src="/blog/2020/04/05/Precisely-model-delta-printer-bed-shape/calibration.jpg"></p>
<p>The orange areas are too close to the tower, where the effector will impact the belt. Yellow areas need to be excluded as well. In those areas, the fan interferes with the belt.</p>
<p><img src="/blog/2020/04/05/Precisely-model-delta-printer-bed-shape/design.png"></p>
<p>After the sketch is ready, extrude the printable areas 1mm (the height doesn’t matter) to make a body. Export it into .STL file then load it into bed shape setting of the Slic3r software.</p>
<p><img src="/blog/2020/04/05/Precisely-model-delta-printer-bed-shape/fusion360.png"></p>
<p>I also captured the sketch into a .png file and loaded it as texture of printer bed into Slic3r. Now in Slic3r viewer it shows the printer bed shape with grid and dimensions. It’s handy, isn’t it?</p>
<p><img src="/blog/2020/04/05/Precisely-model-delta-printer-bed-shape/slic3r.png"></p>
]]></content>
      <tags>
        <tag>Maker</tag>
      </tags>
  </entry>
  <entry>
    <title>Setup transparent proxy on Ubuntu</title>
    <url>/blog/2021/02/28/Setup-transparent-proxy-on-Ubuntu/</url>
    <content><![CDATA[<p>家里各种联网的设备多了，要能比较方便连上Internet，还是在路由器上设置个透明代理比起每个设备都要安装简单一些。我的目标是设置多个wifi热点，其中一个配置透明代理，有需要的设备才连上这个热点，这样可以避免在代理出什么问题的时候影响了普通的网络访问。</p>
<p>最初想直接在路由器上搞，OpenWRT支持配置多个wifi热点多个网络。但安装OpenClash后发现它是要设置iptables规则的，这是透明代理所必须，而它设置的iptables规则对所有网络都生效了，做不到仅对一个热点打开代理。OpenClash用起来似乎还问题多多，怎么配置都不太正常。</p>
<p>想起来家里还有个9年前的小电脑，用的是上网本的CPU，功耗比较低，虽然安装桌面系统它性能已经完全不能用了，但做这个用途还是足够的。而且它有一个以太网卡和一个无线网卡，正好可以充当一个次级无线路由，挂在主路由下面，物尽其用。翻出来启动一看，系统装的是Lubuntu 18.04 LTS，把软件升级了一下一切正常，那我也懒得重装系统了。</p>
<p>平常都没有怎么接触Linux系统、网络配置的东西，摸索着把东西装起来。比起网上的好多资料，应该算是比较简化的步骤，尽量沿用原系统缺省安装的软件和配置。整个过程总结如下。</p>
<span id="more"></span>

<ul>
<li><p>首先，开启OS路由功能，修改 <code>/etc/sysctl.conf</code>：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装dnsmasq-base。不要装dnsmasq，因为它会起一个服务，而NetworkManager在设置wifi hotspot后也会运行dnsmasq，造成重复的dnsmasq进程。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install dnsmasq-base</span><br></pre></td></tr></table></figure>
</li>
<li><p>如果系统里面已经有 systemd-resolved 服务，需要把它关闭，否则53端口会冲突。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl disable systemd-resolved</span><br></pre></td></tr></table></figure>
</li>
<li><p>Ubuntu的网络设备和连接是用NetworkManager进行管理的，它会自动覆盖重写<code>/etc/resolve.conf</code>文件。修改NetworkManager配置 <code>/etc/NetworkManager/NetworkManager.conf</code>，让它把<code>/etc/resolve.conf</code>里的nameserver配置指向dnsmasq。另外，如果 <code>/etc/resolve.conf</code> 是一个已经存在的链接，需要删除它。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[main]</span><br><span class="line">dns=dnsmasq</span><br></pre></td></tr></table></figure>
</li>
<li><p>运行NetworkManager的命令行交互式配置工具<code>nmtui</code>，创建一个wifi hotspot：mode选择access point，IPv4 config选择shared。如果不是远程登录，也可以直接在GUI上点击系统托盘中网络图标来配置。</p>
<ul>
<li>创建出来的子网是 <code>10.42.0.1/24</code>，而不是常见的 <code>192.168.*.*</code>。但反正能用，有什么关系呢。</li>
<li>NetworkManager会自动启动dnsmasq，DHCP也自动配置好了，无需安装任何额外软件包。</li>
</ul>
</li>
<li><p>安装clash。Clash没有安装包，就一个可执行文件。为它创建专门的clash用户。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd -U clash</span><br><span class="line">copy clash /usr/local/bin</span><br><span class="line">chown clash:clash /usr/local/bin/clash</span><br></pre></td></tr></table></figure>
</li>
<li><p>配置<code>/etc/clash/config.yaml</code>，配置方式细节参考<a href="https://github.com/Dreamacro/clash/wiki/configuration">clash文档</a>和<a href="https://lancellc.gitbook.io/clash/">gitbook</a>，下面主要强调我的配置方式：</p>
<ul>
<li>DNS设置为fake-ip模式。关于DNS工作模式，这篇文章解释得比较清楚： <a href="https://blog.skk.moe/post/what-happend-to-dns-in-proxy/">https://blog.skk.moe/post/what-happend-to-dns-in-proxy/</a></li>
<li>将DNS侦听在1053端口，以免与dnsmasq的DNS服务冲突。<br>Dnsmasq的DNS cache功能实际上不会被使用，因为往53端口流量会被iptables重定向到了clash的1053端口。但是如果关闭了dnsmasq的DNS功能，DHCP就不会下发nameserver配置给DHCP client，造成连上热点的设备没有DNS配置。</li>
</ul>
</li>
<li><p>设置iptables，让clash工作为透明代理。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">DNS rules</span></span><br><span class="line">iptables -t nat -I PREROUTING -p udp --dport 53 -j REDIRECT --to 1053</span><br><span class="line">iptables -t nat -I OUTPUT -p udp -d 127.0.0.0/8 --dport 53 -j REDIRECT --to 1053</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">All incoming TCP traffic except SSH redirect to Clash port</span></span><br><span class="line">iptables -t nat -A PREROUTING -p tcp ! --dport 22 -j REDIRECT --to-ports 7892</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">All outgoing TCP traffic except from user transmission and clash redirect to Clash port</span></span><br><span class="line">iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner debian-transmission -j ACCEPT</span><br><span class="line">iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner clash -j ACCEPT</span><br><span class="line">iptables -t nat -A OUTPUT -p tcp -j REDIRECT --to-port 7892</span><br></pre></td></tr></table></figure>

<ul>
<li>首先需要复习一下关于iptables的知识：<a href="https://www.cnblogs.com/f-ck-need-u/p/7397146.html">https://www.cnblogs.com/f-ck-need-u/p/7397146.html</a></li>
<li>我这里采用了一个比较简化的配置，规则很少。没有支持UDP代理，目前感觉没有这样的需求，迟些再看看有没有必要加上吧。</li>
<li>Clash配置中设置 redire-port 7892，用iptable REDIRECT target将包转发到此端口。<ul>
<li>另外还有一种模式为TPROXY，参考 <a href="https://gsoc-blog.ecklm.com/iptables-redirect-vs.-dnat-vs.-tproxy">Iptables REDIRECT vs. DNAT vs. TPROXY</a> 和 <a href="https://www.bilibili.com/read/cv14088928">使用 iptables 的 tproxy</a>。TPROXY只能工作于PREROUTING链，不工作于OUTPUT链，为了让本机对外流量进入代理需要配置路由规则，整个配置更复杂一些。</li>
</ul>
</li>
<li>支持代理wifi hotspot流量（PREROUTING链）和本机流量（OUTPUT链）。</li>
<li>使用了iptables的owner模块功能，配合专门的clash用户，避免流量回环。</li>
<li>来自transmission的流量（BT）也要bypass。</li>
</ul>
</li>
<li><p>将iptables规则持久化，下次启动的时候自动恢复。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install iptables-persistent</span><br><span class="line">iptables-save &gt; /etc/iptables/rules.v4</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建clash服务：<code>/etc/systemd/system/clash.service</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Clash Daemon</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">StandardError=journal</span><br><span class="line">User=clash</span><br><span class="line">Group=clash</span><br><span class="line">AmbientCapabilities=CAP_NET_BIND_SERVICE CAP_NET_ADMIN</span><br><span class="line">ExecStart=/usr/local/bin/clash -d /etc/clash/</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<ul>
<li>其中 <code>AmbientCapabilities</code> 那行是因为以非root用户运行，需要赋予权限。其实在我的这个场景下不要也行：DNS绑定的是高位端口，不是53端口，不需要<code>CAP_NET_BIND_SERVICE</code>；不代理UDP没有 <code>CAP_NET_ADMIN</code> 也无所谓。</li>
</ul>
</li>
<li><p>最后启动 clash 服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable clash</span><br></pre></td></tr></table></figure>
</li>
<li><p>装个 <a href="https://github.com/haishanh/yacd">yacd</a> 作为clash的web dashboard，管理起来会方便很多</p>
<ul>
<li><p>解压到 <code>/etc/clash/dashboard</code> 目录下面，并且在 <code>/etc/clash/config.yaml</code> 里面配置一行就行了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">external-ui: dashboard</span><br></pre></td></tr></table></figure>
</li>
<li><p>浏览器访问 <code>http://&lt;router_ip&gt;:9090/ui</code> 打开</p>
</li>
</ul>
</li>
</ul>
<hr>
<p>Update：</p>
<p>后来发现这个小电脑的wifi热点速度很慢，应该是无线网卡的问题。于是还是改回旁路由的模式。</p>
<p><img src="https://kroki.io/nwdiag/svg/eNqFkNGOgjAQRd_9igk-i6VujIb4JcaYSisQS6dpQdhs_Pe1RcUIjW_N9N577oxqecly-JsBlFbD3hZMC9hBJrHhh_QxXiygQi6MSmf3iRJ1i-YCBVbCOwEY50ZYezdGyZbGyXoTJzFZ0p_If_dm2E_KkujgRaiFak3tmLd3jDbY_YY5q7hzHN_sFTKJWjlU6mWZZLYIiOhTVF-PJ-xGfSRT4Takb_O1Cxm6VHgqpejfOhvh8kbYOgykz_W_EelA9JHHget5ucFGPzgZSjTOPGfkfGYkerva522CC0wHurhX4LjI7R86wLAH"></p>
<p>在主路由器OpenWRT上多配置了一个名为proxy的子网（bridge interface），关联了一个LAN口（要设置VLAN与其他口隔离）和一个wifi AP。通过在DHCP Server上设置DHCP-Options，把这个proxy子网的DNS和网关都需要指向安装了clash的小电脑。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">config dhcp &#x27;proxy&#x27;</span><br><span class="line">	option start &#x27;100&#x27;</span><br><span class="line">	option limit &#x27;150&#x27;</span><br><span class="line">	option interface &#x27;proxy&#x27;</span><br><span class="line">	list dhcp_option &#x27;3,192.168.3.2&#x27;</span><br><span class="line">	list dhcp_option &#x27;6,192.168.3.2&#x27;</span><br></pre></td></tr></table></figure>



]]></content>
      <tags>
        <tag>Anti-GFW</tag>
      </tags>
  </entry>
  <entry>
    <title>选择合适的5号/7号电池</title>
    <url>/blog/2021/05/04/Choose-Cell-Battery/</url>
    <content><![CDATA[<p>虽然现在内置锂电的电子产品越来越多，可是5号、7号电池的使用场景依然不少。现在这种尺寸的电池种类有很多种，包括一次性电池和可充电电池，各自有不同的特性，适合的场景各有不同。</p>
<h3 id="按图索骥选择电池"><a href="#按图索骥选择电池" class="headerlink" title="按图索骥选择电池"></a>按图索骥选择电池</h3><p>各种电池的特性各异（在下文中有介绍），选择并不容易。根据满足应用场景，尽量低成本的原则，做出下面的判断流程图。其中橙色的线是必须要满足条件才能走的路径，黑色线可以根据偏好而忽略条件判断来选择。可能会有考虑不完善之处，欢迎留言讨论。</p>
<p><img src="/blog/2021/05/04/Choose-Cell-Battery/flow.png"></p>
<span id="more"></span>

<p><em>Diagram source: <a href="https://whimsical.com/ChUoqFHMLZzKPzHiP9F5hq">https://whimsical.com/ChUoqFHMLZzKPzHiP9F5hq</a></em></p>
<h3 id="电池分类"><a href="#电池分类" class="headerlink" title="电池分类"></a>电池分类</h3><p>同样外形尺寸的电池，不同类型会有不同的编号。要选择电池类型，首先要知道它们的编号。这个<a href="https://www.wikiwand.com/en/List_of_battery_sizes">wikipedia页面</a>列出了各种标准的电池型号和尺寸。</p>
<ul>
<li>5号（AA）电池，IEC编号为R6，对应锂电池的外形规格是14500。</li>
<li>7号（AAA）电池，IEC编号为R03，对应锂电池的外形规格是10440。</li>
</ul>
<p>对于5号&#x2F;7号尺寸的电池，现在会用到的有以下种类（不推荐使用的就不列出了）：</p>
<p>一次性电池</p>
<ul>
<li><p>碱性电池：容量在2000mWh左右，缺点是时间长会漏液</p>
<ul>
<li>网上推荐品牌：小米&#x2F;紫米彩虹，京东京造，宜家</li>
</ul>
</li>
<li><p>锂铁电池：容量大，4500mWh左右；放电电流大，放电平台高且平稳，自放电极低（2%&#x2F;年）；不漏液，重量轻。价钱稍贵。</p>
<ul>
<li>目前主要可以买到的品牌：耐时，小米超级电池</li>
</ul>
</li>
</ul>
<p>可充电电池：</p>
<ul>
<li><p>镍氢电池（NiMH）：典型容量2400mWh&#x2F;960mWh，放电电流大；自放电稍大，不适合过长时间使用，但目前以Eneloop为最出色代表的低自放电电池解决了此问题，实际应用中只建议使用低自放电的；放电平台低（1.2V左右），有些电子产品会因电压太低不能用。</p>
<ul>
<li>网上推荐品牌：日本富士通FDK生产白色Eneloop（国内产的是松下evolta技术，性价比低不推荐），紫米1800（松下代工，相当于国内产Eneloop），宜家Ladda（富士通FDK生产，相当于日本产Eneloop pro）</li>
</ul>
</li>
<li><p>锂聚合物（Li-ion）电池，内置稳压电路：容量2900mWh，恒压1.5V，但会造成用电器无法识别低电量（部分产品会在低电量时降压以供检测）；因为降压电路的存在，放电电流不够大，自放电大；网上有人反映寿命不长。目前价格比较贵。</p>
</li>
<li><p>镍锌电池：放电电流大，容量2500mWh，放电平台很平稳且极高（1.6～1.7V）；循环次数少寿命短，因放电截止电压太高，在大部分用电器上会过放电而损坏。不推荐使用。</p>
</li>
<li><p>磷酸铁锂（LiFePO4）电池：放电电流大；容量低，5号尺寸典型650mAh, 2000mWh（因为要和占位桶搭配使用，相当于1000mWh，不足镍氢40%），7号尺寸只有220mAh，700mAh；放电平台很平稳3.2V，因为电压太高，需要搭配占位桶（假电池）才能用；重量轻。</p>
<ul>
<li>目前主要可以买到的品牌：倍量（其他很多品牌声称超过700mAh的都是虚标的）</li>
</ul>
</li>
</ul>
<p>另外，下面列出常见的可充锂电池。但是可充锂电池一般都是18650尺寸的，电压也高很多，并不能替代5号&#x2F;7号电池。</p>
<ul>
<li>IMR 锰酸锂（LiMn）：动力电池，电流大，容量相对小一点</li>
<li>Li-ion 液态锂离子电池：标称电压3.7V，充电截止电压4.2V；也有高压电池标称3.8V，截止4.35V</li>
<li>磷酸铁锂（LiFePO4）：标称电压3.2V，充电截止电压3.6V；耐过放电能力相对比其他类型好一点。</li>
</ul>
<p>由于锂电池的充电截止电压有几种不同，充电时一定要注意在充电器上选择正确的类型。一般的智能充电器当识别到锂电池时，都是按照缺省4.2V截止，充磷酸铁锂一定要改成3.6V。</p>
<h2 id="选择的原则"><a href="#选择的原则" class="headerlink" title="选择的原则"></a>选择的原则</h2><p>再看回开头的选择流程图，其实背后基本上是这几个原则：</p>
<ul>
<li>如果对价格不敏感，一概选择一次性锂铁电池是最省心的。无论是大电流高耗电，还是低耗电长时间使用都适用。电量也比碱性电池大不少。</li>
<li>对于低耗电的应用场合，不错的碱性电池大概1元一粒就能买到，其实是很划算的。问题就是碱性电池时间长了就漏液，各种品牌无分贵贱都无一例外。等到发现设备电量低不能工作时已经漏液了，需要隔一段时间就用万用表测量一下电压才保险。</li>
<li>充电电池，优先选择低自放电的镍氢电池，在容量、性能、价格方面都比较均衡。唯一的问题是电压太低，有些设备用一下就显示没电了，实际上电池的电量还没有用完。在有电动马达的设备中，电压低了也会显得没力。自放电低，也可以用在低耗电长时间运行的场合，例如遥控器、电子钟、电子温度计之类，不过还是得定期更换充电，不能用到没电为止，以免过放电损坏电池。</li>
<li>磷酸铁锂电池用起来比较麻烦，如果有其他选择尽量不要用它。跟其他类型电池比起来电量偏小，并不耐用。3.2V的电压，如果当成普通电池使用很容易弄坏设备；充电器也需要设置到专门的截止电压，用错会有危险。家里其他人通常不会搞，要说清楚才行。但是，在需要大电流和稳定电压的场景，充电电池中唯有磷酸铁锂才能用。</li>
<li>锂聚合物降压到1.5V的电池优势不多，目前看来没什么性价比。</li>
</ul>
]]></content>
      <tags>
        <tag>gadget</tag>
      </tags>
  </entry>
  <entry>
    <title>广州COVID-19疫情信息图</title>
    <url>/blog/2021/06/12/Guangzhou-Covid-19-infograph/</url>
    <content><![CDATA[<p>最近在看一本书《<a href="https://book.douban.com/subject/27108685/">用数据讲故事</a>》，介绍用故事思维做数据可视化。看过后想找个东西来练习一下，正好最近广州一波COVID-19瘟疫爆发，就试着做一个疫情的信息图。</p>
<p>这张图要传达些什么信息呢？我的目标是向关心疫情的普通民众解释：</p>
<ol>
<li>哪里出现了病例？</li>
<li>这些地方的疫情有多严重？</li>
<li>随着时间过去，情况发生了什么变化？</li>
<li>从一开始一个阿婆得病，到后来多处爆发，疫情是怎样变得严峻起来的？</li>
</ol>
<p>另外，信息图要在社交媒体发布，我设想它应该能在手机上比较轻松的阅读。</p>
<p><img src="/blog/2021/06/12/Guangzhou-Covid-19-infograph/jun9.png"></p>
<p><em>6月8日疫情信息图</em></p>
<span id="more"></span>

<p><strong>哪里出现了病例？</strong></p>
<p>随着疫情升温，社交媒体上传播的信息越来越纷杂，有些是不实传闻，有些是将密切接触者&#x2F;此密切接触者也当作出现病例。新闻报道和政府公告中列出的地名并不直观，例如一直说荔湾区出现疫情，我过了好多天才知道其实严重的是芳村而不是老荔湾。有些稍偏僻的地方名称不是所有人都熟知。再加上政府的防疫措施例如局部地区封闭、全民核酸检测等在全市各地都有进行，让很多人没有完全弄清楚出现病例的是哪些地方。</p>
<p>对于在哪里这个信息，用地图来表示应该是最直观的。</p>
<p><strong>这些地方的疫情有多严重？</strong></p>
<p>回答了哪里出现了病例这个问题后，接下来大家很自然的就会想知道有多少个病例，一个地方只有一两个病例和几十个病例的严重性显然是不一样的。另外，网上流传的哪儿有密切接触者的信息让人心惶惶，但密切接触者只是危险因素，已确诊病例（包括无症状感染者）才是更严谨的反映严重性的指标。</p>
<p>每个地方的数据就是一个数字，最简单和直观的展示方式就是把这个数字标出来。另外，为了直观的对比不同地区的情况，在地图上使用气泡图来反映这个数据。考虑视觉上不要太过繁杂，只使用了4种气泡大小。</p>
<p><strong>随着时间过去，情况发生了什么变化？</strong></p>
<p>上面的累计病例数字并不能反映变化的趋势：情况是已经好转，还是还在恶化中？已经层层加码的防疫措施是否起到了作用？</p>
<p>将单日的确诊数字列出来，就比较好反映趋势了。本来随时间变化的数据最典型是用折线图来表示，但我发现每日确诊数字并没有非常强的连贯性，跳跃比较厉害，可能用柱状图的效果更好一些。为了控制版面，突出重点，省略了病例很少并且最近几天没有新发病例的地区。</p>
<p><strong>从一开始一个阿婆得病，到后来多处爆发，疫情是怎样变得严峻起来的？</strong></p>
<p>这是需要更进一步发掘的信息。第一个病例出现时，大家还有点不以为然，到后来多处爆发，防疫措施不断升级，包括带走隔离密切接触者、禁止堂食、突然封闭小区做大规模核酸检测、交通封锁禁止离开等等，让市民都懵了，不知道疫情是怎样突然变得严峻起来的，封区和全民检测这些措施是必要的吗？针对这个问题，可以从很多个角度来分析。在刚开始只有十来个案例的时候，已经有传媒做了流行病学调查的信息图，将每个病例之间传播链展示出来。我不想继续在这个角度去叙述，一方面是公开资料不足够，另外我觉得大众对进一步的传播链分析并不会很感兴趣。但是，大家还是会关心为什么在一个新的地方出现病例：首先这会引起紧张，意味着疫情扩散；另外是新闻效应——原来没有病例现在出现了，肯定是有特别原因的，而已经出现病例的地方传染给家庭成员或者社区中接触的其他人，那就不太奇怪（事实上也是这样）。故此，我选择了这个角度来描述：瘟疫是怎么进入一个地区的，也就是首例的传播途径。</p>
<p>这个信息也是与地理位置相关的，故此还是在地图上展现，我用了连接图（connection map）来描述这个信息。</p>
<p><strong>图幅大小与细节</strong></p>
<p>开始做的时候对这个没有什么概念，先试着把地图底图做出来，再添加部分元素来看看效果。比我想象中好一些，基本跟做PowerPoint slides差不多的图像元素尺寸，在手机上看问题都不大。局部细节可能需要放大一级来看，但不会出现反复拖动看不到全貌的问题。最初担心可以显示的宽度不足，需要用纵向长条的图幅，而因为地图的固有比例，长图会很难排版。最终没有这个担忧，用了A4的比例，一屏就能看全。</p>
<p>为了能在手机不大的屏幕上容易阅读，尽量缩减了图的复杂性，限制色彩使用的数量。</p>
<p><strong>统计单元</strong></p>
<p>这张图的几个信息都涉及到“哪里”，到底应该用什么作为统计的单元呢？最初我的想法是与政府划定的风险区一致，但查看了公告后，发现除了芳村的中风险区是以街道为单位外，其余的都是细化到一栋楼、一个小区。这么小的地理单元在统计上意义不大。</p>
<p>后来，我决定以<a href="https://zh.wikipedia.org/wiki/%E8%A1%97%E9%81%93%E5%8A%9E%E4%BA%8B%E5%A4%84">街道</a>作为统计单元，主要原因是街道是乡级行政区，在城市管理工作中的角色很重，在当前广州的疫情防控工作中，很多措施都是在街道这个层面上进行的，另外病例所属街道的信息在政府公告上可以查到，有可靠信息源。在核心城区中的街道面积用作病例统计比较适合，不过外围城区的街道面积就要大很多，从图中可以看到可以有十倍以上差别。是否有更好的统计单元？这可能是可以改进的地方。</p>
<p><strong>反馈及修改</strong></p>
<p>在6月8日的图上，有病例的街道在地图上用了浅红色覆盖，用意是容易看出街道的地理范围。但正如上面所说，有些街道面积太大，例如番禺的洛浦、大石，只有一两个病例，就把二十多平方公里的地域标红了，容易让读者误解全部都是疫区。在6月9日的图中，做了另外一个尝试：去掉大面积的颜色覆盖，仅保留气泡。对于只有少量病例的街道，气泡并不是标注在地理中心，而是标注在病例出现的大致位置。这样做解决了疫区误解的问题，但比起之前少了街道地理区域的信息，视觉效果上好像也差了一些。</p>
<p>第一天的图容易误解可能还有一个原因是配色——浅红色让人理解为危险区域。如果改成中性的颜色可能也会好些。在《用数据讲故事》作者的blog中最近一篇文章 <a href="https://www.storytellingwithdata.com/blog/2021/6/8/colors-and-emotions-in-data-visualization">colors and emotions in data visualization</a>，正好就提到了 map of COVID-19 cases 的例子：一个图是用了红色”bloody-red”，另一个图“using more decent colors to avoid an emotion of fear”，选择了蓝-绿色系，两者传递的情感就很不一样。</p>
<p><img src="/blog/2021/06/12/Guangzhou-Covid-19-infograph/jun10.png"></p>
<p><em>6月9日疫情信息图</em></p>
<p>第二天的图还做了少量改进：气泡图用不同颜色添加了额外一个维度的信息——是否在最近3天&#x2F;7天出现新的病例。这样改动后，地图上的信息量增加了，能直观的区分出一个地区的疫情是否已经受控。不过采用的配色并不理想，辨析度不够，还需要改进。</p>
<p><strong>不足</strong></p>
<p>一个粗糙的练习作品，做出来的图在美感方面相当欠缺。配色、字体、版面设计，都是将就着做出来。一动手就暴露出自己在这方面没有知识储备，没有经验，胡乱尝试怎么都不顺眼。</p>
<p>地图上的线条比较多，包括表示传播途径的红色箭头和指示气泡对于街道名称的灰色线，显得有些杂乱，不知道有什么改进的方法。</p>
<p>最后，也是最核心的，在一张图里展示这几样信息，到底是太多了还是不够？这个故事讲好了吗？受众有没有明确？我所讲的是他们关心的吗？</p>
<p>这次疫情的数据还可以从很多不同的角度来分析，例如flyisland就做了一个图，分析传播链条中各个节点的R值，从中可以观察到有哪些超级传播者带来影响。可是他的图好像只发布在微信中，没有web上可链接的资源。</p>
]]></content>
      <tags>
        <tag>DataVisualization</tag>
      </tags>
  </entry>
  <entry>
    <title>K2G 无线路由器</title>
    <url>/blog/2022/10/09/k2g-router/</url>
    <content><![CDATA[<p>捡到一个斐信K2G无线路由器，上电连接192.168.2.1进入管理界面，发现需要密码，长按后面按钮10秒重置系统，恢复出厂设置。路由器前面只有一盏灯，红色是正在启动，变成橙色是启动完成。</p>
<p>管理界面的路径包含<code>/cgi-bin/luci</code>，这个路由器的固件应该是基于OpenWRT的。翻了一下菜单，功能不多，看到网上说这个路由器刷机资源挺丰富的，试一试。</p>
<p>这个路由器硬件是K2G A1版本，固件版本号为22.6.3.20，芯片方案 MT7620A+MT7612EN，64M内存，8MB闪存。</p>
<h2 id="刷机步骤"><a href="#刷机步骤" class="headerlink" title="刷机步骤"></a>刷机步骤</h2><p>首先刷breed（bootloader），步骤：</p>
<ol>
<li><p>从<a href="https://breed.hackpascal.net/">https://breed.hackpascal.net</a>下载breed包(<a href="./breed-mt7620-phicomm-psg1208.bin">breed-mt7620-phicomm-psg1208.bin</a>)到本地电脑。</p>
</li>
<li><p>在电脑上运行一个 http server，供下载breed安装包 (例如 <code>npx http-server ~/Download/</code>)</p>
</li>
<li><p>电脑用网线连接路由器. 运行<code>ip a</code>确认一下分配到的IP地址，后面路由器要连接这个IP来下载breed安装包</p>
</li>
<li><p>进入路由器管理界面（<a href="http://192.168.2.1）：高级设置-系统设置-自动升级-自定义升级时间，从下拉菜单中选择5分钟；按F12打开浏览器开发工具，定位到这个菜单项的HTML，将`value`修改为`05">http://192.168.2.1）：高级设置-系统设置-自动升级-自定义升级时间，从下拉菜单中选择5分钟；按F12打开浏览器开发工具，定位到这个菜单项的HTML，将`value`修改为`05</a> | &#x2F;usr&#x2F;sbin&#x2F;telnetd -l &#x2F;bin&#x2F;login.sh&#96;(注入漏洞)；选择一下其他分钟数，再点回来，确认value内的值没有丢失。然后点击web界面上的保存按钮</p>
</li>
<li><p>这时，telnetd应该就运行了。Telnet到192.168.2.1，应该能够进入shell</p>
</li>
<li><p>在shell里面执行:</p>
 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">wget http://192.168.2.229:8080/breed-mt7620-phicomm-psg1208.bin</span><br><span class="line">mtd unlock Bootloader</span><br><span class="line">mtd -r write breed-mt7620-phicomm-psg1208.bin Bootloader</span><br></pre></td></tr></table></figure>
</li>
<li><p>等待路由器重启，breed就已经被刷入</p>
</li>
</ol>
<p>进入breed web界面的方法：</p>
<ol>
<li>持续按住路由器上的reset按钮，接通路由器电源，待路由器上电后3-5秒后松开reset按钮，进入bootloader（指示灯会一直红色）</li>
<li>浏览器访问 <a href="http://192.168.1.1/">http://192.168.1.1</a></li>
<li>上面可以进行固件备份、固件安装等操作。安装固件和恢复出厂配置时需要选择闪存布局&#x2F;固件类型为”Config区(公版)”。</li>
<li>开刷前，请必须记得先「恢复出厂设置」-&gt;「Config 区 (公版)」，然后点「执行」</li>
</ol>
<p>来源：<a href="https://www.right.com.cn/FORUM/thread-325866-1-1.html">https://www.right.com.cn/FORUM/thread-325866-1-1.html</a></p>
<h2 id="固件"><a href="#固件" class="headerlink" title="固件"></a>固件</h2><p>然后下一步刷固件，网上搜索发现2020年之后没有人玩这款路由器了，后面没有什么更新，固件都是之前的。</p>
<h3 id="Padavan（老毛子）固件"><a href="#Padavan（老毛子）固件" class="headerlink" title="Padavan（老毛子）固件"></a>Padavan（老毛子）固件</h3><p>Padavan是俄罗斯（老毛子）大神改自华硕路由器系统。网上的Padavan固件基本上都没有提供K2G的版本，只找到这个提供了K2G：<a href="https://www.right.com.cn/forum/thread-4000461-1-1.html">https://www.right.com.cn/forum/thread-4000461-1-1.html</a></p>
<p>其中纯净版可以正常使用，但标准版固件有问题，重新启动或恢复出厂设置无法启动路由器。</p>
<h3 id="Pandorabox-潘多拉固件"><a href="#Pandorabox-潘多拉固件" class="headerlink" title="Pandorabox 潘多拉固件"></a>Pandorabox 潘多拉固件</h3><p>Pandorabox 基于 OpenWRT 修改而来，和 OpenWRT 几乎拥有一样的优缺点，但无线驱动比openwrt的开源驱动好很多。</p>
<ul>
<li>胜在丰富的插件和自由的固件定制</li>
<li>使用复杂</li>
</ul>
<p>忘记有没有找到K2G能用的了，反正最后用的是上面那个Padavan纯净版，没有什么插件，作为一个路由器够用了。</p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>书房里的wifi信号不是太好，但又拉不了网线进房间。台式电脑放在书房里，另外又装了台NAS，如果都走无线就太慢了。尝试使用这个K2G作为无线中继，在房间中的设备用网线连上这个中继，效果还可以，速度比电脑自己的无线网卡好。</p>
<p>Padavan的无线设置里选择无线桥接，工作模式选择“AP-Client + AP“，这时这个无线接口充当另外一个AP的客户端，配置上级AP的SSID和认证密码，就像一个客户端设备一样连上；同时这个无线接口还是一个AP，可以为其他设备提供接入，跟上级AP同一个子网，DHCP也是由上级路由器提供。</p>
<p>如果不需要为其他无线设备提供接入，只用网线，也可以选择工作模式为 “AP-Client“ only，按理说性能会好些，不过我试了一下同时充当AP速度也没有什么区别。</p>
<p>无线桥接中的工作模式选择还有 “WDS桥接“ 和 ”WDS中继“ 两种，好像是说要求上下级的路由器的芯片系列相同才行。先试的是WDS模式但没有成功，AP-Client模式能用也就不深究了。</p>
]]></content>
  </entry>
</search>
